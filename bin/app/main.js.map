{"version":3,"sources":["L.canvas.js","L.map-handling.js","core/main.js","components/breadcrumbs/breadcrumbs.js","components/form-filter/form-filter.js","components/detail-screen/detail-screen.js","components/logo/logo.js","components/map-data/map-data.js","components/map-object-info/map-object-info.js","components/map-overlay/map-overlay.js","components/mini-map/mini-map.js","components/map-tiles/map-tiles.js","components/place-item/place-item.js","components/place-search/place-search.js","components/place-point/place-point.js","core/app/app.js","components/select/select.js","core/map/map.js","core/map-controls/map-controls.js","components/select-on-map/select-on-map.js","core/header/header.js","core/place-screen/place-screen.js","core/window/window.js","fs/analytics/analytics.js","core/place-search/place-search.js","components/str-to-cost/str-to-cost.js","fs/colorize/colorize.js","fs/base-url/base-url.js","fs/core-moduls/core-moduls.js","core/places/places.js","fs/event/event.js","fs/map-legend/map-legend.js","fs/html/html.js","fs/decode-data/decode-data.js","fs/map-object-get/map-object-get.js","fs/browser-detect/browser-detect.js","fs/search/search.js","fs/time/time-to-int.js","fs/map-tiles/map-tiles.js","fs/map-sprites/map-sprites.js","fs/place-get/place-get.js","fs/url/url.js"],"names":["L","CanvasOverlay","Class","extend","initialize","userDrawFunc","options","this","_userDrawFunc","setOptions","drawing","params","canvas","_canvas","redraw","_frame","Util","requestAnimFrame","_redraw","onAdd","map","_map","DomUtil","create","size","getSize","width","x","height","y","animated","zoomAnimation","Browser","any3d","addClass","_panes","overlayPane","appendChild","on","_reset","_resize","_animateZoom","onRemove","getPanes","removeChild","off","this_canvas","addTo","addLayer","resizeEvent","newSize","topLeft","containerPointToLayerPoint","setPosition","bounds","getBounds","zoomScale","getEast","getWest","zoom","getZoom","e","scale","getZoomScale","offset","_getCenterOffset","center","_multiplyBy","subtract","_getMapPanePos","style","TRANSFORM","getTranslateString","canvasOverlay","LanguageContent","ru","touch","scroll","scrollMac","Map","mergeOptions","gestureHandlingOptions","text","duration","draggingMap","GestureHandling","Handler","addHooks","_handleTouch","bind","_setupPluginOptions","_setLanguageContent","_disableInteractions","_container","addEventListener","DomEvent","_handleScroll","_handleMouseOver","_handleMouseOut","_handleDragging","removeHooks","_enableInteractions","removeEventListener","type","dragging","disable","scrollWheelZoom","tap","enable","gestureHandlingText","languageContent","lang","_getUserLanguage","indexOf","split","mac","navigator","platform","toUpperCase","scrollContent","setAttribute","languages","language","userLanguage","ignoreList","ignoreElement","i","length","hasClass","target","touches","removeClass","_isScrolling","metaKey","ctrlKey","preventDefault","clearTimeout","setTimeout","warnings","document","getElementsByClassName","addInitHook","runApp","__","core","fs","coreModuls","location","window","pathname","$","get","places","data","decodeData","$app","$map","trigger","includes","concat","place","detailScreen","href","breadcrumbs","links","tpl","position","name","url","link","formFilter","global","reset","query","getQuery","click","closest","toggleClass","parent","each","push","attr","find","join","value","val","cost","strToCost","h","Math","floor","m","time","search","angle","types","kp","prop","snt","distance","train","direction","id","eco","forest","railroad","_id","_name","_url","_description","_type","_mobileHeader","_close","_address","_city","_car","_railroad","_market","_water","_eco","_price","_medic","_markets","_bradcrumbs","_forest","_places","point","site","latT","latB","lonL","lonR","https","cian_url","yandex_url","move_url","sob_url","avito_url","cian_img","yandex_img","avito_img","sob_img","move_img","site_link","medic","price","developer","p","d","market","car","city","address","a","mode","folder","detail_tpl","container_tpl","description","canonical","_ads","ico","image","contentItem","v","moscow","_routeurl","route","markets","c","water","closests","min","max","median","title","toFixed","from","component","to","src","URL","host","replace","objToUrl","deal_type","engine_version","object_type[0]","offer_type","leftLongitude","topLatitude","rightLongitude","bottomLatitude","map_center","ll","z","btoa","JSON","stringify","searchArea","latBottom","latTop","lonLeft","lonRight","near","outerHTML","alt","classname","callback","simpleItem","obj","uri","encodeURIComponent","Object","entries","_ref","_ref2","_slicedToArray","key","remove","$screen","$detailScreen","empty","append","history","pushState","drawMap","marker","icon","divIcon","className","gestureHandling","tileLayer","mapTiles","simple","attribution","ctx","getContext","clearRect","mapData","mapOverlay","preventOpenInBrowser","is","analytics","store","hash","stop","animate","scrollTop","top","logo","getData","e2","DATA","k","mapObjectInfo","mapId","string","$container","charAt","slice","count","icons","mapSprites","img","Image","getIcons","drawIcons","resize","dot","latLngToContainerPoint","bb","x1","x2","y1","y2","drawImage","point_green","point_blue","water_depth","path","line","points","beginPath","strokeStyle","lineWidth","lineJoin","lineCap","moveTo","lineTo","stroke","visible","roads","point_yellow","recicle","airport","trash","radiation","factory","energy","power","black_mesa","army","miniMap","lat","lon","result","offsetT","offsetL","tileset","dark","tiles","l","changeClass","setTiles","n","setUrl","placeItem","_miniMap","_color","color","_rjd","event","searchdata","results","substringSearch","multiply","keys","undefined","inArray","res","b","Number","match","onlyVisible","placePoint","0","s","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","changeColor","colorize","fillStyle","arc","PI","fill","closePath","browserDetect","browser","browserName","isMobile","select","selectOnMap","t","leafletMap","attributionControl","setView","control","tileEvent","tile","_this","changeOverlay","overlay","css","backgroundColor","mapLegend","$mapControls","layers","default","selected","$selectLayer","change","layer","removeSelect","dataPlaces","offsetX","offsetY","objects","el","posX","posY","rect","getBoundingClientRect","r","left","placeGet","place_id","place_name","place_url","mapObjectGet","$header","change_to","placeScreen","$window","headerHeight","outerHeight","innerHeight","vh","documentElement","setProperty","event_url","amplitude","getInstance","logEvent","ym","$placeSearch","keyup","which","test","rgba","g","interpolation","minFrom","maxFrom","current","minTo","maxTo","blendColors","base","added","mix","round","toInt","mcad_road","mcad","primary_road","primary","baseUrl","moduls","$places","showDetailScreen","currentTarget","setLatLng","hasLayer","not","$last","last","appendItems","render","elem","eventName","listners","unbind","html","str","trim","cities","object","full","nameOffset","verOffset","ix","nav","nAgt","appVersion","userAgent","appName","fullVersion","parseFloat","majorVersion","parseInt","substring","lastIndexOf","toLowerCase","isNaN","check","iOS","MSStream","ratio","devicePixelRatio","screen","iphoneX","vendor","opera","substr","weight","proto","in","out","_res","normalStr","pos","w","nl","sl","tempItem","copyObject","foundPos","sort","compare","comparison","assign","inString","wordsSearch","words","wsl","wl","fullMatch","arr","getKey","isFind","isNotFind","index","_result","rl","format","_ref3","_ref4"],"mappings":"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","file":"main.js","sourcesContent":["/*\n UPDATE July 2016 , moved and updated to here: https://github.com/Sumbera/gLayers.Leaflet\n \n Generic  Canvas Overlay for leaflet, \n Stanislav Sumbera, April , 2014\n\n - added userDrawFunc that is called when Canvas need to be redrawn\n - added few useful params fro userDrawFunc callback\n  - fixed resize map bug\n  inspired & portions taken from  :   https://github.com/Leaflet/Leaflet.heat\n  \n  License: MIT\n\n*/\n\n\nL.CanvasOverlay = L.Class.extend({\n\n    initialize: function (userDrawFunc, options) {\n        this._userDrawFunc = userDrawFunc;\n        L.setOptions(this, options);\n    },\n\n    drawing: function (userDrawFunc) {\n        this._userDrawFunc = userDrawFunc;\n        return this;\n    },\n\n    params:function(options){\n        L.setOptions(this, options);\n        return this;\n    },\n    \n    canvas: function () {\n        return this._canvas;\n    },\n\n    redraw: function () {\n        if (!this._frame) {\n            this._frame = L.Util.requestAnimFrame(this._redraw, this);\n        }\n        return this;\n    },\n\n    \n  \n    onAdd: function (map) {\n        this._map = map;\n        this._canvas = L.DomUtil.create('canvas', 'leaflet-heatmap-layer');\n\n        var size = this._map.getSize();\n        this._canvas.width = size.x;\n        this._canvas.height = size.y;\n\n        var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n        L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n\n\n        map._panes.overlayPane.appendChild(this._canvas);\n\n        map.on('moveend', this._reset, this);\n        map.on('resize',  this._resize, this);\n\n        if (map.options.zoomAnimation && L.Browser.any3d) {\n            map.on('zoomanim', this._animateZoom, this);\n        }\n\n        this._reset();\n    },\n\n    onRemove: function (map) {\n        map.getPanes().overlayPane.removeChild(this._canvas);\n \n        map.off('moveend', this._reset, this);\n        map.off('resize', this._resize, this);\n\n        if (map.options.zoomAnimation) {\n            map.off('zoomanim', this._animateZoom, this);\n        }\n        this_canvas = null;\n\n    },\n\n    addTo: function (map) {\n        map.addLayer(this);\n        return this;\n    },\n\n    _resize: function (resizeEvent) {\n        this._canvas.width  = resizeEvent.newSize.x;\n        this._canvas.height = resizeEvent.newSize.y;\n    },\n    _reset: function () {\n        var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n        L.DomUtil.setPosition(this._canvas, topLeft);\n        this._redraw();\n    },\n\n    _redraw: function () {\n        var size     = this._map.getSize();\n        var bounds   = this._map.getBounds();\n        var zoomScale = (size.x * 180) / (20037508.34  * (bounds.getEast() - bounds.getWest())); // resolution = 1/zoomScale\n        var zoom = this._map.getZoom();\n     \n        // console.time('process');\n\n        if (this._userDrawFunc) {\n            this._userDrawFunc(this,\n                                {\n                                    canvas   :this._canvas,\n                                    bounds   : bounds,\n                                    size     : size,\n                                    zoomScale: zoomScale,\n                                    zoom : zoom,\n                                    options: this.options\n                               });\n        }\n       \n       \n        // console.timeEnd('process');\n        \n        this._frame = null;\n    },\n\n    _animateZoom: function (e) {\n        var scale = this._map.getZoomScale(e.zoom),\n            offset = this._map._getCenterOffset(e.center)._multiplyBy(-scale).subtract(this._map._getMapPanePos());\n\n        this._canvas.style[L.DomUtil.TRANSFORM] = L.DomUtil.getTranslateString(offset) + ' scale(' + scale + ')';\n\n    }\n});\n\nL.canvasOverlay = function (userDrawFunc, options) {\n    return new L.CanvasOverlay(userDrawFunc, options);\n};\n","'use strict';\n(function(){\n    var LanguageContent = {\n        \n        ru: {\n            touch: \"Коснитесь двумя для перемещения по карте\",\n            scroll: \"Чтобы изменить масштаб, нажмите ctrl + прокрутка\",\n            scrollMac: \"Чтобы изменить масштаб, нажмите \\u2318 + прокрутка\"\n        }\n    };\n\n    /*\n    * * Leaflet Gesture Handling **\n    * * Version 1.1.8\n    */\n\n    L.Map.mergeOptions({\n        gestureHandlingOptions: {\n            text: {},\n            duration: 1000\n        }\n    });\n\n    var draggingMap = false;\n\n    var GestureHandling = L.Handler.extend({\n        addHooks: function () {\n            this._handleTouch = this._handleTouch.bind(this);\n\n            this._setupPluginOptions();\n            this._setLanguageContent();\n            this._disableInteractions();\n\n            //Uses native event listeners instead of L.DomEvent due to issues with Android touch events\n            //turning into pointer events\n            this._map._container.addEventListener(\"touchstart\", this._handleTouch);\n            this._map._container.addEventListener(\"touchmove\", this._handleTouch);\n            this._map._container.addEventListener(\"touchend\", this._handleTouch);\n            this._map._container.addEventListener(\"touchcancel\", this._handleTouch);\n            this._map._container.addEventListener(\"click\", this._handleTouch);\n\n            L.DomEvent.on(this._map._container, \"mousewheel\", this._handleScroll, this);\n            L.DomEvent.on(this._map, \"mouseover\", this._handleMouseOver, this);\n            L.DomEvent.on(this._map, \"mouseout\", this._handleMouseOut, this);\n\n            // Listen to these events so will not disable dragging if the user moves the mouse out the boundary of the map container whilst actively dragging the map.\n            L.DomEvent.on(this._map, \"movestart\", this._handleDragging, this);\n            L.DomEvent.on(this._map, \"move\", this._handleDragging, this);\n            L.DomEvent.on(this._map, \"moveend\", this._handleDragging, this);\n        },\n\n        removeHooks: function () {\n            this._enableInteractions();\n\n            this._map._container.removeEventListener(\"touchstart\", this._handleTouch);\n            this._map._container.removeEventListener(\"touchmove\", this._handleTouch);\n            this._map._container.removeEventListener(\"touchend\", this._handleTouch);\n            this._map._container.removeEventListener(\"touchcancel\", this._handleTouch);\n            this._map._container.removeEventListener(\"click\", this._handleTouch);\n\n            L.DomEvent.off(this._map._container, \"mousewheel\", this._handleScroll, this);\n            L.DomEvent.off(this._map, \"mouseover\", this._handleMouseOver, this);\n            L.DomEvent.off(this._map, \"mouseout\", this._handleMouseOut, this);\n\n            L.DomEvent.off(this._map, \"movestart\", this._handleDragging, this);\n            L.DomEvent.off(this._map, \"move\", this._handleDragging, this);\n            L.DomEvent.off(this._map, \"moveend\", this._handleDragging, this);\n        },\n\n        _handleDragging: function (e) {\n            if (e.type == \"movestart\" || e.type == \"move\") {\n                draggingMap = true;\n            } else if (e.type == \"moveend\") {\n                draggingMap = false;\n            }\n        },\n\n        _disableInteractions: function () {\n            this._map.dragging.disable();\n            this._map.scrollWheelZoom.disable();\n            if (this._map.tap) {\n                this._map.tap.disable();\n            }\n        },\n\n        _enableInteractions: function () {\n            this._map.dragging.enable();\n            this._map.scrollWheelZoom.enable();\n            if (this._map.tap) {\n                this._map.tap.enable();\n            }\n        },\n\n        _setupPluginOptions: function () {\n            //For backwards compatibility, merge gestureHandlingText into the new options object\n            if (this._map.options.gestureHandlingText) {\n                this._map.options.gestureHandlingOptions.text = this._map.options.gestureHandlingText;\n            }\n        },\n\n        _setLanguageContent: function () {\n            var languageContent;\n            //If user has supplied custom language, use that\n            if (this._map.options.gestureHandlingOptions && this._map.options.gestureHandlingOptions.text && this._map.options.gestureHandlingOptions.text.touch && this._map.options.gestureHandlingOptions.text.scroll && this._map.options.gestureHandlingOptions.text.scrollMac) {\n                languageContent = this._map.options.gestureHandlingOptions.text;\n            } else {\n                //Otherwise auto set it from the language files\n\n                //Determine their language e.g fr or en-US\n                var lang = this._getUserLanguage();\n\n                //If we couldn't find it default to en\n                if (!lang) {\n                    lang = \"ru\";\n                }\n\n                //Lookup the appropriate language content\n                if (LanguageContent[lang]) {\n                    languageContent = LanguageContent[lang];\n                }\n\n                //If no result, try searching by the first part only. e.g en-US just use en.\n                if (!languageContent && lang.indexOf(\"-\") !== -1) {\n                    lang = lang.split(\"-\")[0];\n                    languageContent = LanguageContent[lang];\n                }\n\n                if (!languageContent) {\n                    // If still nothing, default to English\n                    // console.log(\"No lang found for\", lang);\n                    lang = \"ru\";\n                    languageContent = LanguageContent[lang];\n                }\n            }\n\n            //TEST\n            // languageContent = LanguageContent[\"bg\"];\n\n            //Check if they're on a mac for display of command instead of ctrl\n            var mac = false;\n            if (navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0) {\n                mac = true;\n            }\n\n            var scrollContent = languageContent.scroll;\n            if (mac) {\n                scrollContent = languageContent.scrollMac;\n            }\n\n            this._map._container.setAttribute(\"data-gesture-handling-touch-content\", languageContent.touch);\n            this._map._container.setAttribute(\"data-gesture-handling-scroll-content\", scrollContent);\n        },\n\n        _getUserLanguage: function () {\n            var lang = navigator.languages ? navigator.languages[0] : navigator.language || navigator.userLanguage;\n            return lang;\n        },\n\n        _handleTouch: function (e) {\n            //Disregard touch events on the minimap if present\n            var ignoreList = [\"leaflet-control-minimap\", \"leaflet-interactive\", \"leaflet-popup-content\", \"leaflet-popup-content-wrapper\", \"leaflet-popup-close-button\", \"leaflet-control-zoom-in\", \"leaflet-control-zoom-out\"];\n\n            var ignoreElement = false;\n            for (var i = 0; i < ignoreList.length; i++) {\n                if (L.DomUtil.hasClass(e.target, ignoreList[i])) {\n                    ignoreElement = true;\n                }\n            }\n\n            if (ignoreElement) {\n                if (L.DomUtil.hasClass(e.target, \"leaflet-interactive\") && e.type === \"touchmove\" && e.touches.length === 1) {\n                    L.DomUtil.addClass(this._map._container, \"leaflet-gesture-handling-touch-warning\");\n                    this._disableInteractions();\n                } else {\n                    L.DomUtil.removeClass(this._map._container, \"leaflet-gesture-handling-touch-warning\");\n                }\n                return;\n            }\n            // screenLog(e.type+' '+e.touches.length);\n            if (e.type !== \"touchmove\" && e.type !== \"touchstart\") {\n                L.DomUtil.removeClass(this._map._container, \"leaflet-gesture-handling-touch-warning\");\n                return;\n            }\n            if (e.touches.length === 1) {\n                L.DomUtil.addClass(this._map._container, \"leaflet-gesture-handling-touch-warning\");\n                this._disableInteractions();\n            } else {\n                this._enableInteractions();\n                L.DomUtil.removeClass(this._map._container, \"leaflet-gesture-handling-touch-warning\");\n            }\n        },\n\n        _isScrolling: false,\n\n        _handleScroll: function (e) {\n            if (e.metaKey || e.ctrlKey) {\n                e.preventDefault();\n                L.DomUtil.removeClass(this._map._container, \"leaflet-gesture-handling-scroll-warning\");\n                this._map.scrollWheelZoom.enable();\n            } else {\n                L.DomUtil.addClass(this._map._container, \"leaflet-gesture-handling-scroll-warning\");\n                this._map.scrollWheelZoom.disable();\n\n                clearTimeout(this._isScrolling);\n\n                // Set a timeout to run after scrolling ends\n                this._isScrolling = setTimeout(function () {\n                    // Run the callback\n                    var warnings = document.getElementsByClassName(\"leaflet-gesture-handling-scroll-warning\");\n                    for (var i = 0; i < warnings.length; i++) {\n                        L.DomUtil.removeClass(warnings[i], \"leaflet-gesture-handling-scroll-warning\");\n                    }\n                }, this._map.options.gestureHandlingOptions.duration);\n            }\n        },\n\n        _handleMouseOver: function (e) {\n            this._enableInteractions();\n        },\n\n        _handleMouseOut: function (e) {\n            if (!draggingMap) {\n                this._disableInteractions();\n            }\n        }\n\n    });\n\n    L.Map.addInitHook(\"addHandler\", \"gestureHandling\", GestureHandling);\n\n    \n})();\n","var runApp = function(){\n    \n  __.core = __.fs.coreModuls(['$window','$app','$header','$map','$places','$placeSearch','$mapControls']);\n  \n  let location = window.location.pathname;\n  \n  //if (location == '/' || location == '/index.html') { \n  \n      $.get('/bin/data/data.json', function (places) {\n      \n      let data = __.fs.decodeData(places);\n      \n\n      __.core.$app.data('data', data);\n\n      __.core.$map.trigger('createMap');\n      \n      setTimeout(function(){\n        __.core.$map.trigger('renderMap', {\n          data: data\n        });\n      }, 300);  \n      /* \n      __.core.$places.trigger('renderList', {\n        places: data.places,\n        onlyVisible: false\n      });\n      */ \n        \n      if (location.includes('/place_')) {\n\n        $.get(`/bin/data${location}data.json`, function(place){\n          \n          __.detailScreen({place:place});\n          \n        });\n        \n      }  \n        \n        \n    });\n  \n  \n    window.addEventListener('popstate', function(e){\n      window.location.href = window.location.href; \n    }, false);\n    \n  //} \n  \n\n  \n  \n}\n\n  \n","__.breadcrumbs = function (params) {\n\n    let links = params.links,\n        tpl = '';\n\n    for (var i = 0; i < links.length; i++){\n\n        let position = `<meta itemprop=\"position\" content=\"${i+1}\">`,\n            name = links[i].name,\n            url = links[i].url,\n            link = links[i].link;\n\n        if ( link == false ) {\n\n            tpl += `\n          <li itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"http://schema.org/ListItem\">\n            <span itemprop=\"name\">${name}</span>\n            ${position}\n            <meta itemprop=\"item\" content=\"${url}\">\n          </li>    \n            `;\n\n        } else {\n\n            tpl += `\n          <li class=\"breadcrumbs_item\" itemprop=\"itemListElement\" itemscope=\"\" itemtype=\"http://schema.org/ListItem\">\n            <span itemprop=\"name\">\n              <a class=\"breadcrumbs_link\" itemprop=\"item\" href=\"${url}\">${name}</a>\n            </span>\n            ${position}\n          </li>`;\n\n        }\n\n    }\n\n    return `\n<ol class=\"breadcrumbs\" itemscope=\"\" itemtype=\"http://schema.org/BreadcrumbList\">\n  ${tpl}\n</ol>\n    `;\n\n}    ","__.formFilter = function (params) {\n  \n  \n  if (typeof global == 'undefined') {\n    \n    reset();\n    \n    let query = getQuery();\n    \n    $('.filter-form').data('filter', query);\n    \n    \n    \n    $('.place-search__filter').click(function(e){\n      \n      $('.filter-form').closest('.panel__header').toggleClass('panel__header_absolute');\n      \n      $('.filter-form').toggleClass('filter-form_hidden');\n      \n    });\n    \n    $('.filter-form .form-tab__header').click(function(e){\n      \n      $(this).parent('.form-tab').toggleClass('form-tab_hidden');\n      \n    });\n\n    $('.select-direction svg').click(function(e){\n\n      let text = [];\n\n      $('.svg-select_active').each(function(){\n\n        text.push( $(this).attr('data-name') )\n\n      })\n\n      $(this).parent().find('span').text( text.join(', ') );\n\n    })\n\n    \n    $('#range-name_0').on('input change', function(e){\n      \n      let value = $(this).val();\n      let cost = __.strToCost({value:value})[0]\n\n\n      $(this).parent().find('span').text(`до ${cost} руб.`);\n    });\n\n    $('#range-name_1').on('input change', function(e){\n      \n      let value = $(this).val();\n      let text = 'Время в пути до Москвы до';\n      let h = Math.floor(value / 60);\n      let m = value % 60;\n      let time = (h) ? `${h}ч ${m}мин` : `${m}мин`;\n      \n      $(this).parent().find('span').text(`${text} ${time}`);\n    });\n   \n    $('.filter-form .svg-select').click(function(e){\n\n      $(this).toggleClass('svg-select_active');\n      \n    })\n    \n    $('#btn-reset').click(function(e){\n      reset();\n      \n      let query = getQuery();\n      \n      $('.filter-form').data('filter', query);\n      \n      __.search({text:''});\n      \n      $('.place-search__filter').click();\n      \n    });\n    \n    $('#btn-find').click(function(e){\n      \n      let query = getQuery();\n      \n      $('.filter-form').data('filter', query);\n      \n      __.search(query);\n      \n      $('.place-search__filter').click();\n      \n    });\n    \n  }\n  \n\n  \n  \n  function getQuery(){\n    \n    let types = (function(){\n      \n      let obj = {\n        kp : $('#ch-name_1').prop('checked'),\n        snt : $('#ch-name_2').prop('checked')\n      }\n      \n      return obj;\n    })();\n    \n    let cost = $('#range-name_0').val();\n    let distance = $('#range-name_1').val();\n    let train = $('#ch-name_3').prop('checked');\n    let direction = (function(){\n      \n      let angle = [];\n      \n      $('.svg-select_active').each(function(i,e){\n        \n        let id = $(e).attr('id');\n        \n        if (id == 'top')          angle.push([226,293]);\n        if (id == 'top-right')    angle.push([204,225]);\n        if (id == 'right')        angle.push([159,203]);\n        if (id == 'bottom-right') angle.push([114,158]);\n        if (id == 'bottom')       angle.push([69,113]);\n        if (id == 'bottom-left')  angle.push([24,68]); \n        if (id == 'left')         angle.push([339, 360], [0,23]);\n        if (id == 'top-left' )    angle.push([294,338]);  \n           \n      });\n      \n      if (!angle.length) angle.push([226,293], [294,338], [204,225], [69,113], [114,158], [24,68], [339, 360], [0,23], [159,203]);\n      \n      return angle;\n      \n    })();\n    \n    let eco = $('#ch-name_4').prop('checked');\n\n    let forest = $('#ch-name_5').prop('checked');\n    \n    let name = $('#place-search-input').val();\n    \n    return {\n      text : name,\n      types : types,\n      distance : distance,\n      railroad : train,\n      direction : direction,\n      cost : cost,\n      eco : eco,\n      forest : forest\n    }\n    \n  }\n  \n  function reset(){\n    $('#ch-name_1, #ch-name_2').prop( 'checked', true );  \n    $('#ch-name_3, #ch-name_4, #ch-name_5').prop( 'checked', false );\n    $('#range-name_1').val(50000000);\n    $('#range-name_1').val(300);\n    $('.svg-select').removeClass('svg-select_active');\n    $('#place-search-input').val('').attr('data-value','');\n  }\n  \n  return false;\n  \n}","__.detailScreen = function (params) {\n\n  let detail_tpl = '',\n    container_tpl = '',\n    place = params.place;\n\n  if (place) {\n\n    let _id,\n        _name,\n        _url,\n        _description,\n        _type,\n        _mobileHeader,\n        _close,\n        _map,\n        _class,\n        _address,\n        _city,\n        _moscow,\n        _car,\n        _railroad,\n        _market,\n        _water,\n        _eco,\n        _price,\n        _developer,\n        _site,\n        _medic,\n        _markets,\n        _bradcrumbs,\n        _forest,\n        _places;\n\n\n    _id = place.id;\n\n\n    _name = place.name;\n\n    \n    _url = (function (id) {\n      let folder = Math.floor(id / 100) * 100,\n        url = `https://myhousehub.ru/places/${folder}/place_${id}/`;\n      return url;\n\n    })(place.id);\n\n\n    _description = place.description;\n\n\n    _type = (place.type) ? `${place.type}` : '';\n\n\n    _mobileHeader = (function(mode){\n\n      return (mode == 'turbo' || mode == 'amp') ? '' : \n      `<div class=\"header-mobile\">\n          <a href=\"/\" id=\"close-screen\" name=\"close-screen\" role=\"button\" class=\"btn btn_back\">Назад</a>\n      </div>`;\n\n    })(params.mode); \n\n \n\n    _close = (params.mode == 'turbo' || params.mode == 'amp') ? '' : `<div class=\"close-icon\" role=\"button\" id=\"close-panel\"></div>`;\n\n\n    _map = (function (mode, url) {\n      let map = '',\n          point = place.point;\n\n      if (mode == 'amp') {\n        map = \n        `<a href=\"${url}\">\n          <amp-img alt=\"map\" src=\"https://static-maps.yandex.ru/1.x/?ll=${point[0]},${point[1]}&size=450,450&z=13&l=map&pt=${point[0]},${point[1]}\" layout=\"responsive\" width=\"450\" height=\"450\" />\n        </a> `;\n      }\n\n      return map;\n\n    })(params.mode, params.canonical);\n\n    _ads = (function(mode){\n      return (mode != 'amp') ? `<script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js\"></script>\n<!-- ads-box_1 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-3027365012127484\"\n     data-ad-slot=\"5702464578\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n     (adsbygoogle = window.adsbygoogle || []).push({});\n</script>` : `<amp-ad width=\"100vw\" height=\"320\"\n     type=\"adsense\"\n     data-ad-client=\"ca-pub-3027365012127484\"\n     data-ad-slot=\"5702464578\"\n     data-auto-format=\"rspv\"\n     data-full-width=\"\">\n  <div overflow=\"\"></div>\n</amp-ad>`;\n    })(params.mode);\n\n    _places = (function(places){\n\n      let tpl = '';\n      let ico = image(params.mode, `/favicon-32.png`, 'myhousehub', 16, 16, 'favicon');\n\n      for (var i = 0; i < places.length; i++){\n\n        let place = places[i],\n            folder = Math.floor(place.id / 100) * 100;\n            \n\n        tpl += `<li class=\"simple-list__item flex-line\">${ico}<a href=\"https://myhousehub.ru/places/${folder}/place_${place.id}/\">${place.type} ${place.name}</a></li>`\n\n      }\n\n      return (tpl) ? `<ul class=\"simple-list\">${tpl}</ul>` : '';\n\n    })(place.places);\n\n\n    _class = contentItem('Класс', place.class, function (v) {\n      return v\n    });\n\n\n    _address = (function (address, distance, angle) {\n\n      let a = (address) ? `${address}. ` : '';\n      let m = `<b class=\"value\">${distance} км</b>`;    \n      let d = '';\n        \n        if ( angle >= 339 && angle <= 360 ){\n          d = 'Западное направление';\n        }\n    \n        if ( angle >= 0 && angle <= 23 ){\n          d = 'Западное направление'\n        }\n\n        \n        if ( angle >= 24 && angle <= 68){\n          d = 'Юго-западное направление'\n        }\n        \n        if ( angle >= 69 && angle <= 113 ){\n          d = 'Южное направление'\n        }\n        \n        if ( angle >= 114 && angle <= 158){\n          d = 'Юго-восточное направление'\n        }\n        \n        if ( angle >= 159 && angle <= 203 ){\n          d = 'Восточное направление'\n        }\n        \n        if ( angle >= 204 && angle <= 225 ){\n          d = 'Северо-восточное направление'\n        }\n        \n        if ( angle >= 226 && angle <= 293){\n          d = 'Северное направление'\n        }\n        \n        if ( angle >= 294 && angle <= 338 ){\n          d = 'Северо-западное направление'\n        }\n\n      return `<p>Адрес посёлка: ${a}${d}, ${m} от центра Москвы.</p>`;\n\n    })(place.address.name, place.moscow.distance, place.moscow.angle);\n\n\n    _city = (function(city){\n\n      return `<p>${city.closest.name} в <b class=\"value\">${city.distance} км</b> от посёлка.</p>`\n\n    })(place.city);\n\n\n    _moscow = contentItem('Расстояние от Москвы', place.moscow.distance, function (v) {\n      return `<b class=\"value\">${v} км</b>`\n    });\n\n    _routeurl = (function(point){\n      return `https://yandex.ru/maps/213/moscow/?ll=${point[0]}%2C${point[1]}&mode=routes&rtt=auto&rtext=55.753215%2C37.622504~${point[1]}%2C${point[0]}`\n    })(place.point);\n\n\n    _car = (function(car){\n\n       return `\n       <p>На автомобиле до центра Москвы:</p>\n       <p><b class=\"value\">${car.distance} км</b>, <span class=\"value\">${car.time.h} ч ${car.time.m} мин</span> без учета пробок</p>\n       <div class=\"btn-group\"><a class=\"btn btn_ghost\" rel=\"noreferrer noopener nofollow\" target=\"_blank\" href=\"${_routeurl}\">Проложить маршрут</a></div>` \n\n    })(place.car); \n\n\n    _railroad = (function(railroad){\n\n      let url = `https://rasp.yandex.ru/search/?fromId=c213&fromName=Москва&toName=${railroad.closest.name}&when=сегодня`;\n      return `\n      <p>Ближайшая ж/д станция пригородной электрички ${railroad.closest.name} (${railroad.closest.route})</p>\n      <p>От посёлка до станции <b class=\"value\">${railroad.distance} км</b>, дорога до Москвы займёт <span class=\"value\">${railroad.closest.time.h} ч ${railroad.closest.time.m} мин</span></p>\n      <div class=\"btn-group\"><a class=\"btn btn_ghost\" rel=\"noreferrer noopener nofollow\" target=\"_blank\" href=\"${url}\" >Расписание электричек</a></div>`;\n\n    })(place.railroad);\n\n\n    _market = (function(market){\n      return `<p>Крупный сетевой магазин в <b class=\"value\">${market.distance} км</b>.</p>`;\n    })(place.markets);\n  \n\n    _water = (function (water) {\n\n      let tpl = '',\n          c = water.closests;\n\n      for (var i = 0; i < c.length; i++) {\n  \n        if (c[i].closest) {\n\n          let closest = c[i].closest;\n\n          if (closest.min > 0) {\n\n            if (closest.min != closest.max) {\n\n              tpl += `<li class=\"item-with-icon\"><div class=\"icon icon_water icon_inline\" ></div><div><p><b class=\"value\">от ${closest.min} м. до ${closest.max} м.</b><br>Средняя глубина водоносного горизонта ${closest.median} м. (скважины в ${closest.name})</p></div></li>`;\n\n            } else {\n\n              tpl += `<li class=\"item-with-icon\"><div class=\"icon icon_water icon_inline\" ></div><div><p><b class=\"value\">${closest.median} м.</b><br>Cредняя глубина водоносного горизонта (скважины в ${closest.name})</p></div></li>`;\n\n            }\n\n          }\n\n        }\n      }\n\n      tpl = (tpl.length) ? `<hr><p>Глубина водоносного горизонта в районе посёлка:</p>\n      <ul class=\"simple-list\">\n        ${tpl}\n      </ul>` : '';\n\n      return tpl;\n\n    })(place.water);\n\n\n    _eco = (function (eco) {\n\n      let tpl = '',\n          title = '';\n\n      for (var i = 0; i < eco.length; i++) {\n        let description = (eco[i].closest.description) ? `${eco[i].closest.description}` : '';\n\n        tpl += `<li class=\"item-with-icon\"><div class=\"icon icon_eco icon_inline\" data-ico=\"${eco[i].closest.type}\"></div><div><p><b class=\"value\">${eco[i].distance.toFixed(1)} км</b><br>${eco[i].closest.name}. ${description}</p></div></li>`\n\n      }\n\n      tpl = (tpl.length) ? `<ul class=\"simple-list\">${tpl}</ul>` : '';\n      title = (tpl.length) ? `Ближайшие источники загрязнения и шума:` : `Рядом с поселком отсутствуют источники загрязнения и шума.`;\n\n      return `<p>${title}</p>${tpl}`;\n\n    })(place.eco.closests);\n\n\n    _price = (function (price, developer) {\n\n      let cost = {\n        from: (price.from) ? (typeof global != 'undefined') ? global.component('str-to-cost', {\n          value: price.from\n        })[0] : __.strToCost({\n          value: price.from\n        })[0] : '',\n        to: (price.to) ? (typeof global != 'undefined') ? global.component('str-to-cost', {\n          value: price.to\n        })[0] : __.strToCost({\n          value: price.to\n        })[0] : '',\n        closest: (price.closest) ? (typeof global != 'undefined') ? global.component('str-to-cost', {\n          value: price.closest\n        })[0] : __.strToCost({\n          value: price.closest\n        })[0] : ''\n      }\n\n      \n      let from = (price.from) ? `Цена от <nobr><b>${cost.from} руб.</b></nobr> ` : `Ориентировочная цена на дома от <nobr><b>${cost.closest} руб.</b></nobr> `,\n        to = (price.to) ? `до <nobr><b>${cost.to} руб.</b></nobr>` : '',\n        p = from + to,\n        d = (developer) ? `Застройщик ${developer}.` : '';\n\n      \n\n      return (p) ? `${p} ${d}` : `${d}`;\n\n\n    })(place.price, place.developer);\n\n    \n    _developer = contentItem('Застройщик', place.developer, function (v) {\n      return v;\n    });\n\n\n    _site = contentItem('Сайт', place.site, function (v) {\n      let src = (URL) ? new URL(v).host : v.replace(/^(http|https):\\/\\//g, '');\n      return `<div class=\"flex-line\">${image(params.mode, `https://favicon.yandex.net/favicon/${src}`, src, 16, 16, 'favicon')} ${link(v, src)}</div>`;\n    });\n\n\n    _medic = (function(medic){\n      return `<p>Cтанция скорой помощи в <b class=\"value\">${medic.distance} км</b>.</p>`\n    })(place.medic); \n\n\n    _markets = (function (point, site) {\n\n      let latT = point[1] + 0.00304,\n        latB = point[1] - 0.00304,\n        lonL = point[0] - 0.009066,\n        lonR = point[0] + 0.009066,\n        https = 'https://';\n\n\n      let cian_url = objToUrl(`${https}cian.ru/map/`, {\n        deal_type: 'sale',\n        engine_version: 2,\n        'object_type[0]': 1,\n        offer_type: 'suburban',\n        zoom: 16,\n        center: `${point[1]},${point[0]}`\n      });\n\n      let yandex_url = objToUrl(`${https}realty.yandex.ru/moskovskaya_oblast/kupit/dom/karta/`, {\n        leftLongitude: lonL,\n        topLatitude: latT,\n        rightLongitude: lonR,\n        bottomLatitude: latB\n      });\n\n      let move_url = objToUrl(`${https}move.ru/moskovskaya_oblast/prodazha_domov/poisk_na_karte/`, {\n        map_center: `${point[1]},${point[0]}`,\n        zoom: 16\n      });\n\n      let sob_url = objToUrl(`${https}sob.ru/map/prodazha-zagorodnaja-nedvizhimost`, {\n        ll: `${point[1]},${point[0]}`,\n        z: 16\n      }) + '&realty_type[]=3&realty_type[]=4&realty_type[]=5&realty_type[]=6&realty_type[]=7&realty_type[]=8&realty_type[]=9&realty_type[]=10&realty_type[]=11&realty_type[]=12';\n\n\n      let avito_url = objToUrl(`${https}www.avito.ru/moskva/doma_dachi_kottedzhi`, {\n        map: btoa(JSON.stringify({\n          \"searchArea\": {\n            \"latBottom\": latB,\n            \"latTop\": latT,\n            \"lonLeft\": lonL,\n            \"lonRight\": lonR\n          }\n        }))\n      });\n\n      let cian_img = image(params.mode, `https://favicon.yandex.net/favicon/cian.ru`, 'cian.ru', 16, 16, 'favicon');\n      let yandex_img = image(params.mode, `https://favicon.yandex.net/favicon/realty.yandex.ru`, 'realty.yandex.ru', 16, 16, 'favicon');\n      let avito_img = image(params.mode, `https://favicon.yandex.net/favicon/avito.ru`, 'realty.yandex.ru', 16, 16, 'favicon');\n      let sob_img = image(params.mode, `https://favicon.yandex.net/favicon/sob.ru`, 'sob.ru', 16, 16, 'favicon');\n      let move_img = image(params.mode, `https://favicon.yandex.net/favicon/move.ru`, 'move.ru', 16, 16, 'favicon');\n\n      let site_link = (site) ? `<div class=\"btn-group\"><a target=\"_blank\" rel=\"noreferrer noopener nofollow\" href=\"${site}\" class=\"btn btn_ghost\">Сайт посёлка</a></div>` : '';\n\n      return `\n        <ul class=\"simple-list\">\n        <li class=\"simple-list__item flex-line\">${cian_img} ${link(cian_url, 'Циан')}</li>\n        <li class=\"simple-list__item flex-line\">${yandex_img} ${link(yandex_url, 'Яндекс.Недвижимость')}</li>\n        <li class=\"simple-list__item flex-line on-mobile_hide\">${avito_img} ${link(avito_url, 'Авито')}</li>\n        <li class=\"simple-list__item flex-line\">${sob_img} ${link(sob_url, 'Sob')}</li>\n        <li class=\"simple-list__item flex-line\">${move_img} ${link(move_url, 'move.ru')}</li>\n        </ul>\n        ${site_link}`;\n\n    })(place.point, place.site);\n\n\n    _forest = (function(forest){\n      \n      let tpl = '',\n          near = false;\n\n      if (forest.distance > -1) {\n\n        for(var i = 0; i < forest.closests.length; i++ ){\n        \n          let e = forest.closests[i];\n\n          if (e.type != 3){\n            \n            let name = (e.type == 1) ? e.name + ' лесничество' : e.name;\n          \n            tpl += `<li class=\"item-with-icon\"><div class=\"icon icon_forest icon_inline\" ></div><div><p>${name}</p></div></li>` \n          \n          } else {\n\n            near = true;\n\n          } \n        };\n\n        tpl = `\n        <p>${(near) ? `Рядом с посёлком есть лес.` : `В <b>${forest.distance} км</b> от посёлка начинается лес.`}</p>\n        ${ (tpl) ? `<ul class=\"simple-list\">${tpl}</ul>` : '' }`;\n\n      } \n\n      return tpl;\n\n    })(place.forest);\n\n\n    _bradcrumbs = (function(_name, _url){\n\n      let links = [\n        {\n          url : 'https://myhousehub.ru/',\n          name : 'Коттеджные посёлки Москвы',\n          link : true\n        },\n        {\n          name : _name,\n          url : _url,\n          link : false\n        }\n      ];\n\n      return (typeof global != 'undefined') ? global.component('breadcrumbs', {links : links}) : __.breadcrumbs({links : links});\n\n    })(_name, _url);\n\n    container_tpl = `\n\n${_close} \n${_bradcrumbs}\n\n<main itemscope itemtype=\"http://schema.org/Dataset\">\n  <h1 itemprop=\"name\"><span>${_type}</span> <span>${_name}</span></h1>\n  <meta itemprop=\"license\" content=\"https://creativecommons.org/publicdomain/zero/1.0/\">\n  <p itemprop=\"description\">${_description}</p>\n\n  <div class=\"page-navigation\">\n    <div class=\"page-navigation__inner\">\n      <a href=\"#s_offer\">Купить</a>\n      <a href=\"#s_transport\">Транспорт</a>\n      <a href=\"#s_infrastructure\">Инфраструктура</a>\n      <a href=\"#s_eco\">Экология</a>\n      <a href=\"#s_map\">Карта</a>\n    </div>  \n  </div>  \n\n  <div class=\"panel__content content\">\n    <section id=\"s_offer\" class=\"content__section\">\n      <h2>Купить дом в посёлке</h2>\n      <p>${_price} Предложения о продаже в <nobr>${_type} ${_name}</nobr>:</p>\n      ${_markets}\n    </section>\n    ${_ads}\n    <section id=\"s_transport\" class=\"content__section\">\n      <h2>Транспортная доступность <nobr>${_type} ${_name}</nobr></h2>\n        ${_address}\n        <hr>\n        ${_car}\n        <hr>\n        ${_railroad}\n    </section>\n    <section id=\"s_infrastructure\" class=\"content__section\">\n      <h2>Инфраструктура</h2>\n      <div>\n        ${_city}\n        <hr>\n        ${_medic}\n        <hr>\n        ${_market}\n      </div>\n    </section>\n    <section id=\"s_eco\" class=\"content__section\">\n      <h2>Экология</h2>\n      <div>\n        ${_forest}\n        ${_eco}\n        ${_water}\n      </div>\n    </section>\n    ${(_places) ? `\n    <section id=\"s_places\" class=\"content__section\">\n      <h2>Коттеджные посёлки рядом с <nobr>${_type} ${_name}</nobr>:</h2>\n      <div>\n        ${_places}\n      </div>\n    </section>\n    ` : ''}\n    <section id=\"s_map\">\n      <figure id=\"place-map\" class=\"map\">${_map}</figure>\n    </section>\n  </div>\n</main>\n  `;\n\n    detail_tpl = `\n<div id=\"detail-screen\" data-id=\"${_id}\" class=\"panel panel_detail\">\n  ${_mobileHeader}\n  <div class=\"panel__container\">\n    ${container_tpl} \n  </div>\n</div>`;\n\n  } else {\n\n    detail_tpl = $('#detail-screen')[0].outerHTML;\n\n  }\n\n  function image(mode, src, alt, width, height, classname) {\n\n    mode = mode || 'html';\n    classname = (classname) ? `class=\"${classname}\"` : '';\n\n    let tpl = (mode != 'amp') ? `<img src=\"${src}\" alt=\"${alt}\" ${classname} />` : `<amp-img src=\"${src}\" alt=\"${alt}\" ${classname} layout=\"responsive\" width=\"${width}\" height=\"${height}\"></amp-img>`;\n\n    return tpl;\n\n  }\n\n\n  function contentItem(name, value, callback) {\n\n    return (value) ? simpleItem(name, callback(value)) : '';\n\n  }\n  \n\n  function simpleItem(name, value) {\n\n    return `<div class=\"content__item\">\n    <div class=\"content__item-title\"><h3>${name}</h3></div>\n    <div class=\"content__item-value\">${value}</div>\n  </div>`\n\n  }\n\n  function link(href, text, classname, data) {\n    data = (data) ? `data-link=\"${data}\"` : '';\n    classname = (classname) ? `class=\"${classname}\"` : '';\n    return `<a ${classname} ${data} rel=\"noreferrer noopener nofollow\" target=\"_blank\" href=\"${href}\">${text}</a>`\n  }\n\n  function objToUrl(url, obj) {\n    url = url + '?' || ''\n    let uri = encodeURIComponent;\n    return url + Object.entries(obj).map(([key, val]) => `${uri(key)}=${uri(val)}`).join('&');\n  }\n\n\n  if (typeof global == 'undefined') {\n\n    $('#detail-screen').remove();\n\n    let $screen = (__.core.$detailScreen) ? __.core.$detailScreen : $(detail_tpl);\n\n    if (place) $screen.find('.panel__container').empty().append(container_tpl);\n\n\n    let folder = Math.floor(place.id / 100) * 100;\n    history.pushState(place, place.name, `/places/${folder}/place_${place.id}/`);\n    $('title').text(place.title);\n\n\n    setTimeout(function () {\n\n      if ($('#place-map').length) {\n\n        $('#place-map').empty();\n\n        let data = $('#app').data('data');\n\n\n\n        if (!data) {\n\n          place = place || null;\n\n          $.get('/bin/data/data.json', function (places) {\n\n\n\n            data = __.fs.decodeData(places),\n              id = $('#detail-screen').data('id');\n\n\n\n            $.each(data.places, function (i, e) {\n\n              if (e.id == id) {\n                place = e;\n                return false;\n              }\n\n            });\n\n            if (place) {\n\n\n\n              drawMap();\n\n\n\n            }\n\n          });\n\n        } else {\n\n          drawMap();\n\n        }\n\n\n        function drawMap() {\n\n\n\n          let marker = new L.marker([place.point[1], place.point[0]], {\n            icon: L.divIcon({\n              className: 'place-marker'\n            })\n          });\n\n          let map = L.map('place-map', {\n            center: [place.point[1], place.point[0]],\n            zoom: 14,\n            gestureHandling: true\n          });\n\n          L.tileLayer(__.fs.mapTiles.simple, { attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors' }).addTo(map);\n          map.addLayer(marker);\n\n          let c = L.canvasOverlay().drawing(drawingOnCanvas).addTo(map);\n\n          function drawingOnCanvas(canvasOverlay, p) {\n            let ctx = p.canvas.getContext('2d'),\n              zoom = map.getZoom();\n\n            ctx.clearRect(0, 0, p.canvas.width, p.canvas.height);\n\n\n            __.mapData()['eco'](function () {\n\n\n\n              __.mapOverlay()['eco']({\n                data: data\n              }, canvasOverlay, ctx, zoom, 'place-map');\n\n            });\n\n            __.mapData()['railroad'](function () {\n\n              __.mapOverlay()['railroad']({\n                data: data\n              }, canvasOverlay, ctx, zoom, 'place-map');\n\n            });\n\n\n          }\n        }\n\n      }\n\n    }, 100);\n\n    $screen.find('a').click(function (e) {\n\n      let href = $(this).attr('href');\n\n      if (href.includes('cian.ru')) {\n        __.fs.analytics('cta_go-to-store', {\n          store: 'cian',\n        });\n\n        preventOpenInBrowser(href);\n\n      }\n\n      if (href.includes('realty.yandex.ru')) {\n        __.fs.analytics('cta_go-to-store', {\n          store: 'yandex'\n        });\n\n        preventOpenInBrowser(href);\n\n      }\n\n      if (href.includes('avito.ru')) {\n        __.fs.analytics('cta_go-to-store', {\n          store: 'avito'\n        });\n\n        preventOpenInBrowser(href);\n\n      }\n\n      if (href.includes('sob.ru')) {\n        __.fs.analytics('cta_go-to-store', {\n          store: 'sob.ru'\n        });\n\n        preventOpenInBrowser(href);\n\n      }\n\n      if (href.includes('move.ru')) {\n        __.fs.analytics('cta_go-to-store', {\n          store: 'move.ru'\n        });\n\n        preventOpenInBrowser(href);\n\n      }\n\n      function preventOpenInBrowser(href) {\n\n        if ($('#app').is('.mobile')) {\n\n          e.preventDefault();\n          location.href = href;\n\n        }\n\n      }\n\n\n    });\n\n    $screen.find('#close-screen, #close-panel').click(function (e) {\n\n      e.preventDefault();\n      $('#main').find('#detail-screen').remove();\n\n      let title = 'Коттеджные поселки подмосковья';\n\n      history.pushState({}, title , \"/\");\n      $('title').text(title);\n\n      __.fs.analytics('close_detail-screen');\n\n    });\n\n    $screen.find('a[href^=\"#\"]').click(function (e) {\n\n      e.preventDefault();\n\n      let hash = '#' + $(this).attr('href').split('#')[1];\n\n      $('#detail-screen').stop().animate({\n        scrollTop: $(hash).offset().top + $('#detail-screen').scrollTop() - 65\n      }, 500, 'swing', function () {\n        $('html, body').scrollTop(0)\n\n      });\n\n\n    });\n\n    __.core.$detailScreen = $screen;\n\n    if (!$('#detail-screen').length) $('#main').append($screen);\n\n  }\n\n\n\n  return detail_tpl;\n\n}","__.logo = function(params){\n \n  let title = (params.title) ? params.title : `<span class=\"header__title\">Найти коттеджный посёлок</span>`;\n  \n  return `<div class=\"header__logo\">\n            <a href=\"/\"><img alt=\"myhousehub\" class=\"header__icon\" src=\"/source/assets/img/myhousehub.svg\" /></a>\n            <div>\n              <a href=\"/\" class=\"header__sitename\">MYHOUSEHUB</a>\n              ${title}\n            </div>\n          </div>`;\n  \n}","__.mapData = function(){\n  \n  let _this = this;\n  \n  let DATA = $('#app').data('data');\n  \n  this.eco = function(callback){\n    \n    getData('eco', callback);\n    \n  }\n  \n  this.railroad = function(callback){\n\n    getData('railroad', callback);\n    \n  }\n  \n  this.markets = function(callback){\n    \n    getData('markets', callback);\n    \n  }\n  \n  this.car = function(callback){\n\n    getData('roads', callback);\n        \n  }\n  \n  this.water = function(callback){\n\n    getData('water', callback);\n        \n  }\n\n  this.cost = function(callback){\n\n    getData('cost', callback);\n        \n  }\n\n  this.forest = function(callback){\n\n    getData('forest', callback);\n        \n  }\n  \n  this.default = function(callback){\n    \n    callback();\n    \n  }\n  \n  function getData(name, callback) {\n    \n    \n    \n    //if (DATA.places[0][name] && DATA.places[0][name].closest && DATA.places[0][name].closest.name && !location.href.includes('/places/')) {\n      \n      \n\n    //  callback();\n      \n    //} else {\n      \n      \n      \n      $.get(`/bin/data/${name}.json`, function (data) {\n          \n          \n\n          if (name != 'roads'){\n          \n          $.each(data, function (i, e2) {\n            \n            \n            if (window.DATA[name][e2.id]) {\n              \n              for (var k in e2) window.DATA[name][e2.id][k] = e2[k];\n            \n            } else {\n              \n        \n              \n              window.DATA[name][e2.id] = e2;\n              \n            }\n  \n\n          });\n            \n          } else {\n            \n            window.DATA[name] = data;\n            \n          }\n          \n          $('#app').data('data', window.DATA);\n            \n            \n        \n          \n\n          callback();\n          \n        });\n      \n    //}\n  }\n  \n  return this;\n  \n}","__.mapObjectInfo = function(data, type, mapId){\n  \n  let $container = $('#' + mapId);\n  let tpl = '';\n  let title = '';\n  let description = '';\n  \n  if (type == 'eco') {\n    \n    title = data.name;\n    \n    description = (data.description) ? data.description : '';\n    \n    tpl = `\n<div class=\"map-object-info\">\n  <div class=\"map-object-info__inner\">\n    <div class=\"icon icon_${type}\" data-ico=\"${data.type}\"></div>\n    <div class=\"map-object-info__content\">\n      <span class=\"map-object-info__title\">${title}</span>\n      <p class=\"map-object-info__description\">${description}</p>\n    </div>\n  <div>\n  <div class=\"close-icon\"></div>\n</div>`;\n  }\n  \n  if (type == 'markets') {\n    tpl=`\n<div class=\"map-object-info\">\n  <div class=\"map-object-info__inner\">\n    <div class=\"icon icon_${type}\" data-ico=\"\"></div>  \n    <div class=\"map-object-info__content\">\n      <span class=\"map-object-info__title\">${data.name}</span>\n      <p class=\"map-object-info__description\">${data.address}</p>\n    </div>\n  </div>\n  <div class=\"close-icon\"></div>\n</div>`;\n  }\n  \n  if (type == 'water') {\n    tpl=`\n<div class=\"map-object-info\">\n  <div class=\"map-object-info__inner\">\n    <div class=\"icon icon_${type}\" data-ico=\"\"></div>  \n    <div class=\"map-object-info__content\">\n      <span class=\"map-object-info__title\">Скважина в \"${data.name}\"</span>\n      <p class=\"map-object-info__description\">Глубина скважины от ${data.min} м. до ${data.max}, средняя глубина ${data.median} м.</p>\n    </div>\n  </div>\n  <div class=\"close-icon\"></div>\n</div>`;\n  }\n\n  \n  if (type == 'railroad') {\n    \n    title = `${(data.type) ? capitalizeFirstLetter(data.type) : 'Станция'} «${data.name}» (${data.route})`;\n    \n    description = `До Москвы ${data.distance}км, ${data.count} станция от Москвы. В пути ${data.time.h}ч ${data.time.m}мин.`;\n    \n    tpl = `\n<div class=\"map-object-info\">\n  <div class=\"map-object-info__inner\">\n    <div class=\"icon icon_${type}\" data-ico=\"\"></div>  \n    <div class=\"map-object-info__content\">\n      <span class=\"map-object-info__title\">${title}</span>\n      <p class=\"map-object-info__description\">${description}</p>\n    </div>\n  </div>\n  <div class=\"close-icon\"></div>\n</div>`;\n  }\n  \n  $('body').on('click', '.map-object-info .close-icon', function(e){\n    \n    $('.map-object-info').remove();\n    \n  });\n  \n  $container.find('.map-object-info').remove();\n  \n  $container.append(tpl);\n  \n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  \n}","__.mapOverlay = function (params, canvasOverlay, ctx, zoom, mapId) {\n\n  let scale = 2,\n    icons = __.fs.mapSprites(scale),\n    size = 20 * scale,\n    resize = size * 0.65,\n    src = `/source/assets/img/map/pins@${scale}x.png`,\n    img = img = new Image();\n  \n    img.src = src;\n\n  this.default = function () {\n    return false\n  };\n  \n  this.markets = function (params, canvasOverlay, ctx, zoom, mapId) {\n    \n    let markets = params.data.markets;\n    \n    \n    getIcons(img, function(img){\n      \n      $.each(markets, function (i, e) {\n\n        let ico = '';\n      \n        if (zoom > 9)  ico = icons.point_green;\n        if (zoom > 11) ico = icons.markets;\n\n\n        let bb = drawIcons(e, ctx, canvasOverlay, img, size, ico, resize);\n\n        \n        \n        e.canvas = e.canvas || {}; \n        e.canvas[mapId] = bb;\n        \n      });\n      \n    });\n    \n    return false;\n    \n    \n  }\n  \n  this.water = function (params, canvasOverlay, ctx, zoom, mapId) {\n    \n  \n    let water = params.data.water;\n    \n    getIcons(img, function(img){\n      \n      $.each(water, function (i, e) {\n\n        let ico = '';\n      \n        if (zoom > 9)  ico = icons.point_blue;\n        if (zoom > 11) ico = icons.water_depth; \n\n\n        let bb = drawIcons(e, ctx, canvasOverlay, img, size, ico, resize);\n\n        \n        \n        e.canvas = e.canvas || {};  \n        e.canvas[mapId] = bb;\n        \n      });\n      \n    });\n    \n    return false;  \n  }\n\n  this.cost = function (params, canvasOverlay, ctx, zoom, mapId) {\n    \n    return false;  \n    \n  }\n\n  this.forest = function (params, canvasOverlay, ctx, zoom, mapId) {\n    \n    return false;  \n    \n  }\n  \n\n  this.railroad = function (params, canvasOverlay, ctx, zoom, mapId) {\n\n    \n    \n    let railroad = params.data.railroad;\n    \n    \n    ///////\n    $.each(railroad, function (i, e) {\n        if (e.path){\n        var line = e.path.points;\n\n        \n        \n        ctx.beginPath();\n        ctx.strokeStyle = 'rgba(0, 196, 255, 0.5)';\n        ctx.lineWidth = 1;\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n          \n\n        for (var p = 0; p < line.length; p++) {\n\n          var from = canvasOverlay._map.latLngToContainerPoint([line[p][1], line[p][0]]);\n          var to = (line[p + 1]) ? canvasOverlay._map.latLngToContainerPoint([line[p + 1][1], line[p + 1][0]]) : from;\n\n          ctx.moveTo(from.x, from.y);\n          ctx.lineTo(to.x, to.y);\n\n        }\n\n        ctx.stroke();\n          \n        }\n\n    });\n    //////\n    \n    \n    \n    getIcons(img, function(img){\n      \n      $.each(railroad, function (i, e) {\n\n        let ico = '';\n      \n        if (zoom > 9) ico = icons.point_blue;\n        if (zoom > 11) ico = icons.railroad;\n\n        let bb = drawIcons(e, ctx, canvasOverlay, img, size, ico, resize);\n\n        \n        \n        e.canvas = e.canvas || {visible:true}; \n        e.canvas[mapId] = bb;\n        \n      });\n      \n    });\n    \n    return false\n  };\n\n  this.car = function (params, canvasOverlay, ctx, zoom, mapId) {\n  \n      \n    let roads = params.data.roads;\n    \n    \n\n    \n      \n        $.each(roads, function (i, e) {  \n      \n        var line = e.points;  \n        \n        ctx.beginPath();\n        ctx.strokeStyle = 'rgba(0, 196, 255, 0.3)';\n        ctx.lineWidth = 1;\n        ctx.lineJoin = 'round';\n        ctx.lineCap = 'round';\n          \n\n        for (var p = 0; p < line.length; p++) {\n\n          var from = canvasOverlay._map.latLngToContainerPoint([line[p][1], line[p][0]]);\n          var to = (line[p + 1]) ? canvasOverlay._map.latLngToContainerPoint([line[p + 1][1], line[p + 1][0]]) : from;\n\n          ctx.moveTo(from.x, from.y);\n          ctx.lineTo(to.x, to.y);\n          \n          \n\n        }\n\n        ctx.stroke();\n          \n        \n           \n        });\n\n        \n    \n    \n    \n    return false\n    \n  };\n\n\n  this.eco = function (params, canvasOverlay, ctx, zoom, mapId) {\n    \n    \n\n    let eco = params.data.eco;\n    \n    \n    getIcons(img, function(img){\n      \n      $.each(eco, function (i, e) {\n\n        let ico = null;\n\n        if (zoom > 9) {\n\n          ico = icons.point_yellow;\n\n        }\n\n        if (zoom > 11) {\n\n          if (e.type == 6) ico = icons.recicle;\n          if (e.type == 10) ico = icons.airport;   \n          if (e.type == 7 || e.type == 9) ico = icons.trash;\n          if (e.type == 2 || e.type == 1) ico = icons.radiation;\n          if (e.type == 8 || e.type == 11) ico = icons.factory;\n          if (e.type == 5) ico = icons.water;\n          if (e.type == 4) ico = icons.energy;\n          if (e.type == 3) ico = icons.power;\n          if (e.type == 12) ico = icons.black_mesa;\n          if (e.type == 13) ico = icons.army;\n            \n        } \n\n        let bb = drawIcons(e, ctx, canvasOverlay, img, size, ico, resize);\n        \n        e.canvas = e.canvas || {visible:true}; \n        e.canvas[mapId] = bb;\n\n      });\n      \n    });\n    \n\n\n  }\n  \n  function getIcons(img, callback){\n    \n    if (__.core.$map.data('icons')){\n      \n      callback(__.core.$map.data('icons'));\n      \n    } else {\n    \n      img.addEventListener('load', function () {\n\n        __.core.$map.data('icons', img);\n\n        callback(img);\n\n      });\n      \n    }\n    \n    return img;\n    \n  }\n  \n  \n  function drawIcons(e, ctx, canvasOverlay, img, size, ico, resize){\n    \n    let dot = canvasOverlay._map.latLngToContainerPoint([e.point[1], e.point[0]]),\n        bb = {\n          x1: dot.x,\n          x2: dot.x + (resize), \n          y1: dot.y,\n          y2: dot.y + (resize)\n        };\n    \n    if (ico) ctx.drawImage(img, 0, ico, size, size, dot.x - resize / 2, dot.y - resize / 2, resize, resize);\n    return bb;\n  }\n\n  return this;\n\n}","__.miniMap = function(params){\n  \n    var moscow = [55.751244, 37.618423];\n    \n    var point = [params.lat, params.lon];\n    \n    var result = [];\n    var size = 80\n    var offsetT = 1,\n        offsetL = 1;\n    \n    //top -> bot\n    if (moscow[0] > point[0]){\n      \n      result[0] =  moscow[0] - point[0]\n      offsetT = 1\n    } else {\n      \n      result[0] = point[0] - moscow[0]; \n      offsetT = -1\n    }\n    \n    //left -> right\n    if (moscow[1] > point[1]){\n      \n      result[1] = point[1] - moscow[1]\n      offsetL = 1\n    } else {\n      \n      result[1] = moscow[1] - point[1]; \n      offsetL = -1\n    }\n    \n    result[0] = (((result[0]*size)/360) * 180) * offsetT;\n    result[1] = (((result[1]*size)/180) * 30) * offsetL;\n    \n    result[0] = (result[0] < -40) ? -40 : result[0];\n    result[0] = (result[0] > 40) ? 40 : result[0];\n    \n    result[1] = (result[1] < -40) ? -40 : result[1];\n    result[1] = (result[1] > 40) ? 40 : result[1];\n      \n  let tpl = `<figure class=\"mini-map\">\n    <div class=\"mini-map__marker\" style=\"transform: translate(${result[1]}px, ${result[0]}px)\"></div>\n  </figure>`;\n  \n  return tpl;\n  \n}","__.mapTiles = function(tileset){\n  \n  let simple = tileset.simple,\n      dark = tileset.dark,\n      $map = __.core.$map,\n      tiles = $map.data('tiles'),\n      d = 'map_dark',\n      l = 'map_light';\n  \n  \n  \n  this.default = function(){\n    \n    setTiles(simple);\n    changeClass(d,l);\n    \n  }\n  \n  this.markets = function(){\n    \n    setTiles(dark);\n    changeClass(l,d);\n  }\n  \n  this.water = function(){\n    \n    setTiles(dark);\n    changeClass(l,d);\n  }\n  \n  this.eco = function(){\n    \n    setTiles(dark);\n    changeClass(l,d);\n  }\n  \n  this.railroad = function(){\n    \n    setTiles(dark);\n    changeClass(l,d);\n  }\n  \n  this.car = function(){\n    \n    setTiles(dark);\n    changeClass(l,d);\n  }\n\n  this.cost = function(){\n    \n    setTiles(dark);\n    changeClass(l,d);\n  }\n\n  this.forest = function(){\n    \n    setTiles(dark);\n    changeClass(l,d);\n  }\n  \n  function changeClass(from,to){\n    $map.removeClass(from).addClass(to);\n    return false;\n  }\n  \n  function setTiles(n){\n    if (tiles._url != n) {\n      tiles.setUrl(n);\n    }\n  }\n  \n  return this;\n  \n}","__.placeItem = function(params){\n    \n  \n\n  let _miniMap = (typeof global != 'undefined') ? global.component('mini-map', {lat: params.point[1], lon: params.point[0]}) : __.miniMap({lat: params.point[1], lon: params.point[0]});\n  \n  //let _color = (typeof global != 'undefined') ? '#fafafa' : params.canvas.color;\n  \n  let _type = (params.type) ? `${params.type}` : '';\n  let _name = `${params.name}`;\n\n  let _color = (params.canvas && params.canvas.color) ? `background-color:${params.canvas.color}` : '';  \n  //let _eco = (params.eco.distance < 10) ? `<div>${params.eco.closest.name} в ${params.eco.distance}км</div>` : '';\n  \n  \n  let _car = `<div class=\"place-item__car\">до Москвы: ${params.car.time.h} ч ${params.car.time.m} мин (${params.car.distance} км)</div>`;\n  \n  let _rjd = (params.railroad.closest && params.railroad.distance < 3) ? `<div class=\"place-item__train\">ст. ${params.railroad.closest.name} в ${params.railroad.distance} км,<br>до Москвы: ${params.railroad.closest.time.h} ч ${params.railroad.closest.time.m} мин (${params.railroad.closest.distance} км)</div>` : ''; \n  \n  let folder = Math.floor(params.id/100) * 100,\n      url = `https://myhousehub.ru/places/${folder}/place_${params.id}/`;\n  \n  let tpl = \n`<div itemscope=\"itemscope\" itemtype=\"http://www.schema.org/SiteNavigationElement\" class=\"place-item\" data-id=\"place-${params.id}\">\n  <div class=\"place-item__content\">\n    <div class=\"place-item__title\">\n      <div class=\"place-item__pin\" style=\"${_color}\"></div>\n      <a href=\"${url}\" itemprop=\"url\"><span class=\"place-item__type\">${_type}</span><span class=\"place-item__name\">${_name}</span></a>\n      <meta itemprop=\"name\" content=\"${_type} ${_name}\">\n    </div>\n    <div class=\"place-item__distance\">\n      ${_car}\n      ${_rjd}\n    </div>\n  </div>\n  ${_miniMap}\n</div>`;\n    \n  if (typeof global == 'undefined') {\n        \n    __.fs.event.bind('.place-item', 'click', function(e){\n    \n    /*\n    \n    e.preventDefault();\n    \n    var DATA = $('#app').data('data').places,\n        map = $('#map').data('map'),\n        id = $(e.currentTarget).data('id').split('-')[1];\n    \n        $('.place-item').not(this).removeClass('place-item_active');\n    \n        \n        \n        if ( $(this).is('.place-item_active') ){\n          $(this).removeClass('place-item_active');\n          $('#detail-screen').remove();\n          \n        } else {\n          $(this).addClass('place-item_active');\n\n          \n          \n          __.fs.placeGet(id, function(data, url){\n            \n            __.fs.analytics('select_place',{\n        \n              place_id : data.id,\n              place_name : data.name,\n              place_url : url,\n              target: 'list'\n        \n            });\n            \n            __.detailScreen({place:data});\n            \n          });\n          \n          \n        }\n    \n    */\n    \n      \n  })\n  \n    }\n    \n  return tpl;\n  \n}","__.search = function(params){\n  \n  \n  var DATA = $('#app').data('data').places,\n      searchdata = [],\n      results = [],\n      map = $('#map').data('map'),\n      search = new __.fs.substringSearch({ multiply : false }),\n      keys = {};\n  \n  \n  if (params.text || \n      params.types != undefined || \n      params.distance != undefined || \n      params.railroad != undefined || \n      params.direction != undefined || \n      params.eco != undefined || \n      params.cost != undefined || \n      params.forest != undefined ){\n    \n    \n    if (params.text){\n    \n    searchdata = search.inArray(params.text, DATA, function(e){ return e.name; }, function(e){\n      e.canvas.visible = true;\n      \n    }, function(e){\n      e.canvas.visible = false;\n      \n    });\n    \n    } else {\n      \n      $.each(DATA, function(i,e){\n       \n        e.canvas.visible = true;\n        \n        searchdata.push({\n          res: {\n            obj : e\n          }\n        });\n      \n      });\n      \n  \n      \n    }\n    \n    if (searchdata.length){\n      \n      map.search = true;\n      \n    } else {\n      \n      map.search = false;\n      \n    }\n    \n    $.each(searchdata, function(i,e){\n      \n      let place = e.res.obj;\n      \n      if (!keys[place.id]) {\n        \n        if (params.types != undefined) {\n          \n          let a,b;\n          \n          if (params.types.kp && place.type == 'КП') a = true;\n            \n          if (params.types.snt && place.type != 'КП') b = true;\n          \n          if (!a && !b) place.canvas.visible = false;\n          \n          \n        }\n        \n        if (params.railroad != undefined) {\n          \n          if (params.railroad && place.railroad.distance > 3){\n             place.canvas.visible = false;\n          }\n          \n        }\n\n        if (params.cost != undefined) {\n          \n          if (params.cost <= 50000000) {\n\n            if (place.price.closest >= params.cost){\n              \n              place.canvas.visible = false;\n              \n            }\n            \n          }\n          \n        }\n\n        \n        \n        if (params.distance != undefined) {\n          \n          \n\n          if (params.distance < 300) {\n\n            let m = (place.car.time.m < 10) ? '0' + place.car.time.m : place.car.time.m;\n            let timeToInt = Number( (''+place.car.time.h) + (''+m) );\n\n            if (timeToInt > params.distance){\n              \n              place.canvas.visible = false;\n              \n            }\n            \n          }\n          \n        }\n        \n        if (params.direction != undefined) {\n          \n          if (params.direction.length){\n            let match = false;\n            $.each(params.direction, function(i,e){\n              \n              if (place.moscow.angle > e[0] && place.moscow.angle < e[1]) match = true;\n              \n            });\n              \n            if (!match) place.canvas.visible = false;\n            \n          }\n          \n        }\n        \n        if (params.eco != undefined) {\n          \n          if (params.eco && place.eco.distance < 5 && place.eco.distance != -1){\n            place.canvas.visible = false;\n          } \n          \n        }\n\n        if (params.forest != undefined) {\n\n          if (params.forest && (place.forest.distance > 1 || place.forest.distance < 0) ){\n            \n            place.canvas.visible = false;\n          } \n          \n        }\n        \n        if (place.canvas.visible) {\n        \n          keys[place.id] = true;  \n          results.push(place);\n        \n        }\n        \n      }\n      \n    });\n    \n    \n    \n    $('#places').trigger('renderList', {places : results, onlyVisible: true}).scrollTop(0);\n    \n    \n    \n    \n  } else {\n    \n    map.search = false;\n    \n    $.each(DATA, function(i,e){\n      e.canvas.visible = true;\n    });\n    \n    $('#places').trigger('renderList', {places : DATA, onlyVisible: false});\n    \n  }\n  \n  $('#map').data('canvas').redraw();\n  \n  \n  \n  \n  return results;\n  \n}\n\n","__.placePoint = function (params) {\n\n  const s = {\n      0: {\n        s: .5\n      },\n      1: {\n        s: .5\n      },\n      2: {\n        s: .5\n      },\n      3: {\n        s: 1\n      },\n      4: {\n        s: 1\n      },\n      5: {\n        s: 2\n      },\n      6: {\n        s: 2\n      },\n      7: {\n        s: 3\n      },\n      8: {\n        s: 3\n      },\n      9: {\n        s: 3\n      },\n      10: {\n        s: 4\n      },\n      11: {\n        s: 4\n      },\n      12: {\n        s: 4\n      },\n      13: {\n        s: 6\n      },\n      14: {\n        s: 6\n      },\n      15: {\n        s: 6\n      },\n      16: {\n        s: 12\n      },\n      17: {\n        s: 12\n      },\n      18: {\n        s: 12\n      }\n    },\n    size = s[params.zoom].s * 2,\n    changeColor = $('#select-layer').val(),  \n    color = __.fs.colorize()[changeColor](params.place);\n  \n  \n  \n  params.ctx.fillStyle = color;\n  \n  if (params.zoom > 10){\n    params.ctx.lineWidth = 1;\n    params.ctx.strokeStyle = 'rgba(255, 255, 255,.5)';\n    params.ctx.stroke();\n  }\n  \n  if (params.zoom > 11){\n    params.ctx.lineWidth = 1;\n    params.ctx.strokeStyle = 'rgb(255, 255, 255)';\n    params.ctx.stroke();\n    \n  }\n\n  var dot = params.canvasOverlay._map.latLngToContainerPoint([params.place.point[1], params.place.point[0]]);\n  \n  params.ctx.beginPath();\n  params.ctx.arc(dot.x, dot.y, size / 2, 0, Math.PI * 2);\n  params.ctx.fill();\n  params.ctx.closePath();\n\n\n  params.place.canvas[params.mapId] = {\n    x1: dot.x,\n    y1: dot.y,\n    x2: dot.x + size,\n    y2: dot.y + size,\n  }\n  \n  params.place.canvas.color = color;\n  \n  return params.place.canvas;\n\n}","__.core.$app = function(){\n  \n  $('#app').data('browser', __.fs.browserDetect()).addClass(function(){\n    let browser = $(this).data('browser')\n    return [browser.browserName, browser.platform, browser.isMobile].join(' ');\n  });\n  \n  return $('#app');\n  \n}","__.select = function(params){\n  \n  \n}","__.core.$map = function(){\n  \n    \n    $('#map').click(function (e) {\n      \n      let id = $(this).attr('id');\n      \n      if ( $(e.target).is('canvas') ) {\n       \n        __.selectOnMap( e, id, $('#select-layer').val() );\n        \n        \n        \n      }\n      \n      \n\n  }).bind('createMap', function(event){\n    \n    $(this).empty();\n\n    var t = __.fs.mapTiles;\n      \n    var id = $(event.target).attr('id');\n\n    var leafletMap = L.map(id, {\n      attributionControl: false\n    }).setView([55.751244, 37.618423], 9);\n    L.control.attribution({position: 'bottomleft'}).addTo(leafletMap);\n    var tiles = L.tileLayer(t.dark, {attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'});\n      \n       \n      tiles.on('tileload', function (tileEvent) {\n        tileEvent.tile.setAttribute('alt', 'Map tile image');\n        tileEvent.tile.setAttribute('role', 'presentation');\n      }).addTo(leafletMap);\n      \n      leafletMap.search = false;\n    \n    $(event.target).data('map', leafletMap); \n    $(event.target).data('tiles', tiles);\n    $(event.target).data('tileset', t);  \n      \n    leafletMap.on('dragstart zoomstart', function (e) { \n      \n      $('#map-controls').find('.place-select').remove();\n    \n    });  \n        \n      \n    $('.leaflet-bar').find('a').each(function(i,e){\n      $(e).click(function(event){\n        event.preventDefault();\n        $('#app').scrollTop(0);\n      });\n    });\n      \n    \n  }).bind('renderMap', function (event, params) {\n\n    var _this = this,\n        places = params.data.places,\n        map = $(event.target).data('map');\n     \n\n    var c = L.canvasOverlay().drawing(drawingOnCanvas).addTo(map);\n    \n    $(_this).data('canvas', c);\n\n    function drawingOnCanvas(canvasOverlay, p) {\n      let ctx = p.canvas.getContext('2d'),\n          zoom = $(_this).data('map').getZoom(),\n          mapId = $(_this).attr('id');\n      \n      \n          \n          \n      \n      ctx.clearRect(0, 0, p.canvas.width, p.canvas.height);\n\n      let changeOverlay = $('#select-layer').val();\n      let tileset = $('#map').data('tileset');\n      \n      \n      __.mapData()[changeOverlay](drawData);\n \n      \n      \n      function drawData(){\n        \n        let overlay = ( $('#places').data('overlay') != changeOverlay ) ? true : false;  \n\n        $.each(places, function (i, e) {\n\n\n          //setTimeout(function(){\n\n          if (e.canvas.visible) e.canvas = __.placePoint({\n            mapId : mapId, \n            ctx: ctx,\n            canvasOverlay: canvasOverlay,\n            zoom: zoom,\n            place: e\n          });\n          \n          if ( overlay ){\n            $(`#places .place-item[data-id=\"place-${e.id}\"] .place-item__pin`).css({\n              backgroundColor : e.canvas.color \n            })\n          }\n\n          //}, i*10)\n          \n        }); \n\n        \n        \n        $('#places').data('overlay', changeOverlay);\n        \n        window.DATA.places = places;\n        \n        $('#app').data('data',window.DATA);\n        \n        \n        \n        __.mapOverlay()[changeOverlay]( params, canvasOverlay, ctx, zoom, mapId );\n        __.mapTiles(tileset)[changeOverlay]();\n        __.mapLegend()[changeOverlay]();\n        \n      }\n      \n\n    };\n\n  });\n  \n  \n  \n  \n  \n  return $('#map');\n  \n  }","__.core.$mapControls = function () {\n\n  $('#map-controls').bind('create', function (event) {\n\n    let layers = {\n        default: {\n          title: 'Карта'\n        },\n        eco: {\n          title: 'Экология',\n          selected: true\n        },\n        railroad: {\n          title: 'Электрички'\n        },\n        car: {\n          title: 'Автомобиль'\n        },\n        cost: {\n          title: 'Цены'\n        },\n        markets : {\n          title: 'Магазины'\n        },\n        water : {\n          title: 'Скважины'\n        },\n        forest : {\n          title: 'Лес'\n        }\n      },\n      l = '';\n    \n\n    $.each(layers, function (i, e) {\n      let selected = (e.selected) ? 'selected' : ''; \n      l += `<option ${selected} value=\"${i}\">${e.title}</option>`;\n    });\n\n\n    let $selectLayer = $(`<select data-ico=\"eco\" id=\"select-layer\" class=\"select\">${l}</select>`).data('options', layers).change(function (e) {\n\n      var options = $(this).data('options'),\n        val = $(this).val();\n\n      $(this).attr('data-ico',val);\n\n      $.each(options, function (i, e) {\n        e.selected = (val == i) ? true : false;\n      });\n\n\n      $('#map').data('canvas').redraw();\n      \n      __.fs.analytics('change_map-mode',{\n        \n        mode : val\n        \n      });\n      \n\n    });\n\n    $(this).find('.layers-controls').append($selectLayer);\n\n\n\n\n\n  }).trigger('create');    \n\n}","__.selectOnMap = function (event, mapId, layer) {\n\n  removeSelect();\n\n  let DATA = $('#app').data('data'),\n    dataPlaces = DATA.places,\n    x = event.offsetX,\n    y = event.offsetY,\n    objects = '';\n\n\n\n  if (layer && mapId == 'map') {\n\n\n\n    $.each(DATA[layer], function (i, el) {\n\n      if (el.canvas) {\n\n        if (x > el.canvas[mapId].x1 - 10 &&\n          x < el.canvas[mapId].x2 - 10 &&\n          y > el.canvas[mapId].y1 - 10 &&\n          y < el.canvas[mapId].y2 - 10) {\n\n          objects += `<div data-type=\"${layer}\" data-id=\"${el.id}\" class=\"place-select__item place-select__item_object\"><span class=\"icon icon_${layer}\" data-ico=\"${el.type}\"></span><span>${el.name}</span></div>`;\n\n        }\n      }\n\n    });\n\n  }\n\n\n  //each places\n  $.each(dataPlaces, function (i, el) {\n\n    if (x > el.canvas[mapId].x1 - 10 &&\n      x < el.canvas[mapId].x2 + 10 &&\n      y > el.canvas[mapId].y1 - 10 &&\n      y < el.canvas[mapId].y2 + 10 &&\n      el.canvas.visible) {\n\n\n\n      let folder = Math.floor(el.id / 100) * 100,\n        url = `/places/${folder}/place_${el.id}/`,\n        title = (el.type) ? el.type + ' ' + el.name : el.name;\n\n      objects += `<a class=\"place-select__item place-select__item_place\" data-id=\"${el.id}\" href=\"${url}\">${title}</a>`;\n\n\n\n    }\n\n  });\n\n  if (objects) {\n\n    $('#map-controls').append(`<div class=\"place-select\">${objects}</div>`);\n\n    let posX = x - 16;\n    let posY = y - 16;\n    let rect = $('#map')[0].getBoundingClientRect();\n    let r = $('#map-controls .place-select')[0].getBoundingClientRect();\n\n    $('#map-controls .place-select').css({\n      left: (posX + r.width > rect.width) ? (rect.width - r.width) + 'px' : posX + 'px',\n      top: (posY + r.height > rect.height) ? (rect.height - r.height) + 'px' : posY + 'px'\n    });\n\n    setTimeout(function () {\n      $('#map-controls .place-select').addClass('place-select_visible')\n    }, 10);\n\n  }\n\n  __.fs.event.bind('.place-select', 'mouseleave', function (e) {\n    removeSelect();\n  });\n\n  __.fs.event.bind('.place-select__item', 'click', function (e) {\n    e.preventDefault();\n    removeSelect();\n\n\n    if ($(this).is('.place-select__item_place')) {\n\n      __.fs.placeGet($(this).data('id'), function (data, url) {\n\n        __.fs.analytics('select_place', {\n\n          place_id: data.id,\n          place_name: data.name,\n          place_url: url,\n          target: 'map'\n\n        });\n\n        __.detailScreen({ place: data });\n\n\n      });\n\n    }\n\n    if ($(this).is('.place-select__item_object')) {\n\n      let id = $(this).data('id');\n      let type = $(this).data('type');\n\n\n\n      __.fs.mapObjectGet(id, type, function (data) {\n\n\n        __.mapObjectInfo(data, type, mapId);\n\n      });\n\n    }\n\n  });\n\n  function removeSelect() {\n    $('#map-controls').find('.place-select').remove();\n  }\n\n\n\n}","__.core.$header = function(){\n  \n  $('#change-view').click(function(){\n      \n      if ( $(this).text() != 'На карте' ){\n        $(this).text('На карте');\n      } else {\n        $(this).text('Списком');\n      }\n    \n      \n    $('#main').toggleClass('main_screen-2');\n    \n    __.fs.analytics('change_view', {\n      \n      change_to : $(this).text() \n      \n    });\n    \n  });\n  \n  return $('#header'); \n  \n};","__.core.placeScreen = function () {\n  \n  \n  \n}","__.core.$window = function() {\n  \n  \n  var headerHeight = $('#header').outerHeight(),\n      vh = window.innerHeight * 0.01;\n  \n  resize();\n  \n  $(window).resize(function(e){\n    resize();\n    \n  });\n  \n  function resize(){\n\n    $('#app').css({\n      height: $(window).innerHeight() + 'px'\n    });\n    \n    $('#main').css({\n      height : `calc(100% - ${headerHeight}px)`\n    });\n    \n    let vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n  }\n  \n  return $(window);\n  \n}","__.fs.analytics = function(name, params){\n  \n  let event = {\n    event_url : location.href\n  }\n  \n    \n  if (params) $.each(params, function(i,e){\n      \n    event[i] = e;\n      \n  });\n    \n  if (window.amplitude) amplitude.getInstance().logEvent(name, event);\n  if (window.ym) ym(55798045, 'reachGoal', name, event);\n    \n  return event;\n  \n}","__.core.$placeSearch = function(){\n  \n  __.formFilter();\n  \n  $('#place-search').bind('search', function(event, params){\n    \n    let _this = this,\n        value = $(this).find('input').val();\n    \n    \n    \n    \n    __.search({\n      text: value\n    });\n    \n    __.fs.analytics('search_place', {\n      value : $(this).find('input').val() \n    })\n    \n  }).keyup(function(e){\n    \n    var code = e.which;\n    if(code==13)e.preventDefault();\n    if(code==32||code==13){\n     \n      //$(this).trigger('search');\n      \n    }\n    \n    $(this).find('input').attr('data-value', $(this).find('input').val());\n    \n  }).find('.place-search__search').click(function(e){\n\n    e.preventDefault();\n    $(this).trigger('search');\n   \n  });\n  \n  return $('#place-search');\n  \n}","__.strToCost = function(params) {\n  \n    let value = params.value;\n    value = (/\\.\\d/.test(value)) ? value + '' : value + '.00';\n    value = (/\\.\\d{2}/.test(value)) ? value : value + '0';\n    value = (value).replace(/\\d(?=(\\d{3})+\\.)/g, '$& ');\n\n    return value.split('.');\n  \n}","__.fs.colorize = function(params){\n   \n  //default\n  this.default = function() {\n    \n    return rgba(0,98,255,.5);\n    \n  }\n  \n  //markets\n  this.markets = function(params) {\n    \n    var distance = params.markets.distance;\n    var alphaMax = 1;\n    var alpha = (distance < 3) ? alphaMax - interpolation(0, 3, distance, 0, alphaMax) : 0;\n\n    var color = blendColors(\n    [226, 30, 220, .1],\n    [0, 98, 255, alpha]\n    );\n\n    return rgba(color[0],color[1],color[2],color[3]);\n    \n  }\n  \n  \n  //ecology\n  this.eco = function(params) {\n    var r = 10;\n    var distance = (params.eco.distance >= 0) ? params.eco.distance : 100;\n    var alphaMax = 0.6; \n    var alpha = (distance <= r) ? alphaMax - interpolation(0, r, distance, 0, alphaMax) : 0;\n    \n    var color = blendColors(\n    [0, 98, 255, .3],\n    [255, 30, 0, alpha]\n    );\n    \n\n    return rgba(color[0],color[1],color[2],color[3]);\n\n  }\n  \n  //water\n  this.water = function(params) {\n    let water = params.water.value;\n    let color = rgba(120, 120, 120, 0);\n    \n    if (water > 0){\n      \n      if (water < 300) color = rgba(20, 20, 137, 0.2);\n      if (water < 250) color = rgba(20, 20, 198, 0.2);\n      if (water < 200) color = rgba(20, 20, 204, 0.2);\n      if (water < 100) color = rgba(20, 20, 255, 0.3);\n      if (water < 150) color = rgba(40, 60, 255, 0.3);\n      if (water < 100) color = rgba(40, 60, 235, 0.4);\n      if (water < 70)  color = rgba(40, 60, 235, 0.5);\n      if (water < 50)  color = rgba(40, 130, 255, 0.7);\n      if (water < 20)  color = rgba(40, 130, 255, 0.7); \n    } \n    \n    \n    return color;\n  }\n\n    //cost\n    this.cost = function(params) {\n      let cost = params.price.closest;\n\n      let color = rgba(225, 0, 0, 0.5);\n      \n      if (cost > 0){\n    \n        if (cost < 40000000) color = rgba(255, 100, 0, 0.5);\n        if (cost < 20000000) color = rgba(255, 130, 0, 0.5);\n        if (cost < 10000000) color = rgba(255, 215, 0, 0.5);\n        if (cost < 8000000) color = rgba(203, 255, 0, 0.3);\n        if (cost < 5000000) color = rgba(73, 255, 0, 0.3);\n        if (cost < 2000000) color = rgba(0, 255, 209, 0.3);\n\n      } \n      return color;\n    }\n\n    //forest\n    this.forest = function(params) {\n      let distance = params.forest.distance;\n\n      let color = rgba(225, 0, 0, 0.3);\n      \n      if (distance > -1) {\n    \n        if (distance < 1.5) color = rgba(250, 230, 30, 0.3);\n        if (distance < 1) color = rgba(170, 250, 30, 0.5);\n        if (distance < 0.5) color = rgba(100, 250, 30, 1);\n\n      }\n      return color;\n    }\n  \n  //railroad\n  this.railroad = function(params) {\n    \n    var distance = params.railroad.distance;\n    var alphaMax = 1;\n    var alpha = (distance < 3) ? alphaMax - interpolation(0, 3, distance, 0, alphaMax) : 0;\n\n    var color = blendColors(\n    [226, 30, 220, .1],\n    [0, 98, 255, alpha]\n    );\n\n    return rgba(color[0],color[1],color[2],color[3]);\n    \n  }\n  \n  //car distance\n  this.car = function(params) {\n    \n    var time = __.fs.time.toInt(params.car.time.h,params.car.time.m);\n    var mcad_road = params.roads.mcad.distance;\n    var primary_road = params.roads.primary.distance;\n    var color;\n\n    if (time <= 30) color = rgba(0, 177, 255, 0.3);\n    if (time > 30) color = rgba(29, 0, 255, 0.3);\n    if (time > 50) color = rgba(118, 0, 255, 0.3);\n    if (time > 70) color = rgba(226, 0, 255, 0.3);\n    if (time > 100) color = rgba(255, 0, 128, 0.2);\n    if (time > 150) color = rgba(255, 0, 0, 0.2);\n    \n    if (primary_road < 4 ) color = rgba(118, 0, 255, 0.3);\n    if (primary_road < 4 && time < 120) color = rgba(29, 0, 255, 0.3);\n    if (mcad_road < 6) color = rgba(0, 118, 255, 0.5);\n    if (primary_road < 2 && time < 40) color = rgba(0, 118, 255, 0.5);  \n\n    \n    return color;\n    \n  }\n  \n  function rgba(r,g,b,a){\n    return `rgba(${r},${g},${b},${a})`;\n  }\n  \n  function interpolation(minFrom, maxFrom, current, minTo, maxTo) {\n    return minTo + ((current - minFrom) / (maxFrom - minFrom)) * ((maxTo - minTo) / 1);\n  }\n\n  function blendColors(base, added) {\n\n    var mix = [];\n    mix[3] = 1 - (1 - added[3]) * (1 - base[3]); // alpha\n    mix[0] = Math.round((added[0] * added[3] / mix[3]) + (base[0] * base[3] * (1 - added[3]) / mix[3])); // red\n    mix[1] = Math.round((added[1] * added[3] / mix[3]) + (base[1] * base[3] * (1 - added[3]) / mix[3])); // green\n    mix[2] = Math.round((added[2] * added[3] / mix[3]) + (base[2] * base[3] * (1 - added[3]) / mix[3])); // blue\n\n    return mix;\n  }\n  \n  return this;\n  \n}","__.fs.baseUrl = function(){\n  \n  let url = '',\n      location = window.location.pathname;\n  \n  if (location == '/' || location == '/index.html') {\n    url = '';  \n  }\n  \n  if (location.includes('/places/')) {\n    url = '../../../'; \n  }\n  \n  return url;\n  \n}","__.fs.coreModuls = function(moduls){\n  \n  var core = {};\n  \n  $.each(moduls,function(i,e){\n        \n    core[e] = __.core[e]();\n    \n  });\n  \n  return core;\n  \n}","__.core.$places = function () {\n\n  let getData = false;\n\n  let marker = new L.marker([], {\n    icon: L.divIcon({\n      className: 'place-marker'\n    })\n  }).on('click', function (e) {\n    showDetailScreen(e.target.options.id);\n  });\n\n  $('#places').on('mouseenter', '.place-item', function (e) {\n\n    let DATA = ($('#app').data('data')) ? $('#app').data('data').places : [];\n\n    if (DATA.length) {\n      let id = $(e.currentTarget).data('id').split('-')[1];\n      let map = $('#map').data('map');\n\n\n\n      $.each(DATA, function (i, e) {\n\n        if (e.id == id) {\n\n          marker.setLatLng([e.point[1], e.point[0]]);\n          marker.options.id = e.id;\n\n          if (!map.hasLayer(marker)) map.addLayer(marker);\n\n          return false;\n        }\n\n      });\n    }\n\n  });\n\n  $('#places').on('click', '.place-item', function (e) {\n\n    e.preventDefault();\n\n    var DATA = $('#app').data('data').places,\n      map = $('#map').data('map'),\n      id = $(e.currentTarget).data('id').split('-')[1];\n\n    $('.place-item').not(this).removeClass('place-item_active');\n\n\n\n    if ($(this).is('.place-item_active')) {\n      $(this).removeClass('place-item_active');\n      $('#detail-screen').remove();\n\n\n    } else {\n      $(this).addClass('place-item_active');\n\n\n      showDetailScreen(id);\n\n      \n\n\n\n    }\n\n  })\n\n  function showDetailScreen(id) {\n    __.fs.placeGet(id, function (data, url) {\n\n      \n      __.fs.analytics('select_place', {\n\n        place_id: data.id,\n        place_name: data.name,\n        place_url: url,\n        target: 'list'\n\n      });\n\n      __.detailScreen({place : data});\n\n    });\n  }\n\n\n  $('#places').scroll(function (e) {\n    var _this = this,\n      $last = $(_this).find('.place-item').last(),\n      length = $(_this).find('.place-item').length,\n      map = $('#map').data('map');\n\n\n\n\n    if (map && !map.search && $last.length && $last.offset().top < $(window).outerHeight() * 2) {\n\n      var DATA = $('#app').data('data').places,\n        count = 100;\n\n      if (!DATA[0].railroad.closest.name && !getData) {\n\n        \n\n        $.get('/bin/data/railroad.json', function (data) {\n\n\n          $.each(data, function (i, e2) {\n\n\n            if (window.DATA.railroad[e2.id]) {\n\n              for (var k in e2) window.DATA.railroad[e2.id][k] = e2[k];\n\n            } else {\n\n              window.DATA.railroad[e2.id] = e2;\n\n            }\n\n\n          });\n\n          $('#app').data('data', window.DATA);\n\n          appendItems(DATA, _this, count, length);\n\n        });\n\n        getData = true;\n\n      } else {\n\n        appendItems(DATA, _this, count, length);\n\n      }\n\n      //append new item to place list\n      function appendItems(data, _this, count, length) {\n\n        $.each(data, function (i, e) {\n\n          if (length < i) {\n\n            $(_this).append(__.placeItem(e));\n            count--;\n\n          }\n\n          if (!count) return false;\n        });\n\n      }\n\n\n    }\n\n  }).bind('renderList', function (event, params) {\n\n\n    var _this = this,\n      onlyVisible = params.onlyVisible || false,\n      places = params.places,\n      DATA = $('#app').data('data').places;\n\n\n\n\n    $(_this).empty();\n\n\n    if (!DATA[0].railroad.closest.name && !getData) {\n\n      getData = true;\n\n      $.get('/bin/data/railroad.json', function (data) {\n\n\n        $.each(data, function (i, e2) {\n\n\n          if (window.DATA.railroad[e2.id]) {\n\n            for (var k in e2) window.DATA.railroad[e2.id][k] = e2[k];\n\n          } else {\n\n            window.DATA.railroad[e2.id] = e2;\n\n          }\n\n\n        });\n\n        $('#app').data('data', window.DATA);\n\n        render();\n\n      });\n\n\n    } else {\n\n      render();\n\n\n    }\n\n    function render() {\n\n      \n\n      $('#places').empty();\n\n      setTimeout(function(){\n\n      $.each(places, function (i, e) {\n\n        \n        if (onlyVisible) {\n\n          if (e.canvas.visible) {\n\n        \n            $(_this).append(__.placeItem(e));\n\n            \n          }\n\n\n        } else {\n\n          if (i < 100) {\n\n            $(_this).append(__.placeItem(e));\n\n          } else {\n            return false;\n          }\n\n        }\n\n      });\n\n      },1000);\n\n    }\n\n  });\n\n  return $('#places');\n\n}","__.fs.event = {\n  bind: function (elem, eventName, event) {\n    \n\n    \n    let listners = __.core.$app.data('listners') || {};\n    if (!listners[elem + '|' + eventName]) {\n      listners[elem + '|' + eventName] = {\n        name: elem,\n        event: eventName\n      }\n      \n      __.core.$app.data('listners', listners);\n\n      $(document).on(eventName, elem, event);\n    }\n  },\n  unbind: function (elem, eventName) {\n    let listners = __.core.$app.data('listners') || {};\n    delete listners[elem + '|' + eventName];\n    \n    __.core.$app.data('listners', listners);\n    $(document).off(eventName, elem);\n  }\n}","__.mapLegend = function () {\n\n    if ( !$('.map-legend').length ) $(`#map .leaflet-bottom.leaflet-right`).append('<div class=\"map-legend\"></div>');\n\n\n    this.default = function () {\n        $('.map-legend').html(`\n        \n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:#0464ff;\"></div>\n                <div class=\"item__description\">Посёлок</div>\n            </div>\n\n        `);\n\n        return false\n    };\n\n    this.eco = function () {\n\n        $('.map-legend').html(`\n        \n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(0, 98, 255,1);\"></div>\n                <div class=\"item__description\">Чисто</div>\n            </div>\n\n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(255, 30, 0,1);\"></div>\n                <div class=\"item__description\">Рядом загрязнение или шум</div>\n            </div>\n\n        `);\n\n        return false;\n    }\n\n    this.cost = function () {\n\n        $('.map-legend').html(`\n        \n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(0, 255, 209, 1)\"></div>\n                <div class=\"item__description\">< 2 млн. руб.</div>\n            </div>\n\n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(73, 255, 0, 1);\"></div>\n                <div class=\"item__description\">< 5 млн. руб.</div>\n            </div>\n\n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(203, 255, 0, 1);\"></div>\n                <div class=\"item__description\">< 8 млн. руб.</div>\n            </div>\n\n\n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(255, 215, 0, 1);\"></div>\n                <div class=\"item__description\">< 10 млн. руб.</div>\n            </div>\n\n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(225, 0, 0, 1);\"></div>\n                <div class=\"item__description\">Дорого</div>\n            </div>\n\n        `);\n\n        return false;\n    }\n\n    this.forest = function () {\n\n        $('.map-legend').html(`\n        \n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(100, 250, 30, 1);\"></div>\n                <div class=\"item__description\">Лес рядом</div>\n            </div>\n\n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(250, 230, 30, 1);\"></div>\n                <div class=\"item__description\">1.5 км до леса</div>\n            </div>\n\n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(225, 0, 0, 1);\"></div>\n                <div class=\"item__description\">Лес далеко</div>\n            </div>\n\n        `);\n\n        return false;\n    }\n\n    this.railroad = function () {\n\n        $('.map-legend').html(`\n        \n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(0, 98, 255, 1);\"></div>\n                <div class=\"item__description\">Рядом станция</div>\n            </div>\n\n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(226, 30, 220, 1);\"></div>\n                <div class=\"item__description\">Станция далеко</div>\n            </div>\n\n        `);\n\n        return false;\n    }\n\n    this.car = function () {\n\n        $('.map-legend').html(`\n        \n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(0, 177, 255, 1);\"></div>\n                <div class=\"item__description\">До Москвы 30 мин</div>\n            </div>\n\n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(226, 30, 100, 1);\"></div>\n                <div class=\"item__description\">До Москвы больше часа</div>\n            </div>\n\n        `);\n\n        return false;\n    }\n\n    this.markets = function () {\n\n        $('.map-legend').html(`\n        \n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(0, 177, 255, 1);\"></div>\n                <div class=\"item__description\">Рядом</div>\n            </div>\n\n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(226, 30, 100, 1);\"></div>\n                <div class=\"item__description\">Далеко</div>\n            </div>\n\n        `);\n\n        return false;\n    }\n\n    this.water = function () {\n\n        $('.map-legend').html(`\n        \n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(40, 130, 255, 1);\"></div>\n                <div class=\"item__description\">Глубина < 20 м</div>\n            </div>\n\n            <div class=\"item\">\n                <div class=\"item__point\" style=\"background:rgba(20, 20, 137, 1);\"></div>\n                <div class=\"item__description\">Глубина > 200 м</div>\n            </div>\n\n        `);\n\n        return false;\n    }\n\n    return this;\n\n}    ","__.fs.html = function(str){\n  return str.replace(/\\s+/g, ' ').trim();\n}\n","__.fs.decodeData = function (data) {\n  var places = data;\n  var eco = {};\n  var railroad = {};\n  var cost = {};\n  var markets = {}; \n  var medic = {};\n  var cities = {};\n  var roads = {\n    mcad : {},\n    primary : {}\n  };\n  var water = {};\n  var forest = {};\n  \n  window.DATA = {\n    places : places,\n    eco : eco,\n    railroad : railroad,\n    markets : markets,\n    medic : medic,\n    cities : cities,\n    roads : roads,\n    water : water,\n    cost : cost,\n    forest : forest\n  }\n  \n  $.each(data, function(i, place) {\n\n      place.canvas = {\n        visible : true\n      }\n  \n      \n      //if (!window.DATA.railroad[place.railroad.closestId]) window.DATA.railroad[place.railroad.closestId] = {\n        //id : place.railroad.closestId\n      //}\n      \n      //if (!window.DATA.markets[place.markets.closestId]) window.DATA.markets[place.markets.closestId] = {\n        //id : place.markets.closestId\n      //}  \n      \n      //if (!window.DATA.medic[place.medic.closestId]) window.DATA.medic[place.medic.closestId] = {\n        //id : place.medic.closestId\n      //}\n      \n      //if (!window.DATA.cities[place.city.closestId]) window.DATA.cities[place.city.closestId] = {\n        //id : place.city.closestId\n      //}\n      \n      //if (!window.DATA.roads.mcad[place.roads.mcad.closestId]) window.DATA.roads.mcad[place.roads.mcad.closestId] = {\n        //id : place.roads.mcad.closestId\n      //}\n      \n      \n      //place.railroad.closest = window.DATA.railroad[place.railroad.closestId];\n      //place.markets.closest = window.DATA.markets[place.markets.closestId];\n      //place.medic.closest = window.DATA.medic[place.medic.closestId];\n      //place.city.closest = window.DATA.cities[place.city.closestId];\n      //place.roads.mcad.closest = window.DATA.roads.mcad[place.roads.mcad.closestId];\n      \n  });\n  \n  \n  \n  return window.DATA;\n\n\n}","__.fs.mapObjectGet = function(id, type, callback) {\n\n  let DATA = $('#app').data('data')[type],\n      object = null;\n  \n  \n  $.each(DATA, function(i,e){\n    \n    if (e.id == id){\n      if (e.full){\n        \n        object = e;\n        \n      } else {\n        \n        object = e;\n        \n      }\n         \n    }\n    \n  });\n  \n  callback(object);\n  \n}","__.fs.browserDetect = function () {\n\n  var nav = navigator; \n\tvar nVer = nav.appVersion;\n\tvar nAgt = nav.userAgent;\n\tvar browserName = nav.appName;\n\tvar fullVersion = '' + parseFloat(nav.appVersion);\n\tvar majorVersion = parseInt(nav.appVersion, 10);\n\tvar nameOffset, verOffset, ix;\n  \n\n\tif ((verOffset = nAgt.indexOf(\"Opera\")) != -1) {\n\t\tbrowserName = \"opera\";\n\t\tfullVersion = nAgt.substring(verOffset + 6);\n\t\tif ((verOffset = nAgt.indexOf(\"Version\")) != -1)\n\t\t\tfullVersion = nAgt.substring(verOffset + 8);\n    \n\t} else if ((verOffset = nAgt.indexOf(\"MSIE\")) != -1) {\n\t\tbrowserName = \"ie\";\n\t\tfullVersion = nAgt.substring(verOffset + 5);\n    \n\t} else if ((verOffset = nAgt.indexOf(\"Chrome\")) != -1) {\n\t\tbrowserName = \"chrome\";\n\t\tfullVersion = nAgt.substring(verOffset + 7);\n    \n\t} else if ((verOffset = nAgt.indexOf(\"Safari\")) != -1) {\n\t\tbrowserName = \"safari\";\n\t\tfullVersion = nAgt.substring(verOffset + 7);\n\t\tif ((verOffset = nAgt.indexOf(\"Version\")) != -1)\n\t\t\tfullVersion = nAgt.substring(verOffset + 8);\n    \n\t} else if ((verOffset = nAgt.indexOf(\"Firefox\")) != -1) {\n\t\tbrowserName = \"firefox\";\n\t\tfullVersion = nAgt.substring(verOffset + 8);\n    \n\t} else if (nAgt.indexOf(\"FBAN\") != -1 && nAgt.indexOf(\"FBAV\") != -1 ) {\n\t\tbrowserName = \"facebook\";\n\t\tfullVersion = 0;\n    \n\t} else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) <\n\t\t(verOffset = nAgt.lastIndexOf('/'))) {\n\t\tbrowserName = nAgt.substring(nameOffset, verOffset);\n\t\tfullVersion = nAgt.substring(verOffset + 1);\n\t\tif (browserName.toLowerCase() == browserName.toUpperCase()) {\n\t\t\tbrowserName = nav.appName;\n\t\t}\n\t}\n\n\tif ((ix = fullVersion.indexOf(\";\")) != -1)\n\t\tfullVersion = fullVersion.substring(0, ix);\n\tif ((ix = fullVersion.indexOf(\" \")) != -1)\n\t\tfullVersion = fullVersion.substring(0, ix);\n\n\tmajorVersion = parseInt('' + fullVersion, 10);\n\tif (isNaN(majorVersion)) {\n\t\tfullVersion = '' + parseFloat(nav.appVersion);\n\t\tmajorVersion = parseInt(nav.appVersion, 10);\n\t}\n\n  var iOS = /iPad|iPhone|iPod/.test(nav.userAgent) && !window.MSStream;\n  var ratio = window.devicePixelRatio || 1;\n  var screen = {\n    width : window.screen.width * ratio,\n    height : window.screen.height * ratio\n  };\n  \n\treturn {\n\t\tbrowserName: browserName.toLowerCase(),\n\t\tfullVersion: fullVersion,\n\t\tmajorVersion: majorVersion,\n\t\tappName: nav.appName.toLowerCase(),\n\t\tuserAgent: nav.userAgent.toLowerCase(),\n\t\tplatform: nav.platform.toLowerCase(),\n    iphoneX: (iOS && screen.width == 1125 && screen.height === 2436) ? 'iphoneX' : '',\n\t\tisMobile: (function () {\n\t\t\tvar check = 'not-mobile';\n\t\t\t(function (a) {\n\t\t\t\tif (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = 'mobile';\n\t\t\t})(nav.userAgent || nav.vendor || window.opera);\n\t\t\treturn check;\n\t\t})()\n\t}\n  \n};\n\n","__.fs.substringSearch = function(options) {\n\n  options = options || {}\n  \n  options.weight   = options.weight || 100;\n  options.multiply = options.multiply || true;\n\n  let _this = this,\n    results = [],\n    proto = {\n      weight: 0,\n      search: '',\n      res:    '',\n      in:     -1,\n      out:    -1,\n      length: 0\n    };\n\n  /*\n    search in the string\n  */\n  this.inString = function (substr, str) {\n\n    substr = '' + substr;\n\n    let wordsSearch = (substr.length) ? substr.trim().split(' ') : [''],\n      words = (str.length) ? str.trim().split(' ') : [''],\n      wsl = wordsSearch.length,\n      sl = substr.length, \n      wl = words.length, \n      _res = {\n        str: str\n      },\n      result = [];\n\n    if (sl) {\n      \n\n      if (substr.indexOf(' ') + 1) {\n\n        let fullMatch = search(substr, _res);\n\n        if (fullMatch.weight) fullMatch.weight = fullMatch.weight * wl;\n\n        result = fullMatch;\n\n      }\n\n      for (var i = wsl; i--;) {\n\n        result = result.concat(search(wordsSearch[i], _res));\n\n      }\n\n      result = result.sort(compare);\n\n    } else {\n\n      let tempItem = copyObject(proto);\n      tempItem.search = substr;\n      tempItem.res = _res;\n\n      result.push(tempItem);\n\n    }\n\n    return result;\n\n  }\n  \n  \n  /*\n    search in the array\n  */\n  this.inArray = function (substr, arr, getKey, isFind, isNotFind) {\n\n    substr = '' + substr;\n\n    let result = [],\n        al = arr.length;\n\n    for (var i = al; i--;) {\n\n      let str = getKey(arr[i]),\n        _res = {\n          obj: arr[i],\n          str: str,\n          index: i\n        },\n        _result = _this.inString(substr, str),\n        rl = _result.length;\n\n      if (rl) {\n        for (var r = rl; r--;) {\n        \n          if (isFind) isFind(arr[i]);\n          \n          if (_result[r]) _result[r].res = _res;\n\n        }\n        \n        result = result.concat(_result);\n        \n      } else {\n        \n        if (isNotFind) isNotFind(arr[i]);\n        \n      }\n\n    \n\n    }\n\n    result = result.sort(compare);\n\n    return result;\n\n  }\n\n  function search(substr, _res) {\n\n    let search = substr.toLowerCase().trim(),\n      str = ''+_res.str,\n      normalStr = str.toLowerCase(),\n      pos = normalStr.indexOf(search),\n      w = options.weight,\n      nl = normalStr.length,\n      sl = search.length,  \n      length = substr.length * (w / 10),\n      result = [];\n        \n\n    while (true) {\n\n      let tempItem = copyObject(proto);\n      tempItem.search = substr;\n      tempItem.res = _res;\n\n      let foundPos = normalStr.indexOf(search, pos);\n\n      if (foundPos == -1) break;\n\n      if (nl >= sl && normalStr.indexOf(search, pos) + 1) {\n\n        tempItem.weight += (nl / sl * 100 > 50) ? w + length : nl / sl * w + length;\n        tempItem.weight = nl - foundPos;\n        tempItem.in = foundPos;\n        tempItem.out = tempItem.in + search.length;\n        tempItem.length = sl;\n\n        if (nl === sl) tempItem.weight += w * 2;\n\n        if (normalStr[0] === search[0]) tempItem.weight += w;\n\n      }\n\n      result.push(tempItem);\n\n      pos = foundPos + 1;\n\n    }\n    \n    if (!options.multiply){\n      result = result.sort(compare);\n      result = [result[0]];\n    }\n\n    return result;\n  }\n\n  function compare(a, b) {\n\n    a = a.weight;\n    b = b.weight;\n\n    let comparison = 0;\n\n    if (a < b) {\n      comparison = 1;\n    } else if (a > b) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  function copyObject(src) {\n    return Object.assign({}, src);\n  }\n\n  return this;\n\n};","__.fs.time = {\n  toInt: function (h, m) {\n\n    m = (m < 10) ? '0' + m : '' + m;\n    h = '' + h;\n\n    return +(h + m);\n\n  }\n}","__.fs.mapTiles = (function(){\n  \n  let format = (__.fs.browserDetect().browserName == 'chrome') ? 'webp' : 'png';\n  \n  return {\n      simple : `https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}.${format}`,\n      dark : `https://{s}.tiles.mapbox.com/v4/mapbox.dark/{z}/{x}/{y}@2x.${format}?access_token=pk.eyJ1IjoiZ2xlYWZsZXQiLCJhIjoiY2lxdWxoODl0MDA0M2h4bTNlZ2I1Z3gycyJ9.vrEWCC2nwsGfAYKZ7c4HZA`\n    } \n  \n  \n})();","__.fs.mapSprites = function (scale) {\n\n  return {\n    recicle: 1,\n    radiation: 20 * scale,\n    factory: 40 * scale,\n    trash: 60 * scale,\n    airport: 80 * scale,\n    energy: 100 * scale,\n    water: 120 * scale,\n    point_yellow: 140 * scale,\n    power: 160 * scale,\n    point_blue: 180 * scale,\n    point_green: 200 * scale,\n    railroad: 220 * scale,\n    black_mesa : 240 * scale,\n    army : 260 * scale,\n    markets : 280 * scale,\n    water_depth : 300 * scale\n  }\n}","__.fs.placeGet = function(id, callback){\n  \n  let folder = Math.floor(id/100) * 100,\n      url = `/bin/data/places/${folder}/place_${id}/data.json`;\n  \n  $.get(url, function(data){\n\n    callback(data, url);\n\n  });\n  \n}","__.fs.url = {\n  \n  objToUrl : function(url,obj){\n    url = url + '?' || '' \n    let uri = encodeURIComponent;\n    return url + Object.entries(obj).map(([key, val]) => `${uri(key)}=${uri(val)}`).join('&');\n  }\n  \n}"],"sourceRoot":"/source/"}