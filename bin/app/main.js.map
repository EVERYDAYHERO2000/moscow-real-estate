{"version":3,"sources":["bind-event.js","canvas.js","main.js","components/place-item/place-item.js"],"names":["__","listners","bindEvent","elem","eventName","event","window","name","$","document","on","unbindEvent","off","L","CanvasOverlay","Class","extend","initialize","userDrawFunc","options","this","_userDrawFunc","setOptions","drawing","params","canvas","_canvas","redraw","_frame","Util","requestAnimFrame","_redraw","onAdd","map","_map","DomUtil","create","size","getSize","width","x","height","y","animated","zoomAnimation","Browser","any3d","addClass","_panes","overlayPane","appendChild","_reset","_resize","_animateZoom","onRemove","getPanes","removeChild","this_canvas","addTo","addLayer","resizeEvent","newSize","topLeft","containerPointToLayerPoint","setPosition","bounds","getBounds","zoomScale","getEast","getWest","zoom","getZoom","e","scale","getZoomScale","offset","_getCenterOffset","center","_multiplyBy","subtract","_getMapPanePos","style","TRANSFORM","getTranslateString","canvasOverlay","leafletMap","setView","tileLayer","place","ctx","getContext","clearRect","globalAlpha","each","i","fillStyle","dot","latLngToContainerPoint","point","beginPath","arc","Math","PI","fill","closePath","y1","DATA","places","renderList","click","offsetY","el","x1","x2","y2","console","log","placeItem","eco","distance","concat","closest","rjd","railroad","time","h","m","tpl","id","type","price","from","to","moscow","car","city"],"mappings":"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","file":"main.js","sourcesContent":["function bindEvent(elem, eventName, event){\n  if (!window.listners[elem + '|' + eventName]){\n    window.listners[elem + '|' + eventName] = {\n      name : elem,\n      event : eventName\n    }\n    $(document).on(eventName,elem,event);\n  }\n}\n\nfunction unbindEvent(elem, eventName){\n  delete window.listners[elem + '|' + eventName];\n  $(document).off(eventName, elem);\n}","/*\n UPDATE July 2016 , moved and updated to here: https://github.com/Sumbera/gLayers.Leaflet\n \n Generic  Canvas Overlay for leaflet, \n Stanislav Sumbera, April , 2014\n\n - added userDrawFunc that is called when Canvas need to be redrawn\n - added few useful params fro userDrawFunc callback\n  - fixed resize map bug\n  inspired & portions taken from  :   https://github.com/Leaflet/Leaflet.heat\n  \n  License: MIT\n\n*/\n\n\nL.CanvasOverlay = L.Class.extend({\n\n    initialize: function (userDrawFunc, options) {\n        this._userDrawFunc = userDrawFunc;\n        L.setOptions(this, options);\n    },\n\n    drawing: function (userDrawFunc) {\n        this._userDrawFunc = userDrawFunc;\n        return this;\n    },\n\n    params:function(options){\n        L.setOptions(this, options);\n        return this;\n    },\n    \n    canvas: function () {\n        return this._canvas;\n    },\n\n    redraw: function () {\n        if (!this._frame) {\n            this._frame = L.Util.requestAnimFrame(this._redraw, this);\n        }\n        return this;\n    },\n\n    \n  \n    onAdd: function (map) {\n        this._map = map;\n        this._canvas = L.DomUtil.create('canvas', 'leaflet-heatmap-layer');\n\n        var size = this._map.getSize();\n        this._canvas.width = size.x;\n        this._canvas.height = size.y;\n\n        var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n        L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n\n\n        map._panes.overlayPane.appendChild(this._canvas);\n\n        map.on('moveend', this._reset, this);\n        map.on('resize',  this._resize, this);\n\n        if (map.options.zoomAnimation && L.Browser.any3d) {\n            map.on('zoomanim', this._animateZoom, this);\n        }\n\n        this._reset();\n    },\n\n    onRemove: function (map) {\n        map.getPanes().overlayPane.removeChild(this._canvas);\n \n        map.off('moveend', this._reset, this);\n        map.off('resize', this._resize, this);\n\n        if (map.options.zoomAnimation) {\n            map.off('zoomanim', this._animateZoom, this);\n        }\n        this_canvas = null;\n\n    },\n\n    addTo: function (map) {\n        map.addLayer(this);\n        return this;\n    },\n\n    _resize: function (resizeEvent) {\n        this._canvas.width  = resizeEvent.newSize.x;\n        this._canvas.height = resizeEvent.newSize.y;\n    },\n    _reset: function () {\n        var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n        L.DomUtil.setPosition(this._canvas, topLeft);\n        this._redraw();\n    },\n\n    _redraw: function () {\n        var size     = this._map.getSize();\n        var bounds   = this._map.getBounds();\n        var zoomScale = (size.x * 180) / (20037508.34  * (bounds.getEast() - bounds.getWest())); // resolution = 1/zoomScale\n        var zoom = this._map.getZoom();\n     \n        // console.time('process');\n\n        if (this._userDrawFunc) {\n            this._userDrawFunc(this,\n                                {\n                                    canvas   :this._canvas,\n                                    bounds   : bounds,\n                                    size     : size,\n                                    zoomScale: zoomScale,\n                                    zoom : zoom,\n                                    options: this.options\n                               });\n        }\n       \n       \n        // console.timeEnd('process');\n        \n        this._frame = null;\n    },\n\n    _animateZoom: function (e) {\n        var scale = this._map.getZoomScale(e.zoom),\n            offset = this._map._getCenterOffset(e.center)._multiplyBy(-scale).subtract(this._map._getMapPanePos());\n\n        this._canvas.style[L.DomUtil.TRANSFORM] = L.DomUtil.getTranslateString(offset) + ' scale(' + scale + ')';\n\n    }\n});\n\nL.canvasOverlay = function (userDrawFunc, options) {\n    return new L.CanvasOverlay(userDrawFunc, options);\n};\n","\n$(function(){\n  \n  var leafletMap = L.map('map').setView([55.751244, 37.618423], 9);\n  L.tileLayer(\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}.png\")\n  //L.tileLayer(\"https://{s}.tiles.mapbox.com/v4/mapbox.dark/{z}/{x}/{y}@2x.png?access_token=pk.eyJ1IjoiZ2xlYWZsZXQiLCJhIjoiY2lxdWxoODl0MDA0M2h4bTNlZ2I1Z3gycyJ9.vrEWCC2nwsGfAYKZ7c4HZA\")\n    .addTo(leafletMap);\n  \n  $.get('bin/data/places.json',function(places){\n    window.DATA = places;\n    renderMap(places);\n    renderList(places);\n  });\n  \n  $('#map').click(function(e){\n    \n    var x = e.offsetX,\n        y = e.offsetY;\n    \n    $.each(DATA,function(i,el){\n      \n      if (x > el.canvas.x1 && \n          x < el.canvas.x2 && \n          y > el.canvas.y1 && \n          y < el.canvas.y2 ){\n        console.log(y, el.canvas, el.name);\n      }\n      \n    });\n    \n  });\n  \n  function renderList(place) {\n    $.each(place,function(i,e){\n      \n      $('#places').append(__.placeItem(e));\n      \n    });\n  }\n  \n  function renderMap(place) {\n    L.canvasOverlay().drawing(drawingOnCanvas).addTo(leafletMap);\n\n\n    function drawingOnCanvas(canvasOverlay, params) {\n      var ctx = params.canvas.getContext('2d');\n      ctx.clearRect(0, 0, params.canvas.width, params.canvas.height);\n      \n\n      ctx.globalAlpha = 0.3;\n\n      \n      $.each(place, function(i,e){\n        \n            \n        \n            \n        \n            ctx.fillStyle = 'rgb(0, 98, 255)';\n                \n            var dot = canvasOverlay._map.latLngToContainerPoint([e.point[1], e.point[0]]);\n            ctx.beginPath();\n            ctx.arc(dot.x, dot.y, 3, 0, Math.PI * 2);\n            ctx.fill();\n            ctx.closePath(); \n          \n        \n            e.canvas = {\n              x1 : dot.x,\n              y1 : dot.y,\n              x2: dot.x + 6,\n              y2: dot.y + 6\n            };\n        \n            \n        \n      });\n      \n      \n      \n    };\n  }\n  \n  \n})","__.placeItem = function(params){\n  \n  let eco = (params.eco.distance < 10) ? `<div>${params.eco.closest.name} в ${params.eco.distance}км</div>` : '';\n    \n  let rjd = (params.railroad.distance < 3) ? `<div style=\"color: green\">Ж/д станция ${params.railroad.closest.name} в ${params.railroad.distance}км, до москвы: ${params.railroad.closest.time.h}ч ${params.railroad.closest.time.m}мин (${params.railroad.closest.distance}км)</div>` : ''; \n  \n  \n  let tpl = \n`<div class=\"place-item\" id=\"place-${params.id}\">\n  <div>${params.type} ${params.name}</div>\n  <div style=\"color:red\">${(params.price.from) ? params.price.from:''} ${(params.price.to) ? params.price.to:''}</div>\n  <div>Расстояние до Москвы: ${params.moscow.distance}км</div>\n  <div>На машине: ${params.car.time.h}ч ${params.car.time.m}мин (${params.car.distance}км)</div>\n  ${rjd}\n  <div>Ближайший город: ${params.city.closest.name} в ${params.city.distance}км</div>\n  ${eco}\n  <hr>\n</div>`;\n  \n  \n    \n  bindEvent('.place-item', 'click', function(e){\n      \n    console.log(e)\n      \n  })\n    \n  return tpl;\n  \n}"],"sourceRoot":"/source/"}