{"version":3,"sources":["bind-event.js","decode-data.js","canvas.js","main.js","components/cost/cost.js","components/place-item/place-item.js","components/place-point/colorize.js","components/place-point/place-point.js"],"names":["__","listners","bindEvent","elem","eventName","event","window","name","$","document","on","unbindEvent","off","decodeData","data","places","each","p","i","e","ecos","ecoId","obj","cities","cityId","railroad","stationId","id","point","price","from","to","n","readyDate","type","t","class","k","car","distance","time","h","m","moscow","closest","r","s","city","c","eco","ec","push","L","CanvasOverlay","Class","extend","initialize","userDrawFunc","options","this","_userDrawFunc","setOptions","drawing","params","canvas","_canvas","redraw","_frame","Util","requestAnimFrame","_redraw","onAdd","map","_map","DomUtil","create","size","getSize","width","x","height","y","animated","zoomAnimation","Browser","any3d","addClass","_panes","overlayPane","appendChild","_reset","_resize","_animateZoom","onRemove","getPanes","removeChild","this_canvas","addTo","addLayer","resizeEvent","newSize","topLeft","containerPointToLayerPoint","setPosition","bounds","getBounds","zoomScale","getEast","getWest","zoom","getZoom","scale","getZoomScale","offset","_getCenterOffset","center","_multiplyBy","subtract","_getMapPanePos","style","TRANSFORM","getTranslateString","canvasOverlay","leafletMap","setView","tileLayer","place","ctx","clearRect","placePoint","renderMap","DATA","append","placeItem","renderList","click","offsetX","offsetY","el","x1","x2","y1","y2","console","log","cost","value","test","replace","split","JSON","parse","stringify","concat","rjd","global","component","tpl","lat","currentTarget","lon","LatLng","colorize","rgba","g","b","a","interpolation","minFrom","maxFrom","current","minTo","maxTo","blendColors","base","added","mix","Math","round","color","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","fillStyle","dot","latLngToContainerPoint","beginPath","arc","PI","fill","closePath"],"mappings":"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","file":"main.js","sourcesContent":["function bindEvent(elem, eventName, event){\n  if (!window.listners[elem + '|' + eventName]){\n    window.listners[elem + '|' + eventName] = {\n      name : elem,\n      event : eventName\n    }\n    $(document).on(eventName,elem,event);\n  }\n}\n\nfunction unbindEvent(elem, eventName){\n  delete window.listners[elem + '|' + eventName];\n  $(document).off(eventName, elem);\n}","function decodeData(data) {\n  var places = [];\n\n\n  $.each(data.p, function (i, e) {\n\n    var p = {\n      id: e[7],\n      point: [e[15], e[0]],\n      price: {\n        from: (e[13] > -1) ? e[13] : null,\n        to: (e[14] > -1) ? e[14] : null\n      },\n      name: data.n[e[17]],\n      readyDate: (e[6]) ? e[6] : null,\n      type: (e[16] > -1) ? data.t[e[16]] : null,\n      class: (e[18] > -1) ? data.k[e[18]] : null,\n      car: {\n        distance: e[1],\n        time: {\n          h: e[2],\n          m: e[3]\n        }\n      },\n      moscow: {\n        distance: e[8]\n      },\n      railroad: {\n        distance: e[4],\n        closest: (function (railroad, stationId) {\n          var obj = {}\n          $.each(railroad, function (i, s) {\n            if (stationId == s[0]) {\n              obj = {\n                id: s[0],\n                name: s[2],\n                point: [s[1], s[3]],\n                distance: s[4],\n                time: {\n                  h: s[5],\n                  m: s[6]\n                }\n              }\n            }\n          });\n          return obj;\n        })(data.r, e[5])\n      },\n      city: {\n        distance: e[11],\n        closest: (function (cities, cityId) {\n          var obj = {}\n          $.each(cities, function (i, c) {\n            if (cityId == c[0]) {\n              obj = {\n                id: c[0],\n                name: c[2],\n                point: [c[1], c[3]]\n              }\n            }\n          });\n          return obj;\n        })(data.c, e[12])\n      },\n      eco: {\n        distance: e[9],\n        closest: (function (ecos, ecoId) {\n          var obj = {}\n          $.each(ecos, function (i, ec) {\n            if (ecoId == ec[0]) {\n              obj = {\n                id: ec[0],\n                name: ec[2],\n                point: [ec[1], ec[3]],\n                type: ec[4]\n              }\n            }\n          });\n          return obj;\n        })(data.e, e[10])\n      }\n    }\n\n    places.push(p);\n\n\n  });\n\n  return places;\n\n\n}","/*\n UPDATE July 2016 , moved and updated to here: https://github.com/Sumbera/gLayers.Leaflet\n \n Generic  Canvas Overlay for leaflet, \n Stanislav Sumbera, April , 2014\n\n - added userDrawFunc that is called when Canvas need to be redrawn\n - added few useful params fro userDrawFunc callback\n  - fixed resize map bug\n  inspired & portions taken from  :   https://github.com/Leaflet/Leaflet.heat\n  \n  License: MIT\n\n*/\n\n\nL.CanvasOverlay = L.Class.extend({\n\n    initialize: function (userDrawFunc, options) {\n        this._userDrawFunc = userDrawFunc;\n        L.setOptions(this, options);\n    },\n\n    drawing: function (userDrawFunc) {\n        this._userDrawFunc = userDrawFunc;\n        return this;\n    },\n\n    params:function(options){\n        L.setOptions(this, options);\n        return this;\n    },\n    \n    canvas: function () {\n        return this._canvas;\n    },\n\n    redraw: function () {\n        if (!this._frame) {\n            this._frame = L.Util.requestAnimFrame(this._redraw, this);\n        }\n        return this;\n    },\n\n    \n  \n    onAdd: function (map) {\n        this._map = map;\n        this._canvas = L.DomUtil.create('canvas', 'leaflet-heatmap-layer');\n\n        var size = this._map.getSize();\n        this._canvas.width = size.x;\n        this._canvas.height = size.y;\n\n        var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n        L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n\n\n        map._panes.overlayPane.appendChild(this._canvas);\n\n        map.on('moveend', this._reset, this);\n        map.on('resize',  this._resize, this);\n\n        if (map.options.zoomAnimation && L.Browser.any3d) {\n            map.on('zoomanim', this._animateZoom, this);\n        }\n\n        this._reset();\n    },\n\n    onRemove: function (map) {\n        map.getPanes().overlayPane.removeChild(this._canvas);\n \n        map.off('moveend', this._reset, this);\n        map.off('resize', this._resize, this);\n\n        if (map.options.zoomAnimation) {\n            map.off('zoomanim', this._animateZoom, this);\n        }\n        this_canvas = null;\n\n    },\n\n    addTo: function (map) {\n        map.addLayer(this);\n        return this;\n    },\n\n    _resize: function (resizeEvent) {\n        this._canvas.width  = resizeEvent.newSize.x;\n        this._canvas.height = resizeEvent.newSize.y;\n    },\n    _reset: function () {\n        var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n        L.DomUtil.setPosition(this._canvas, topLeft);\n        this._redraw();\n    },\n\n    _redraw: function () {\n        var size     = this._map.getSize();\n        var bounds   = this._map.getBounds();\n        var zoomScale = (size.x * 180) / (20037508.34  * (bounds.getEast() - bounds.getWest())); // resolution = 1/zoomScale\n        var zoom = this._map.getZoom();\n     \n        // console.time('process');\n\n        if (this._userDrawFunc) {\n            this._userDrawFunc(this,\n                                {\n                                    canvas   :this._canvas,\n                                    bounds   : bounds,\n                                    size     : size,\n                                    zoomScale: zoomScale,\n                                    zoom : zoom,\n                                    options: this.options\n                               });\n        }\n       \n       \n        // console.timeEnd('process');\n        \n        this._frame = null;\n    },\n\n    _animateZoom: function (e) {\n        var scale = this._map.getZoomScale(e.zoom),\n            offset = this._map._getCenterOffset(e.center)._multiplyBy(-scale).subtract(this._map._getMapPanePos());\n\n        this._canvas.style[L.DomUtil.TRANSFORM] = L.DomUtil.getTranslateString(offset) + ' scale(' + scale + ')';\n\n    }\n});\n\nL.canvasOverlay = function (userDrawFunc, options) {\n    return new L.CanvasOverlay(userDrawFunc, options);\n};\n","\n$(function(){\n  \n  var leafletMap = L.map('map').setView([55.751244, 37.618423], 9);\n  L.tileLayer(\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}.png\")\n  //L.tileLayer(\"https://{s}.tiles.mapbox.com/v4/mapbox.dark/{z}/{x}/{y}@2x.png?access_token=pk.eyJ1IjoiZ2xlYWZsZXQiLCJhIjoiY2lxdWxoODl0MDA0M2h4bTNlZ2I1Z3gycyJ9.vrEWCC2nwsGfAYKZ7c4HZA\")\n    .addTo(leafletMap);\n  \n  window.map = leafletMap;\n  \n  $.get('bin/data/data.json',function(places){\n    places = decodeData(places);\n    window.DATA = places;\n    renderMap(places);\n    renderList(places);\n    \n  });\n  \n  $('#map').click(function(e){\n    \n    var x = e.offsetX,\n        y = e.offsetY;\n    \n    $.each(DATA,function(i,el){\n      \n      if (x > el.canvas.x1 && \n          x < el.canvas.x2 && \n          y > el.canvas.y1 && \n          y < el.canvas.y2 ){\n        console.log(y, el);\n      }\n      \n    });\n    \n  });\n  \n  function renderList(place) {\n    $('#places').empty();\n    $.each(place,function(i,e){\n      //$('#places').append('<div>'+i+'</diV>');\n      $('#places').append(__.placeItem(e));\n      \n    });\n  }\n  \n  function renderMap(place) {\n    L.canvasOverlay().drawing(drawingOnCanvas).addTo(leafletMap);\n\n\n    function drawingOnCanvas(canvasOverlay, params) {\n      var ctx = params.canvas.getContext('2d');\n      var zoom = window.map.getZoom();\n      ctx.clearRect(0, 0, params.canvas.width, params.canvas.height);\n      \n\n  \n      \n      $.each(place, function(i,e){\n        \n            \n            e.canvas = __.placePoint({\n              ctx : ctx,\n              canvasOverlay : canvasOverlay,\n              zoom : zoom,\n              place : e\n            });\n            \n        \n      });\n      \n      \n      \n    };\n  }\n  \n  \n})","__.cost = function(params) {\n  \n    var value = params.value;\n    value = (/\\.\\d/.test(value)) ? value + '' : value + '.00';\n    value = (/\\.\\d{2}/.test(value)) ? value : value + '0';\n    value = (value).replace(/\\d(?=(\\d{3})+\\.)/g, '$& ');\n\n    return value.split('.');\n  \n}","__.placeItem = function(params){\n  \n  var place = JSON.parse(JSON.stringify(params));\n  \n  let eco = (place.eco.distance < 10) ? `<div>${place.eco.closest.name} в ${place.eco.distance}км</div>` : '';\n    \n  let rjd = (place.railroad.distance < 3) ? `<div style=\"color: green\">Ж/д станция ${place.railroad.closest.name} в ${place.railroad.distance}км, до москвы: ${place.railroad.closest.time.h}ч ${place.railroad.closest.time.m}мин (${place.railroad.closest.distance}км)</div>` : ''; \n  \n  place.price = (function(price){\n      \n    return {\n      from : (price.from) ? (typeof global != 'undefined') ? global.component('cost', {value : price.from })[0] : __.cost({value : price.from })[0] : '',\n      to   : (price.to)   ? (typeof global != 'undefined') ? global.component('cost', {value : price.to })[0]   : __.cost({value : price.to })[0]   : ''\n    }  \n        \n  })(place.price);\n  \n  \n  let tpl = \n`<div class=\"place-item\" id=\"place-${place.id}\" data-lat=\"${place.point[1]}\" data-lon=\"${place.point[0]}\">\n  <div>${place.type} ${place.name}</div>\n  <div style=\"color:red\">${(place.price.from) ? place.price.from:''} ${(place.price.to) ? place.price.to:''}</div>\n  <div>Расстояние до Москвы: ${place.moscow.distance}км</div>\n  <div>На машине: ${place.car.time.h}ч ${place.car.time.m}мин (${place.car.distance}км)</div>\n  ${rjd}\n  <div>Ближайший город: ${place.city.closest.name} в ${place.city.distance}км</div>\n  ${eco}\n</div>`;\n    \n  bindEvent('.place-item', 'click', function(e){\n    \n    var lat = $(e.currentTarget).data('lat');\n    var lon = $(e.currentTarget).data('lon');\n    \n    map.setView(new L.LatLng(lat, lon), 15);\n      \n  })\n    \n  return tpl;\n  \n}","__.colorize = function(params){\n   \n  //ecology\n  this.eco = function(params) {\n    \n    var r = 10;\n    switch (params.eco.closest.type) {\n      case 'K':\n        r = 3;\n        break;\n      case 'p':\n        r = 3;\n        break;\n      case 'n':\n        r = 5;\n        break;\n    }\n\n    var distance = params.eco.distance;\n    var alphaMax = 0.6;\n    var alpha = (distance < r) ? alphaMax - interpolation(0, r, distance, 0, alphaMax) : 0;\n\n    var color = blendColors(\n    [0, 98, 255, .3],\n    [255, 30, 0, alpha]\n    );\n\n    return rgba(color[0],color[1],color[2],color[3]);\n\n  }\n  \n  //railroad\n  this.railroad = function(params) {\n    \n    var distance = params.railroad.distance;\n    var alphaMax = 1;\n    var alpha = (distance < 3) ? alphaMax - interpolation(0, 3, distance, 0, alphaMax) : 0;\n\n    var color = blendColors(\n    [255, 30, 0, .2],\n    [0, 98, 255, alpha]\n    );\n\n    return rgba(color[0],color[1],color[2],color[3]);\n    \n  }\n  \n  function rgba(r,g,b,a){\n    return `rgba(${r},${g},${b},${a})`;\n  }\n  \n  function interpolation(minFrom, maxFrom, current, minTo, maxTo) {\n    return minTo + ((current - minFrom) / (maxFrom - minFrom)) * ((maxTo - minTo) / 1);\n  }\n\n  function blendColors(base, added) {\n\n    var mix = [];\n    mix[3] = 1 - (1 - added[3]) * (1 - base[3]); // alpha\n    mix[0] = Math.round((added[0] * added[3] / mix[3]) + (base[0] * base[3] * (1 - added[3]) / mix[3])); // red\n    mix[1] = Math.round((added[1] * added[3] / mix[3]) + (base[1] * base[3] * (1 - added[3]) / mix[3])); // green\n    mix[2] = Math.round((added[2] * added[3] / mix[3]) + (base[2] * base[3] * (1 - added[3]) / mix[3])); // blue\n\n    return mix;\n  }\n  \n  return this;\n  \n}","__.placePoint = function (params) {\n\n  const s = {\n      0: {\n        s: .5\n      },\n      1: {\n        s: .5\n      },\n      2: {\n        s: .5\n      },\n      3: {\n        s: 1\n      },\n      4: {\n        s: 1\n      },\n      5: {\n        s: 2\n      },\n      6: {\n        s: 2\n      },\n      7: {\n        s: 3\n      },\n      8: {\n        s: 3\n      },\n      9: {\n        s: 3\n      },\n      10: {\n        s: 4\n      },\n      11: {\n        s: 4\n      },\n      12: {\n        s: 4\n      },\n      13: {\n        s: 6\n      },\n      14: {\n        s: 6\n      },\n      15: {\n        s: 6\n      },\n      16: {\n        s: 12\n      },\n      17: {\n        s: 12\n      },\n      18: {\n        s: 12\n      }\n    },\n    size = s[params.zoom].s * 2;\n  \n  params.ctx.fillStyle = __.colorize().eco(params.place);\n\n  var dot = params.canvasOverlay._map.latLngToContainerPoint([params.place.point[1], params.place.point[0]]);\n  params.ctx.beginPath();\n  params.ctx.arc(dot.x, dot.y, size / 2, 0, Math.PI * 2);\n  params.ctx.fill();\n  params.ctx.closePath();\n\n\n  return {\n    x1: dot.x,\n    y1: dot.y,\n    x2: dot.x + size,\n    y2: dot.y + size\n  };\n\n}"],"sourceRoot":"/source/"}