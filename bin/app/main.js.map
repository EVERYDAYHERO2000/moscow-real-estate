{"version":3,"sources":["bind-event.js","canvas.js","main.js","components/cost/cost.js","components/place-item/place-item.js","components/place-point/colorize.js","components/place-point/place-point.js"],"names":["__","listners","bindEvent","elem","eventName","event","window","name","$","document","on","unbindEvent","off","L","CanvasOverlay","Class","extend","initialize","userDrawFunc","options","this","_userDrawFunc","setOptions","drawing","params","canvas","_canvas","redraw","_frame","Util","requestAnimFrame","_redraw","onAdd","map","_map","DomUtil","create","size","getSize","width","x","height","y","animated","zoomAnimation","Browser","any3d","addClass","_panes","overlayPane","appendChild","_reset","_resize","_animateZoom","onRemove","getPanes","removeChild","this_canvas","addTo","addLayer","resizeEvent","newSize","topLeft","containerPointToLayerPoint","setPosition","bounds","getBounds","zoomScale","getEast","getWest","zoom","getZoom","e","scale","getZoomScale","offset","_getCenterOffset","center","_multiplyBy","subtract","_getMapPanePos","style","TRANSFORM","getTranslateString","canvasOverlay","leafletMap","setView","tileLayer","place","ctx","clearRect","each","i","renderMap","DATA","places","renderList","offsetX","offsetY","el","x1","x2","y1","y2","console","log","cost","value","test","replace","split","placeItem","price","JSON","parse","stringify","eco","distance","concat","closest","rjd","railroad","time","h","m","from","global","component","to","tpl","id","point","type","moscow","car","city","lat","currentTarget","data","lon","LatLng","colorize","rgba","r","g","b","a","interpolation","minFrom","maxFrom","current","minTo","maxTo","blendColors","base","added","mix","Math","round","color","placePoint","0","s","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","fillStyle","dot","latLngToContainerPoint","beginPath","arc","PI","fill","closePath"],"mappings":"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","file":"main.js","sourcesContent":["function bindEvent(elem, eventName, event){\n  if (!window.listners[elem + '|' + eventName]){\n    window.listners[elem + '|' + eventName] = {\n      name : elem,\n      event : eventName\n    }\n    $(document).on(eventName,elem,event);\n  }\n}\n\nfunction unbindEvent(elem, eventName){\n  delete window.listners[elem + '|' + eventName];\n  $(document).off(eventName, elem);\n}","/*\n UPDATE July 2016 , moved and updated to here: https://github.com/Sumbera/gLayers.Leaflet\n \n Generic  Canvas Overlay for leaflet, \n Stanislav Sumbera, April , 2014\n\n - added userDrawFunc that is called when Canvas need to be redrawn\n - added few useful params fro userDrawFunc callback\n  - fixed resize map bug\n  inspired & portions taken from  :   https://github.com/Leaflet/Leaflet.heat\n  \n  License: MIT\n\n*/\n\n\nL.CanvasOverlay = L.Class.extend({\n\n    initialize: function (userDrawFunc, options) {\n        this._userDrawFunc = userDrawFunc;\n        L.setOptions(this, options);\n    },\n\n    drawing: function (userDrawFunc) {\n        this._userDrawFunc = userDrawFunc;\n        return this;\n    },\n\n    params:function(options){\n        L.setOptions(this, options);\n        return this;\n    },\n    \n    canvas: function () {\n        return this._canvas;\n    },\n\n    redraw: function () {\n        if (!this._frame) {\n            this._frame = L.Util.requestAnimFrame(this._redraw, this);\n        }\n        return this;\n    },\n\n    \n  \n    onAdd: function (map) {\n        this._map = map;\n        this._canvas = L.DomUtil.create('canvas', 'leaflet-heatmap-layer');\n\n        var size = this._map.getSize();\n        this._canvas.width = size.x;\n        this._canvas.height = size.y;\n\n        var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n        L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n\n\n        map._panes.overlayPane.appendChild(this._canvas);\n\n        map.on('moveend', this._reset, this);\n        map.on('resize',  this._resize, this);\n\n        if (map.options.zoomAnimation && L.Browser.any3d) {\n            map.on('zoomanim', this._animateZoom, this);\n        }\n\n        this._reset();\n    },\n\n    onRemove: function (map) {\n        map.getPanes().overlayPane.removeChild(this._canvas);\n \n        map.off('moveend', this._reset, this);\n        map.off('resize', this._resize, this);\n\n        if (map.options.zoomAnimation) {\n            map.off('zoomanim', this._animateZoom, this);\n        }\n        this_canvas = null;\n\n    },\n\n    addTo: function (map) {\n        map.addLayer(this);\n        return this;\n    },\n\n    _resize: function (resizeEvent) {\n        this._canvas.width  = resizeEvent.newSize.x;\n        this._canvas.height = resizeEvent.newSize.y;\n    },\n    _reset: function () {\n        var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n        L.DomUtil.setPosition(this._canvas, topLeft);\n        this._redraw();\n    },\n\n    _redraw: function () {\n        var size     = this._map.getSize();\n        var bounds   = this._map.getBounds();\n        var zoomScale = (size.x * 180) / (20037508.34  * (bounds.getEast() - bounds.getWest())); // resolution = 1/zoomScale\n        var zoom = this._map.getZoom();\n     \n        // console.time('process');\n\n        if (this._userDrawFunc) {\n            this._userDrawFunc(this,\n                                {\n                                    canvas   :this._canvas,\n                                    bounds   : bounds,\n                                    size     : size,\n                                    zoomScale: zoomScale,\n                                    zoom : zoom,\n                                    options: this.options\n                               });\n        }\n       \n       \n        // console.timeEnd('process');\n        \n        this._frame = null;\n    },\n\n    _animateZoom: function (e) {\n        var scale = this._map.getZoomScale(e.zoom),\n            offset = this._map._getCenterOffset(e.center)._multiplyBy(-scale).subtract(this._map._getMapPanePos());\n\n        this._canvas.style[L.DomUtil.TRANSFORM] = L.DomUtil.getTranslateString(offset) + ' scale(' + scale + ')';\n\n    }\n});\n\nL.canvasOverlay = function (userDrawFunc, options) {\n    return new L.CanvasOverlay(userDrawFunc, options);\n};\n","\n$(function(){\n  \n  var leafletMap = L.map('map').setView([55.751244, 37.618423], 9);\n  L.tileLayer(\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}.png\")\n  //L.tileLayer(\"https://{s}.tiles.mapbox.com/v4/mapbox.dark/{z}/{x}/{y}@2x.png?access_token=pk.eyJ1IjoiZ2xlYWZsZXQiLCJhIjoiY2lxdWxoODl0MDA0M2h4bTNlZ2I1Z3gycyJ9.vrEWCC2nwsGfAYKZ7c4HZA\")\n    .addTo(leafletMap);\n  \n  window.map = leafletMap;\n  \n  $.get('bin/data/places.json',function(places){\n    window.DATA = places;\n    renderMap(places);\n    renderList(places);\n  });\n  \n  $('#map').click(function(e){\n    \n    var x = e.offsetX,\n        y = e.offsetY;\n    \n    $.each(DATA,function(i,el){\n      \n      if (x > el.canvas.x1 && \n          x < el.canvas.x2 && \n          y > el.canvas.y1 && \n          y < el.canvas.y2 ){\n        console.log(y, el);\n      }\n      \n    });\n    \n  });\n  \n  function renderList(place) {\n    $.each(place,function(i,e){\n      \n      $('#places').append(__.placeItem(e));\n      \n    });\n  }\n  \n  function renderMap(place) {\n    L.canvasOverlay().drawing(drawingOnCanvas).addTo(leafletMap);\n\n\n    function drawingOnCanvas(canvasOverlay, params) {\n      var ctx = params.canvas.getContext('2d');\n      var zoom = window.map.getZoom();\n      ctx.clearRect(0, 0, params.canvas.width, params.canvas.height);\n      \n\n  \n      \n      $.each(place, function(i,e){\n        \n            \n            e.canvas = __.placePoint({\n              ctx : ctx,\n              canvasOverlay : canvasOverlay,\n              zoom : zoom,\n              place : e\n            });\n            \n        \n      });\n      \n      \n      \n    };\n  }\n  \n  \n})","__.cost = function(params) {\n  \n    var value = params.value;\n    value = (/\\.\\d/.test(value)) ? value + '' : value + '.00';\n    value = (/\\.\\d{2}/.test(value)) ? value : value + '0';\n    value = (value).replace(/\\d(?=(\\d{3})+\\.)/g, '$& ');\n\n    return value.split('.');\n  \n}","__.placeItem = function(params){\n  \n  var place = JSON.parse(JSON.stringify(params));\n  \n  let eco = (place.eco.distance < 10) ? `<div>${place.eco.closest.name} в ${place.eco.distance}км</div>` : '';\n    \n  let rjd = (place.railroad.distance < 3) ? `<div style=\"color: green\">Ж/д станция ${place.railroad.closest.name} в ${place.railroad.distance}км, до москвы: ${place.railroad.closest.time.h}ч ${place.railroad.closest.time.m}мин (${place.railroad.closest.distance}км)</div>` : ''; \n  \n  place.price = (function(price){\n      \n    return {\n      from : (price.from) ? (typeof global != 'undefined') ? global.component('cost', {value : price.from })[0] : __.cost({value : price.from })[0] : '',\n      to   : (price.to)   ? (typeof global != 'undefined') ? global.component('cost', {value : price.to })[0]   : __.cost({value : price.to })[0]   : ''\n    }  \n        \n  })(place.price);\n  \n  let tpl = \n`<div class=\"place-item\" id=\"place-${place.id}\" data-lat=\"${place.point[1]}\" data-lon=\"${place.point[0]}\">\n  <div>${place.type} ${place.name}</div>\n  <div style=\"color:red\">${(place.price.from) ? place.price.from:''} ${(place.price.to) ? place.price.to:''}</div>\n  <div>Расстояние до Москвы: ${place.moscow.distance}км</div>\n  <div>На машине: ${place.car.time.h}ч ${place.car.time.m}мин (${place.car.distance}км)</div>\n  ${rjd}\n  <div>Ближайший город: ${place.city.closest.name} в ${place.city.distance}км</div>\n  ${eco}\n</div>`;\n    \n  bindEvent('.place-item', 'click', function(e){\n    \n    var lat = $(e.currentTarget).data('lat');\n    var lon = $(e.currentTarget).data('lon');\n    \n    map.setView(new L.LatLng(lat, lon), 15);\n      \n  })\n    \n  return tpl;\n  \n}","__.colorize = function(params){\n   \n  //ecology\n  this.eco = function(params) {\n    \n    var r = 10;\n    switch (params.eco.closest.type) {\n      case 'K':\n        r = 3;\n        break;\n      case 'p':\n        r = 3;\n        break;\n      case 'n':\n        r = 5;\n        break;\n    }\n\n    var distance = params.eco.distance;\n    var alphaMax = 0.6;\n    var alpha = (distance < r) ? alphaMax - interpolation(0, r, distance, 0, alphaMax) : 0;\n\n    var color = blendColors(\n    [0, 98, 255, .3],\n    [255, 30, 0, alpha]\n    );\n\n    return rgba(color[0],color[1],color[2],color[3]);\n\n  }\n  \n  //railroad\n  this.railroad = function(params) {\n    \n    var distance = params.railroad.distance;\n    var alphaMax = 1;\n    var alpha = (distance < 3) ? alphaMax - interpolation(0, 3, distance, 0, alphaMax) : 0;\n\n    var color = blendColors(\n    [255, 30, 0, .2],\n    [0, 98, 255, alpha]\n    );\n\n    return rgba(color[0],color[1],color[2],color[3]);\n    \n  }\n  \n  function rgba(r,g,b,a){\n    return `rgba(${r},${g},${b},${a})`;\n  }\n  \n  function interpolation(minFrom, maxFrom, current, minTo, maxTo) {\n    return minTo + ((current - minFrom) / (maxFrom - minFrom)) * ((maxTo - minTo) / 1);\n  }\n\n  function blendColors(base, added) {\n\n    var mix = [];\n    mix[3] = 1 - (1 - added[3]) * (1 - base[3]); // alpha\n    mix[0] = Math.round((added[0] * added[3] / mix[3]) + (base[0] * base[3] * (1 - added[3]) / mix[3])); // red\n    mix[1] = Math.round((added[1] * added[3] / mix[3]) + (base[1] * base[3] * (1 - added[3]) / mix[3])); // green\n    mix[2] = Math.round((added[2] * added[3] / mix[3]) + (base[2] * base[3] * (1 - added[3]) / mix[3])); // blue\n\n    return mix;\n  }\n  \n  return this;\n  \n}","__.placePoint = function (params) {\n\n  const s = {\n      0: {\n        s: .5\n      },\n      1: {\n        s: .5\n      },\n      2: {\n        s: .5\n      },\n      3: {\n        s: 1\n      },\n      4: {\n        s: 1\n      },\n      5: {\n        s: 2\n      },\n      6: {\n        s: 2\n      },\n      7: {\n        s: 3\n      },\n      8: {\n        s: 3\n      },\n      9: {\n        s: 3\n      },\n      10: {\n        s: 4\n      },\n      11: {\n        s: 4\n      },\n      12: {\n        s: 4\n      },\n      13: {\n        s: 6\n      },\n      14: {\n        s: 6\n      },\n      15: {\n        s: 6\n      },\n      16: {\n        s: 12\n      },\n      17: {\n        s: 12\n      },\n      18: {\n        s: 12\n      }\n    },\n    size = s[params.zoom].s * 2;\n  \n  params.ctx.fillStyle = __.colorize().eco(params.place);\n\n  var dot = params.canvasOverlay._map.latLngToContainerPoint([params.place.point[1], params.place.point[0]]);\n  params.ctx.beginPath();\n  params.ctx.arc(dot.x, dot.y, size / 2, 0, Math.PI * 2);\n  params.ctx.fill();\n  params.ctx.closePath();\n\n\n  return {\n    x1: dot.x,\n    y1: dot.y,\n    x2: dot.x + size,\n    y2: dot.y + size\n  };\n\n}"],"sourceRoot":"/source/"}