{"version":3,"sources":["canvas.js","core/main.js","components/cost/cost.js","components/detail-screen/detail-screen.js","components/map-overlay/map-overlay.js","components/map-tiles/map-tiles.js","components/place-item/place-item.js","components/place-point/place-point.js","components/place-search/place-search.js","components/select/select.js","core/app/app.js","core/header/header.js","core/map/map.js","core/map-controls/map-controls.js","core/place-screen/place-screen.js","core/place-search/place-search.js","core/places/places.js","core/window/window.js","fs/browser-detect/browser-detect.js","fs/colorize/colorize.js","fs/core-moduls/core-moduls.js","fs/decode-data/decode-data.js","fs/event/event.js","fs/map-sprites/map-sprites.js","fs/search/search.js","fs/time/time-to-int.js","fs/url/url.js"],"names":["L","CanvasOverlay","Class","extend","initialize","userDrawFunc","options","this","_userDrawFunc","setOptions","drawing","params","canvas","_canvas","redraw","_frame","Util","requestAnimFrame","_redraw","onAdd","map","_map","DomUtil","create","size","getSize","width","x","height","y","animated","zoomAnimation","Browser","any3d","addClass","_panes","overlayPane","appendChild","on","_reset","_resize","_animateZoom","onRemove","getPanes","removeChild","off","this_canvas","addTo","addLayer","resizeEvent","newSize","topLeft","containerPointToLayerPoint","setPosition","bounds","getBounds","zoomScale","getEast","getWest","zoom","getZoom","e","scale","getZoomScale","offset","_getCenterOffset","center","_multiplyBy","subtract","_getMapPanePos","style","TRANSFORM","getTranslateString","canvasOverlay","runApp","__","core","fs","coreModuls","$","get","places","data","decodeData","$app","$map","trigger","$places","onlyVisible","cost","value","test","replace","split","detailScreen","price","p","point","latT","latB","lonL","lonR","https","cian_url","yandex_url","avito_url","_type","type","concat","_class","contentItem","v","_address","address","name","_city","city","closest","distance","_moscow","moscow","_car","car","time","h","m","_railroad","railroad","_eco","eco","description","_price","from","to","_developer","developer","_site","site","link","_medic","medic","_markets","objToUrl","deal_type","engine_version","object_type[0]","offer_type","leftLongitude","topLatitude","rightLongitude","bottomLatitude","btoa","JSON","stringify","searchArea","latBottom","latTop","lonLeft","lonRight","simpleItem","container_tpl","detail_tpl","callback","href","text","classname","url","obj","uri","encodeURIComponent","Object","entries","_ref","_ref2","_slicedToArray","key","val","join","global","$screen","$detailScreen","find","empty","append","click","remove","length","mapOverlay","ctx","icons","mapSprites","src","img","Image","getIcons","addEventListener","drawIcons","ico","resize","dot","latLngToContainerPoint","drawImage","each","i","point_blue","recicle","airport","trash","radiation","factory","water","energy","power","point_yellow","mapTiles","tileset","simple","dark","tiles","d","l","changeClass","removeClass","setTiles","n","_url","setUrl","placeItem","component","_color","color","_rjd","tpl","id","event","bind","DATA","currentTarget","attr","folder","Math","floor","not","is","setView","LatLng","placePoint","0","s","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","changeColor","colorize","place","fillStyle","lineWidth","strokeStyle","stroke","beginPath","arc","PI","fill","closePath","x1","y1","x2","y2","visible","search","searchdata","results","substringSearch","multiply","keys","inArray","res","push","scrollTop","select","browserDetect","browser","browserName","platform","isMobile","$header","toggleClass","offsetX","offsetY","el","location","origin","console","log","t","target","leafletMap","tileLayer","preventDefault","_this","c","getContext","clearRect","changeOverlay","$mapControls","layers","default","title","selected","$selectLayer","change","placeScreen","$placeSearch","keyup","code","which","scroll","$last","last","top","window","outerHeight","count","$window","headerHeight","css","navigator","appVersion","nameOffset","verOffset","ix","nAgt","userAgent","appName","fullVersion","parseFloat","majorVersion","parseInt","indexOf","substring","lastIndexOf","toLowerCase","toUpperCase","isNaN","a","check","iOS","MSStream","ratio","devicePixelRatio","screen","iphoneX","vendor","opera","substr","rgba","r","g","b","interpolation","minFrom","maxFrom","current","minTo","maxTo","blendColors","base","added","mix","round","toInt","moduls","rail","ecos","ecoId","m_obj","cities","cityId","stationId","readyDate","class","k","route","q","ec","elem","eventName","listners","document","unbind","point_green","weight","proto","in","out","_res","trim","normalStr","str","pos","w","nl","sl","result","tempItem","copyObject","foundPos","sort","compare","comparison","assign","inString","wordsSearch","words","wsl","wl","fullMatch","arr","getKey","isFind","isNotFind","index","_result","rl","_ref3","_ref4"],"mappings":"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","file":"main.js","sourcesContent":["/*\n UPDATE July 2016 , moved and updated to here: https://github.com/Sumbera/gLayers.Leaflet\n \n Generic  Canvas Overlay for leaflet, \n Stanislav Sumbera, April , 2014\n\n - added userDrawFunc that is called when Canvas need to be redrawn\n - added few useful params fro userDrawFunc callback\n  - fixed resize map bug\n  inspired & portions taken from  :   https://github.com/Leaflet/Leaflet.heat\n  \n  License: MIT\n\n*/\n\n\nL.CanvasOverlay = L.Class.extend({\n\n    initialize: function (userDrawFunc, options) {\n        this._userDrawFunc = userDrawFunc;\n        L.setOptions(this, options);\n    },\n\n    drawing: function (userDrawFunc) {\n        this._userDrawFunc = userDrawFunc;\n        return this;\n    },\n\n    params:function(options){\n        L.setOptions(this, options);\n        return this;\n    },\n    \n    canvas: function () {\n        return this._canvas;\n    },\n\n    redraw: function () {\n        if (!this._frame) {\n            this._frame = L.Util.requestAnimFrame(this._redraw, this);\n        }\n        return this;\n    },\n\n    \n  \n    onAdd: function (map) {\n        this._map = map;\n        this._canvas = L.DomUtil.create('canvas', 'leaflet-heatmap-layer');\n\n        var size = this._map.getSize();\n        this._canvas.width = size.x;\n        this._canvas.height = size.y;\n\n        var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n        L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n\n\n        map._panes.overlayPane.appendChild(this._canvas);\n\n        map.on('moveend', this._reset, this);\n        map.on('resize',  this._resize, this);\n\n        if (map.options.zoomAnimation && L.Browser.any3d) {\n            map.on('zoomanim', this._animateZoom, this);\n        }\n\n        this._reset();\n    },\n\n    onRemove: function (map) {\n        map.getPanes().overlayPane.removeChild(this._canvas);\n \n        map.off('moveend', this._reset, this);\n        map.off('resize', this._resize, this);\n\n        if (map.options.zoomAnimation) {\n            map.off('zoomanim', this._animateZoom, this);\n        }\n        this_canvas = null;\n\n    },\n\n    addTo: function (map) {\n        map.addLayer(this);\n        return this;\n    },\n\n    _resize: function (resizeEvent) {\n        this._canvas.width  = resizeEvent.newSize.x;\n        this._canvas.height = resizeEvent.newSize.y;\n    },\n    _reset: function () {\n        var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n        L.DomUtil.setPosition(this._canvas, topLeft);\n        this._redraw();\n    },\n\n    _redraw: function () {\n        var size     = this._map.getSize();\n        var bounds   = this._map.getBounds();\n        var zoomScale = (size.x * 180) / (20037508.34  * (bounds.getEast() - bounds.getWest())); // resolution = 1/zoomScale\n        var zoom = this._map.getZoom();\n     \n        // console.time('process');\n\n        if (this._userDrawFunc) {\n            this._userDrawFunc(this,\n                                {\n                                    canvas   :this._canvas,\n                                    bounds   : bounds,\n                                    size     : size,\n                                    zoomScale: zoomScale,\n                                    zoom : zoom,\n                                    options: this.options\n                               });\n        }\n       \n       \n        // console.timeEnd('process');\n        \n        this._frame = null;\n    },\n\n    _animateZoom: function (e) {\n        var scale = this._map.getZoomScale(e.zoom),\n            offset = this._map._getCenterOffset(e.center)._multiplyBy(-scale).subtract(this._map._getMapPanePos());\n\n        this._canvas.style[L.DomUtil.TRANSFORM] = L.DomUtil.getTranslateString(offset) + ' scale(' + scale + ')';\n\n    }\n});\n\nL.canvasOverlay = function (userDrawFunc, options) {\n    return new L.CanvasOverlay(userDrawFunc, options);\n};\n","var runApp = function(){\n    \n  __.core = __.fs.coreModuls(['$window','$app','$header','$map','$places','$placeSearch','$mapControls']);\n  \n\n  $.get('bin/data/data.json', function (places) {\n    \n    let data = __.fs.decodeData(places);\n\n    __.core.$app.data('data', data);\n    \n    __.core.$map.trigger('createMap').trigger('renderMap', {\n      data: data\n    });\n\n    __.core.$places.trigger('renderList', {\n      places: data.places,\n      onlyVisible: false\n    });\n\n  });\n  \n  \n}\n\n  \n","__.cost = function(params) {\n  \n    let value = params.value;\n    value = (/\\.\\d/.test(value)) ? value + '' : value + '.00';\n    value = (/\\.\\d{2}/.test(value)) ? value : value + '0';\n    value = (value).replace(/\\d(?=(\\d{3})+\\.)/g, '$& ');\n\n    return value.split('.');\n  \n}","__.detailScreen = function (data) {\n\n    let _type = (data.type) ? `<span>${data.type}</span>` : '';\n    let _class = contentItem('Класс', data.class, function (v) {\n        return v\n    });\n    let _address = contentItem('Адрес', data.address.name, function (v) {\n        return v\n    });\n    let _city = contentItem('Ближайший город', data.city.closest.name, function (v) {\n        return `${v} в ${data.city.distance}км`\n    });\n    let _moscow = contentItem('Расстояние от Москвы', data.moscow.distance, function (v) {\n        return `${v}км`\n    });\n    let _car = contentItem('На автомобиле до Москвы', data.car.distance, function (v) {\n        return `${v}км<br> ${data.car.time.h}ч ${data.car.time.m}мин без учета пробок`\n    });\n    let _railroad = contentItem('Ближайшая ж/д станция', data.railroad.closest.name, function (v) {\n        return `${v} в ${data.railroad.distance}км<br> до Москвы ${data.railroad.closest.time.h}ч ${data.railroad.closest.time.m}мин`\n    });\n    let _eco = contentItem('Ближайший источник загрязнения', data.eco.closest.name, function (v) {\n        let description = (data.eco.closest.description) ? `<br>${data.eco.closest.description}` : '';\n        return `${data.eco.distance}км<br>${v} ${description}`\n    });\n    let _price = (function (price) {\n\n\n        let from = (price.from) ? `от ${__.cost({value:price.from})[0]}руб. ` : '',\n            to = (price.to) ? `<br>до ${__.cost({value:price.to})[0]}руб.` : '',\n            p = from + to;\n\n        return (p) ? contentItem('Цена', p, function (v) {\n            return v\n        }) : '';\n\n\n    })(data.price);\n    let _developer = contentItem('Застройщик', data.developer, function (v) {\n        return v;\n    });\n    let _site = contentItem('Сайт', data.site, function (v) {\n        return link(v, v);\n    });\n    let _medic = contentItem('Ближайшая станция скорой помощи Москвы и Московской области', data.medic.closest, function (v) {\n        return `${data.medic.distance}км<br>${data.medic.closest.name}`;\n    });\n\n    let _markets = (function (point) {\n\n        let latT = point[1] + 0.00304,\n            latB = point[1] - 0.00304,\n            lonL = point[0] - 0.009066,\n            lonR = point[0] + 0.009066,\n            https = 'https://';\n\n\n        let cian_url = objToUrl(`${https}cian.ru/map/`, {\n            deal_type: 'sale',\n            engine_version: 2,\n            'object_type[0]': 1,\n            offer_type: 'suburban',\n            zoom: 16,\n            center: `${point[1]},${point[0]}`\n        });\n\n        let yandex_url = objToUrl(`${https}realty.yandex.ru/moskovskaya_oblast/kupit/dom/karta/`, {\n            leftLongitude: lonL,\n            topLatitude: latT,\n            rightLongitude: lonR,\n            bottomLatitude: latB\n        });\n\n\n        let avito_url = objToUrl(`${https}www.avito.ru/moskva/doma_dachi_kottedzhi`, {\n            map: btoa(JSON.stringify({\n                \"searchArea\": {\n                    \"latBottom\": latB,\n                    \"latTop\": latT,\n                    \"lonLeft\": lonL,\n                    \"lonRight\": lonR\n                }\n            }))\n        });\n\n        return simpleItem('Предложения',\n            `${link(cian_url, 'Циан')}<br>${link(yandex_url, 'Яндекс.Недвижимость')}<br>${link(avito_url, 'Авито', 'on-mobile_hide')}`);\n\n    })(data.point);\n\n    let container_tpl = `\n<h1>${_type} <span>${data.name}</span></h1>\n<div class=\"panel__content content\">\n  <section>\n    ${_class}\n    ${_price}\n    ${_developer}\n    ${_site}\n    ${_address}\n    ${_moscow}\n    ${_markets}\n  </section>\n  <section>\n    <h2>Транспорт</h2>\n    ${_car}\n    ${_railroad}\n  </section>\n  <section>\n    <h2>Инфраструктура</h2>\n    ${_city}\n    ${_medic}\n  </section>\n  <section>\n    <h2>Экология</h2>\n    ${_eco}\n  </section>\n</div>\n  `;\n\n    let detail_tpl = `\n<div id=\"detail-screen\" class=\"panel panel_detail\">\n  <div class=\"header-mobile\">\n    <button id=\"close-screen\" class=\"btn btn_back\">Назад</button>\n  </div>\n  <div class=\"panel__container\">${container_tpl}</div>\n</div>`;\n\n\n    function contentItem(name, value, callback) {\n\n        return (value) ? simpleItem(name, callback(value)) : '';\n\n    }\n\n    function simpleItem(name, value) {\n\n        return `<div class=\"content__item\">\n    <div class=\"content__item-title\">${name}</div>\n    <div class=\"content__item-value\">${value}</div>\n  </div>`\n\n    }\n\n    function link(href, text, classname) {\n        classname = (classname) ? `class=\"${classname}\"` : '';\n        return `<a ${classname} rel=\"noreferrer noopener nofollow\" target=\"_blank\" href=\"${href}\">${text}</a>`\n    }\n  \n    function objToUrl(url,obj){\n      url = url + '?' || '' \n      let uri = encodeURIComponent;\n      return url + Object.entries(obj).map(([key, val]) => `${uri(key)}=${uri(val)}`).join('&');\n    }\n\n\n    if (typeof global == 'undefined'){\n  \n      let $screen = (__.core.$detailScreen) ? __.core.$detailScreen : $(detail_tpl);\n\n      let $container = $screen.find('.panel__container').empty().append(container_tpl);\n\n      $screen.find('#close-screen').click(function (e) {\n\n          $('#main').find('#detail-screen').remove();\n\n      });\n\n      __.core.$detailScreen = $screen;\n\n      if (!$('#detail-screen').length) $('#main').append($screen);\n      \n    }\n\n\n    return detail_tpl;\n\n}","__.mapOverlay = function (params, canvasOverlay, ctx, zoom) {\n\n\n  let scale = 2,\n    icons = __.fs.mapSprites(scale),\n    size = 20 * scale,\n    resize = size * 0.65,\n    src = `source/assets/img/map/pins@${scale}x.png`,\n    img = img = new Image();\n  \n    img.src = src;\n\n  this.default = function () {\n    return false\n  };\n\n  this.railroad = function (params, canvasOverlay, ctx, zoom) {\n\n    let railroad = params.data.railroad;\n    \n    \n    getIcons(img, function(img){\n      \n      $.each(railroad, function (i, e) {\n\n        let ico = '';\n      \n        if (zoom > 9) ico = icons.point_blue;\n        if (zoom > 11) ico = icons.railroad;\n\n        drawIcons(e, ctx, canvasOverlay, img, size, ico, resize);\n\n      });\n      \n    });\n    \n    return false\n  };\n\n  this.car = function () {\n    return false\n  };\n\n\n  this.eco = function (params, canvasOverlay, ctx, zoom) {\n\n    let eco = params.data.eco;\n    \n    getIcons(img, function(img){\n      \n      $.each(eco, function (i, e) {\n\n        let ico = null;\n\n        if (zoom > 9) {\n\n          if (e.type == 6) ico = icons.recicle;\n          if (e.type == 10) ico = icons.airport;\n          if (e.type == 7 || e.type == 9) ico = icons.trash;\n          if (e.type == 2 || e.type == 1) ico = icons.radiation;\n          if (e.type == 8 || e.type == 11) ico = icons.factory;\n          if (e.type == 5) ico = icons.water;\n          if (e.type == 4) ico = icons.energy;\n          if (e.type == 3) ico = icons.power;\n\n        } else {\n\n          ico = icons.point_yellow;\n\n        }\n\n        drawIcons(e, ctx, canvasOverlay, img, size, ico, resize);\n\n      });\n      \n    });\n\n  }\n  \n  function getIcons(img, callback){\n    \n    if (__.core.$map.data('icons')){\n      \n      callback(__.core.$map.data('icons'));\n      \n    } else {\n    \n      img.addEventListener('load', function () {\n\n        __.core.$map.data('icons', img);\n\n        callback(img);\n\n      });\n      \n    }\n    \n    return img;\n    \n  }\n  \n  \n  function drawIcons(e, ctx, canvasOverlay, img, size, ico, resize){\n    \n    let dot = canvasOverlay._map.latLngToContainerPoint([e.point[1], e.point[0]]);\n    if (ico) ctx.drawImage(img, 0, ico, size, size, dot.x - resize / 2, dot.y - resize / 2, resize, resize);\n    return img;\n  }\n\n  return this;\n\n}","__.mapTiles = function(tileset){\n  \n  let simple = tileset.simple,\n      dark = tileset.dark,\n      $map = __.core.$map,\n      tiles = $map.data('tiles'),\n      d = 'map_dark',\n      l = 'map_light';\n  \n  \n  \n  this.default = function(){\n    \n    setTiles(simple);\n    changeClass(d,l);\n    \n  }\n  \n  this.eco = function(){\n    \n    setTiles(dark);\n    changeClass(l,d);\n  }\n  \n  this.railroad = function(){\n    \n    setTiles(dark);\n    changeClass(l,d);\n  }\n  \n  this.car = function(){\n    \n    setTiles(dark);\n    changeClass(l,d);\n  }\n  \n  function changeClass(from,to){\n    $map.removeClass(from).addClass(to);\n    return false;\n  }\n  \n  function setTiles(n){\n    if (tiles._url != n) {\n      tiles.setUrl(n);\n    }\n  }\n  \n  return this;\n  \n}","__.placeItem = function(params){\n  \n  \n  let _price = (function(price){\n      \n    let p = {\n      from : (price.from) ? (typeof global != 'undefined') ? global.component('cost', {value : price.from })[0] : __.cost({value : price.from })[0] : '',\n      to   : (price.to)   ? (typeof global != 'undefined') ? global.component('cost', {value : price.to })[0]   : __.cost({value : price.to })[0]   : ''\n    }  \n    \n    return {\n      from : (p.from) ? `от ${p.from} руб.` : '',\n      to : (p.to) ? `до ${p.to} руб.` : ''\n    }\n        \n  })(params.price);\n  \n  let _color = (typeof global != 'undefined') ? '#fafafa' : params.canvas.color;\n  \n  let _type = (params.type) ? `<span class=\"place-item__type\">${params.type}</span>` : ''; \n  \n  let _eco = (params.eco.distance < 10) ? `<div>${params.eco.closest.name} в ${params.eco.distance}км</div>` : '';\n    \n  let _car = `<div class=\"place-item__car\">до Москвы: ${params.car.time.h}ч ${params.car.time.m}мин (${params.car.distance}км)</div>`;\n  \n  let _rjd = (params.railroad.distance < 3) ? `<div class=\"place-item__train\">ст. ${params.railroad.closest.name} в ${params.railroad.distance}км,<br>до Москвы: ${params.railroad.closest.time.h}ч ${params.railroad.closest.time.m}мин (${params.railroad.closest.distance}км)</div>` : ''; \n  \n\n  \n  let tpl = \n`<div class=\"place-item\" id=\"place-${params.id}\">\n  <div class=\"place-item__title\">\n    <div class=\"place-item__pin\" style=\"background:${_color}\"></div>\n    <div>\n      ${_type}<span class=\"place-item__name\">${params.name}</span>\n    </div>\n  </div>\n  <div class=\"place-item__price\">${_price.from} ${_price.to}</div>\n  <div class=\"place-item__distance\">\n    ${_car}\n    ${_rjd}\n  </div>\n</div>`;\n    \n  if (typeof global == 'undefined') __.fs.event.bind('.place-item', 'click', function(e){\n    \n    var DATA = $('#app').data('data').places,\n        map = $('#map').data('map'),\n        id = $(e.currentTarget).attr('id').split('-')[1],\n        folder = Math.floor(id/100) * 100,\n        url = `./bin/data/places/${folder}/place_${id}/data.json`;\n    \n        $('.place-item').not(this).removeClass('place-item_active');\n    \n        \n        \n        if ( $(this).is('.place-item_active') ){\n          $(this).removeClass('place-item_active');\n          $('#detail-screen').remove();\n          \n        } else {\n          $(this).addClass('place-item_active');\n          \n          $.each(DATA, function(i,e){\n      \n            if (e.id == id){\n              map.setView(new L.LatLng(e.point[1], e.point[0]), 14);\n              return false;\n            }\n\n          });\n\n          $.get(url, function(data){\n\n            __.detailScreen(data);\n\n          });\n          \n        }\n    \n    \n    \n      \n  })\n    \n  return tpl;\n  \n}","__.placePoint = function (params) {\n\n  const s = {\n      0: {\n        s: .5\n      },\n      1: {\n        s: .5\n      },\n      2: {\n        s: .5\n      },\n      3: {\n        s: 1\n      },\n      4: {\n        s: 1\n      },\n      5: {\n        s: 2\n      },\n      6: {\n        s: 2\n      },\n      7: {\n        s: 3\n      },\n      8: {\n        s: 3\n      },\n      9: {\n        s: 3\n      },\n      10: {\n        s: 4\n      },\n      11: {\n        s: 4\n      },\n      12: {\n        s: 4\n      },\n      13: {\n        s: 6\n      },\n      14: {\n        s: 6\n      },\n      15: {\n        s: 6\n      },\n      16: {\n        s: 12\n      },\n      17: {\n        s: 12\n      },\n      18: {\n        s: 12\n      }\n    },\n    size = s[params.zoom].s * 2,\n    changeColor = $('#select-layer').val(),    \n    color = __.fs.colorize()[changeColor](params.place);\n  \n  \n  \n  params.ctx.fillStyle = color;\n  \n  if (params.zoom > 10){\n    params.ctx.lineWidth = 1;\n    params.ctx.strokeStyle = 'rgba(255, 255, 255,.5)';\n    params.ctx.stroke();\n  }\n  \n  if (params.zoom > 11){\n    params.ctx.lineWidth = 1;\n    params.ctx.strokeStyle = 'rgb(255, 255, 255)';\n    params.ctx.stroke();\n    \n  }\n\n  var dot = params.canvasOverlay._map.latLngToContainerPoint([params.place.point[1], params.place.point[0]]);\n  params.ctx.beginPath();\n  params.ctx.arc(dot.x, dot.y, size / 2, 0, Math.PI * 2);\n  params.ctx.fill();\n  params.ctx.closePath();\n\n\n  return {\n    x1: dot.x,\n    y1: dot.y,\n    x2: dot.x + size,\n    y2: dot.y + size,\n    color: color,\n    visible : params.place.canvas.visible\n  };\n\n}","__.search = function(params){\n  \n  var DATA = $('#app').data('data').places,\n      searchdata = [],\n      results = [],\n      map = $('#map').data('map'),\n      search = new __.fs.substringSearch({ multiply : false }),\n      keys = {};\n  \n  \n  if (params.text){\n    \n    searchdata = search.inArray(params.text, DATA, function(e){ return e.name; }, function(e){\n      e.canvas.visible = true;\n      \n    }, function(e){\n      e.canvas.visible = false;\n      \n    });\n    \n    map.search = (searchdata.length) ? true : false;\n    \n    \n    \n    $.each(searchdata, function(i,e){\n      \n      if (!keys[e.res.obj.id]) {\n        keys[e.res.obj.id] = true;\n        results.push(e.res.obj);\n      }\n      \n    });\n    \n    \n    $('#places').trigger('renderList', {places : results, onlyVisible: true}).scrollTop(0);\n    \n  } else {\n    \n    map.search = false;\n    \n    $.each(DATA, function(i,e){\n      e.canvas.visible = true;\n    });\n    \n    $('#places').trigger('renderList', {places : DATA, onlyVisible: false});\n    \n  }\n  \n  $('#map').data('canvas').redraw();\n  \n  return results;\n  \n}\n\n","__.select = function(params){\n  \n  \n}","__.core.$app = function(){\n  \n  $('#app').data('browser', __.fs.browserDetect()).addClass(function(){\n    let browser = $(this).data('browser')\n    return [browser.browserName, browser.platform, browser.isMobile].join(' ');\n  });\n  \n  return $('#app');\n  \n}","__.core.$header = function(){\n  \n  $('#change-view').click(function(){\n      \n      if ( $(this).text() != 'На карте' ){\n        $(this).text('На карте');\n      } else {\n        $(this).text('Списком');\n      }\n    \n      \n    $('#main').toggleClass('main_screen-2');\n    \n  });\n  \n  return $('#header'); \n  \n};","__.core.$map = function(){\n  \n    \n    $('#map').click(function (e) {\n\n    var DATA = $('#app').data('data').places,\n        x = e.offsetX,\n        y = e.offsetY;\n  \n\n    $.each(DATA, function (i, el) {\n\n      if (x > el.canvas.x1 &&\n        x < el.canvas.x2 &&\n        y > el.canvas.y1 &&\n        y < el.canvas.y2) {\n        \n        let link = `${location.origin}/control-center.html#${el.id}`  \n        \n        console.log('id: '+ el.id, link);\n      }\n\n    });\n\n  }).bind('createMap', function(event){\n    \n    var t = {\n      simple : 'https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}.png',\n      dark : 'https://{s}.tiles.mapbox.com/v4/mapbox.dark/{z}/{x}/{y}@2x.png?access_token=pk.eyJ1IjoiZ2xlYWZsZXQiLCJhIjoiY2lxdWxoODl0MDA0M2h4bTNlZ2I1Z3gycyJ9.vrEWCC2nwsGfAYKZ7c4HZA'\n    }  \n      \n    var id = $(event.target).attr('id');\n    \n    var leafletMap = L.map(id).setView([55.751244, 37.618423], 9);\n    var tiles = L.tileLayer(t.dark)\n      .addTo(leafletMap);\n    \n    $(event.target).data('map', leafletMap);\n    $(event.target).data('tiles', tiles);\n    $(event.target).data('tileset', t);  \n        \n      \n    $('.leaflet-bar').find('a').each(function(i,e){\n      $(e).click(function(event){\n        event.preventDefault();\n        $('#app').scrollTop(0);\n      });\n    });\n      \n    \n  }).bind('renderMap', function (event, params) {\n\n    var _this = this,\n        places = params.data.places,\n        map = $(event.target).data('map');\n    \n\n    var c = L.canvasOverlay().drawing(drawingOnCanvas).addTo(map);\n    \n    $(_this).data('canvas', c);\n\n    function drawingOnCanvas(canvasOverlay, p) {\n      var ctx = p.canvas.getContext('2d'),\n          zoom = $(_this).data('map').getZoom();\n      \n      \n          \n          \n      \n      ctx.clearRect(0, 0, p.canvas.width, p.canvas.height);\n\n      \n      $.each(places, function (i, e) {\n\n        if (e.canvas.visible) e.canvas = __.placePoint({\n          ctx: ctx,\n          canvasOverlay: canvasOverlay,\n          zoom: zoom,\n          place: e\n        });\n\n      });\n      \n      let changeOverlay = $('#select-layer').val();\n      let tileset = $('#map').data('tileset');\n      \n      __.mapOverlay()[changeOverlay]( params, canvasOverlay, ctx, zoom );\n      __.mapTiles(tileset)[changeOverlay]();\n      \n\n    };\n\n  });\n  \n  \n  \n  \n  \n  return $('#map');\n  \n  }\n  \n","__.core.$mapControls = function () {\n\n  $('#map-controls').bind('create', function (event) {\n\n    let layers = {\n        default: {\n          title: 'Карта'\n        },\n        eco: {\n          title: 'Экология',\n          selected: true\n        },\n        railroad: {\n          title: 'Электрички'\n        },\n        car: {\n          title: 'Автомобиль'\n        }\n      },\n      l = '';\n    \n\n    $.each(layers, function (i, e) {\n      let selected = (e.selected) ? 'selected' : ''\n      l += `<option ${selected} value=\"${i}\">${e.title}</option>`;\n    });\n\n\n    let $selectLayer = $(`<select data-ico=\"eco\" id=\"select-layer\" class=\"select\">${l}</select>`).data('options', layers).change(function (e) {\n\n      var options = $(this).data('options'),\n        val = $(this).val();\n      \n      $(this).attr('data-ico',val);\n\n      $.each(options, function (i, e) {\n        e.selected = (val == i) ? true : false;\n      });\n\n\n      $('#map').data('canvas').redraw();\n\n    });\n\n    $(this).find('.layers-controls').append($selectLayer);\n\n\n\n\n\n  }).trigger('create');    \n\n}","__.core.placeScreen = function () {\n  \n  \n  \n}","__.core.$placeSearch = function(){\n  \n    $('#place-search').bind('search', function(event, params){\n    \n    var _this = this;\n    \n    __.search({\n      text: $(this).find('input').val()\n    });\n    \n  }).keyup(function(e){\n    \n    var code = e.which;\n    if(code==13)e.preventDefault();\n    if(code==32||code==13||code==188||code==186){\n     \n      $(this).trigger('search');\n      \n    }\n    \n  }).find('button').click(function(e){\n    \n    $(this).trigger('search');\n   \n  });\n  \n  return $('#place-search');\n  \n}","__.core.$places = function(){\n  \n  \n    $('#places').scroll(function (e) {\n    var _this = this,\n        $last = $(_this).find('.place-item').last(),\n        lastId = $last.attr('id').split('-')[1],\n        length = $(_this).find('.place-item').length,\n        map = $('#map').data('map');\n\n    if (!map.search && $last.offset().top < $(window).outerHeight() * 2) {\n\n      var DATA = $('#app').data('data').places,\n          count = 100;\n      \n      $.each(DATA, function (i, e) {\n        if (length < i) {\n          $(_this).append(__.placeItem(e));\n          count--;\n        }\n        if (!count) return false;\n      });\n    }\n\n  }).bind('renderList', function (event, params) {\n\n    var _this = this,\n        onlyVisible = params.onlyVisible || false,\n        places = params.places;\n\n    $(_this).empty();\n\n    $.each(places, function (i, e) {\n\n      if (onlyVisible) {\n\n        if (e.canvas.visible) {\n          $(_this).append(__.placeItem(e));\n        }\n\n      } else {\n\n        if (i < 100) {\n          $(_this).append(__.placeItem(e));\n        } else {\n          return false;\n        }\n      }\n\n    });\n\n  });\n  \n  return $('#places');\n  \n}","__.core.$window = function() {\n  \n  \n  let headerHeight = $('#header').outerHeight(),\n      windowHeight = $(window).outerHeight();\n  \n  resize();\n  \n  $(window).resize(function(e){\n    \n    resize();\n    \n  });\n  \n  function resize(){\n    $('#main').css({\n      height : `calc(100vh - ${headerHeight}px)`\n    });\n    \n  }\n  \n  return $(window);\n  \n}","__.fs.browserDetect = function () {\n\n\tvar nVer = navigator.appVersion;\n\tvar nAgt = navigator.userAgent;\n\tvar browserName = navigator.appName;\n\tvar fullVersion = '' + parseFloat(navigator.appVersion);\n\tvar majorVersion = parseInt(navigator.appVersion, 10);\n\tvar nameOffset, verOffset, ix;\n\n\tif ((verOffset = nAgt.indexOf(\"Opera\")) != -1) {\n\t\tbrowserName = \"opera\";\n\t\tfullVersion = nAgt.substring(verOffset + 6);\n\t\tif ((verOffset = nAgt.indexOf(\"Version\")) != -1)\n\t\t\tfullVersion = nAgt.substring(verOffset + 8);\n    \n\t} else if ((verOffset = nAgt.indexOf(\"MSIE\")) != -1) {\n\t\tbrowserName = \"ie\";\n\t\tfullVersion = nAgt.substring(verOffset + 5);\n    \n\t} else if ((verOffset = nAgt.indexOf(\"Chrome\")) != -1) {\n\t\tbrowserName = \"chrome\";\n\t\tfullVersion = nAgt.substring(verOffset + 7);\n    \n\t} else if ((verOffset = nAgt.indexOf(\"Safari\")) != -1) {\n\t\tbrowserName = \"safari\";\n\t\tfullVersion = nAgt.substring(verOffset + 7);\n\t\tif ((verOffset = nAgt.indexOf(\"Version\")) != -1)\n\t\t\tfullVersion = nAgt.substring(verOffset + 8);\n    \n\t} else if ((verOffset = nAgt.indexOf(\"Firefox\")) != -1) {\n\t\tbrowserName = \"firefox\";\n\t\tfullVersion = nAgt.substring(verOffset + 8);\n    \n\t} else if (nAgt.indexOf(\"FBAN\") != -1 && nAgt.indexOf(\"FBAV\") != -1 ) {\n\t\tbrowserName = \"facebook\";\n\t\tfullVersion = 0;\n    \n\t} else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) <\n\t\t(verOffset = nAgt.lastIndexOf('/'))) {\n\t\tbrowserName = nAgt.substring(nameOffset, verOffset);\n\t\tfullVersion = nAgt.substring(verOffset + 1);\n\t\tif (browserName.toLowerCase() == browserName.toUpperCase()) {\n\t\t\tbrowserName = navigator.appName;\n\t\t}\n\t}\n\n\tif ((ix = fullVersion.indexOf(\";\")) != -1)\n\t\tfullVersion = fullVersion.substring(0, ix);\n\tif ((ix = fullVersion.indexOf(\" \")) != -1)\n\t\tfullVersion = fullVersion.substring(0, ix);\n\n\tmajorVersion = parseInt('' + fullVersion, 10);\n\tif (isNaN(majorVersion)) {\n\t\tfullVersion = '' + parseFloat(navigator.appVersion);\n\t\tmajorVersion = parseInt(navigator.appVersion, 10);\n\t}\n\n  var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n  var ratio = window.devicePixelRatio || 1;\n  var screen = {\n    width : window.screen.width * ratio,\n    height : window.screen.height * ratio\n  };\n  \n\treturn {\n\t\tbrowserName: browserName.toLowerCase(),\n\t\tfullVersion: fullVersion,\n\t\tmajorVersion: majorVersion,\n\t\tappName: navigator.appName.toLowerCase(),\n\t\tuserAgent: navigator.userAgent.toLowerCase(),\n\t\tplatform: navigator.platform.toLowerCase(),\n    iphoneX: (iOS && screen.width == 1125 && screen.height === 2436) ? 'iphoneX' : '',\n\t\tisMobile: (function () {\n\t\t\tvar check = 'not-mobile';\n\t\t\t(function (a) {\n\t\t\t\tif (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = 'mobile';\n\t\t\t})(navigator.userAgent || navigator.vendor || window.opera);\n\t\t\treturn check;\n\t\t})()\n\t}\n  \n};\n\n","__.fs.colorize = function(params){\n   \n  //default\n  this.default = function() {\n    \n    return rgba(0,98,255,.5);\n    \n  }\n  \n  //ecology\n  this.eco = function(params) {\n    \n    var r = 10;\n    switch (params.eco.closest.type) {\n      case 3:\n        r = 3;\n        break;\n      case 4:\n        r = 3;\n        break;\n      case 6:\n        r = 5;\n        break;\n    }\n\n    \n    var distance = params.eco.distance;\n    var alphaMax = 0.6;\n    var alpha = (distance < r) ? alphaMax - interpolation(0, r, distance, 0, alphaMax) : 0;\n\n    var color = blendColors(\n    [0, 98, 255, .3],\n    [255, 30, 0, alpha]\n    );\n\n    return rgba(color[0],color[1],color[2],color[3]);\n\n  }\n  \n  //railroad\n  this.railroad = function(params) {\n    \n    var distance = params.railroad.distance;\n    var alphaMax = 1;\n    var alpha = (distance < 3) ? alphaMax - interpolation(0, 3, distance, 0, alphaMax) : 0;\n\n    var color = blendColors(\n    [226, 30, 220, .1],\n    [0, 98, 255, alpha]\n    );\n\n    return rgba(color[0],color[1],color[2],color[3]);\n    \n  }\n  \n  //car distance\n  this.car = function(params) {\n    \n    var time = __.fs.time.toInt(params.car.time.h,params.car.time.m);\n    var color;\n\n    if (time <= 30) color = rgba(0, 177, 255, 0.3);\n    if (time > 30) color = rgba(29, 0, 255, 0.3);\n    if (time > 50) color = rgba(118, 0, 255, 0.3);\n    if (time > 70) color = rgba(226, 0, 255, 0.3);\n    if (time > 100) color = rgba(255, 0, 128, 0.3);\n    if (time > 150) color = rgba(255, 0, 0, 0.3);\n\n    return color;\n    \n  }\n  \n  function rgba(r,g,b,a){\n    return `rgba(${r},${g},${b},${a})`;\n  }\n  \n  function interpolation(minFrom, maxFrom, current, minTo, maxTo) {\n    return minTo + ((current - minFrom) / (maxFrom - minFrom)) * ((maxTo - minTo) / 1);\n  }\n\n  function blendColors(base, added) {\n\n    var mix = [];\n    mix[3] = 1 - (1 - added[3]) * (1 - base[3]); // alpha\n    mix[0] = Math.round((added[0] * added[3] / mix[3]) + (base[0] * base[3] * (1 - added[3]) / mix[3])); // red\n    mix[1] = Math.round((added[1] * added[3] / mix[3]) + (base[1] * base[3] * (1 - added[3]) / mix[3])); // green\n    mix[2] = Math.round((added[2] * added[3] / mix[3]) + (base[2] * base[3] * (1 - added[3]) / mix[3])); // blue\n\n    return mix;\n  }\n  \n  return this;\n  \n}","__.fs.coreModuls = function(moduls){\n  \n  var core = {};\n  \n  $.each(moduls,function(i,e){\n        \n    core[e] = __.core[e]();\n    \n  });\n  \n  return core;\n  \n}","__.fs.decodeData = function (data) {\n  var places = [];\n  var eco = {};\n  var rail = {};\n    \n  \n\n  $.each(data.p, function (i, e) {\n\n    var p = {\n      id: e[7],\n      point: [e[15], e[0]],\n      price: {\n        from: (e[13] > -1) ? e[13] : null,\n        to: (e[14] > -1) ? e[14] : null\n      },\n      name: data.n[e[17]],\n      readyDate: (e[6]) ? e[6] : null,\n      type: (e[16] > -1) ? data.t[e[16]] : null,\n      class: (e[18] > -1) ? data.k[e[18]] : null,\n      car: {\n        distance: e[1],\n        time: {\n          h: e[2],\n          m: e[3]\n        }\n      },\n      moscow: {\n        distance: e[8]\n      },\n      railroad: {\n        distance: e[4],\n        closest: (function (railroad, stationId) {\n          var obj = {},\n              m_obj = {}\n          $.each(railroad, function (i, s) {\n            \n            obj = {\n                id: s[0],\n                name: s[2],\n                point: [s[1], s[3]],\n                distance: s[4],\n                time: {\n                  h: s[5],\n                  m: s[6]\n                },\n                route : (s[7] > -1) ? data.g[s[7]] : null,\n                type : (s[8] > -1) ? data.q[s[8]] : null,\n                count : s[9]\n            }\n            \n            rail[obj.id] = obj;\n            \n            if (stationId == s[0]) {\n              m_obj = obj;\n            }\n          });\n          \n          return m_obj;\n        })(data.r, e[5])\n      },\n      city: {\n        distance: e[11],\n        closest: (function (cities, cityId) {\n          var obj = {}\n          $.each(cities, function (i, c) {\n            if (cityId == c[0]) {\n              obj = {\n                id: c[0],\n                name: c[2],\n                point: [c[1], c[3]]\n              }\n            }\n          });\n          return obj;\n        })(data.c, e[12])\n      },\n      eco: {\n        distance: e[9],\n        closest: (function (ecos, ecoId) {\n          var obj = {},\n              m_obj = {};\n          \n          $.each(ecos, function (i, ec) {\n            obj = {\n              id: ec[0],\n              name: ec[2],\n              point: [ec[1], ec[3]],\n              type: ec[4]\n            }\n              \n            eco[obj.id] = obj;\n            \n            if (ecoId == ec[0]) {\n              m_obj = obj;\n            }\n          });\n          return m_obj;\n        })(data.e, e[10])\n      },\n      canvas : {\n        visible : true\n      }\n    }\n\n    places.push(p);\n\n\n  });\n  \n  \n  \n  return {\n    places : places,\n    eco : eco,\n    railroad : rail\n  };\n\n\n}","__.fs.event = {\n  bind: function (elem, eventName, event) {\n    \n    let listners = __.core.$app.data('listners') || {};\n    if (!listners[elem + '|' + eventName]) {\n      listners[elem + '|' + eventName] = {\n        name: elem,\n        event: eventName\n      }\n      \n      __.core.$app.data('listners', listners);\n\n      $(document).on(eventName, elem, event);\n    }\n  },\n  unbind: function (elem, eventName) {\n    let listners = __.core.$app.data('listners') || {};\n    delete listners[elem + '|' + eventName];\n    \n    __.core.$app.data('listners', listners);\n    $(document).off(eventName, elem);\n  }\n}","__.fs.mapSprites = function (scale) {\n\n  return {\n    recicle: 1,\n    radiation: 20 * scale,\n    factory: 40 * scale,\n    trash: 60 * scale,\n    airport: 80 * scale,\n    energy: 100 * scale,\n    water: 120 * scale,\n    point_yellow: 140 * scale,\n    power: 160 * scale,\n    point_blue: 180 * scale,\n    point_green: 200 * scale,\n    railroad: 220 * scale\n  }\n}","__.fs.substringSearch = function(options) {\n\n  options = options || {}\n  \n  options.weight   = options.weight || 100;\n  options.multiply = options.multiply || true;\n\n  let _this = this,\n    results = [],\n    proto = {\n      weight: 0,\n      search: '',\n      res:    '',\n      in:     -1,\n      out:    -1,\n      length: 0\n    };\n\n  /*\n    search in the string\n  */\n  this.inString = function (substr, str) {\n\n    substr = '' + substr;\n\n    let wordsSearch = (substr.length) ? substr.trim().split(' ') : [''],\n      words = (str.length) ? str.trim().split(' ') : [''],\n      wsl = wordsSearch.length,\n      sl = substr.length, \n      wl = words.length, \n      _res = {\n        str: str\n      },\n      result = [];\n\n    if (sl) {\n      \n\n      if (substr.indexOf(' ') + 1) {\n\n        let fullMatch = search(substr, _res);\n\n        if (fullMatch.weight) fullMatch.weight = fullMatch.weight * wl;\n\n        result = fullMatch;\n\n      }\n\n      for (var i = wsl; i--;) {\n\n        result = result.concat(search(wordsSearch[i], _res));\n\n      }\n\n      result = result.sort(compare);\n\n    } else {\n\n      let tempItem = copyObject(proto);\n      tempItem.search = substr;\n      tempItem.res = _res;\n\n      result.push(tempItem);\n\n    }\n\n    return result;\n\n  }\n  \n  /*\n    search in the string\n  */\n  this.inArray = function (substr, arr, getKey, isFind, isNotFind) {\n\n    substr = '' + substr;\n\n    let result = [],\n        al = arr.length;\n\n    for (var i = al; i--;) {\n\n      let str = getKey(arr[i]),\n        _res = {\n          obj: arr[i],\n          str: str,\n          index: i\n        },\n        _result = _this.inString(substr, str),\n        rl = _result.length;\n\n      if (rl) {\n        for (var r = rl; r--;) {\n        \n          if (isFind) isFind(arr[i]);\n          \n          if (_result[r]) _result[r].res = _res;\n\n        }\n        \n        result = result.concat(_result);\n        \n      } else {\n        \n        if (isNotFind) isNotFind(arr[i]);\n        \n      }\n\n    \n\n    }\n\n    result = result.sort(compare);\n\n    return result;\n\n  }\n\n  function search(substr, _res) {\n\n    let search = substr.toLowerCase().trim(),\n      str = ''+_res.str,\n      normalStr = str.toLowerCase(),\n      pos = normalStr.indexOf(search),\n      w = options.weight,\n      nl = normalStr.length,\n      sl = search.length,  \n      length = substr.length * (w / 10),\n      result = [];\n        \n\n    while (true) {\n\n      let tempItem = copyObject(proto);\n      tempItem.search = substr;\n      tempItem.res = _res;\n\n      let foundPos = normalStr.indexOf(search, pos);\n\n      if (foundPos == -1) break;\n\n      if (nl >= sl && normalStr.indexOf(search, pos) + 1) {\n\n        tempItem.weight += (nl / sl * 100 > 50) ? w + length : nl / sl * w + length;\n        tempItem.weight = nl - foundPos;\n        tempItem.in = foundPos;\n        tempItem.out = tempItem.in + search.length;\n        tempItem.length = sl;\n\n        if (nl === sl) tempItem.weight += w * 2;\n\n        if (normalStr[0] === search[0]) tempItem.weight += w;\n\n      }\n\n      result.push(tempItem);\n\n      pos = foundPos + 1;\n\n    }\n    \n    if (!options.multiply){\n      result = result.sort(compare);\n      result = [result[0]];\n    }\n\n    return result;\n  }\n\n  function compare(a, b) {\n\n    a = a.weight;\n    b = b.weight;\n\n    let comparison = 0;\n\n    if (a < b) {\n      comparison = 1;\n    } else if (a > b) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  function copyObject(src) {\n    return Object.assign({}, src);\n  }\n\n  return this;\n\n};","__.fs.time = {\n  toInt: function (h, m) {\n\n    m = (m < 10) ? '0' + m : '' + m;\n    h = '' + h;\n\n    return +(h + m);\n\n  }\n}","__.fs.url = {\n  \n  objToUrl : function(url,obj){\n    url = url + '?' || '' \n    let uri = encodeURIComponent;\n    return url + Object.entries(obj).map(([key, val]) => `${uri(key)}=${uri(val)}`).join('&');\n  }\n  \n}"],"sourceRoot":"/source/"}