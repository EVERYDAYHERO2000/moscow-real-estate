{"version":3,"sources":["canvas.js","core/main.js","components/cost/cost.js","components/detail-screen/detail-screen.js","components/map-overlay/map-overlay.js","components/map-tiles/map-tiles.js","components/place-item/place-item.js","components/place-point/place-point.js","components/place-search/place-search.js","components/select/select.js","core/app/app.js","core/header/header.js","core/map/map.js","core/map-controls/map-controls.js","core/place-screen/place-screen.js","core/place-search/place-search.js","core/places/places.js","core/window/window.js","fs/browser-detect/browser-detect.js","fs/colorize/colorize.js","fs/core-moduls/core-moduls.js","fs/decode-data/decode-data.js","fs/search/search.js","fs/map-sprites/map-sprites.js","fs/event/event.js","fs/time/time-to-int.js"],"names":["L","CanvasOverlay","Class","extend","initialize","userDrawFunc","options","this","_userDrawFunc","setOptions","drawing","params","canvas","_canvas","redraw","_frame","Util","requestAnimFrame","_redraw","onAdd","map","_map","DomUtil","create","size","getSize","width","x","height","y","animated","zoomAnimation","Browser","any3d","addClass","_panes","overlayPane","appendChild","on","_reset","_resize","_animateZoom","onRemove","getPanes","removeChild","off","this_canvas","addTo","addLayer","resizeEvent","newSize","topLeft","containerPointToLayerPoint","setPosition","bounds","getBounds","zoomScale","getEast","getWest","zoom","getZoom","e","scale","getZoomScale","offset","_getCenterOffset","center","_multiplyBy","subtract","_getMapPanePos","style","TRANSFORM","getTranslateString","canvasOverlay","runApp","__","core","fs","coreModuls","$","get","places","data","decodeData","$app","$map","trigger","$places","onlyVisible","cost","value","test","replace","split","detailScreen","price","p","_type","type","concat","_class","contentItem","v","_address","address","name","_city","city","closest","distance","_moscow","moscow","_car","car","time","h","m","_railroad","railroad","_eco","eco","description","_price","from","to","_developer","developer","_site","site","_medic","medic","container_tpl","detail_tpl","callback","$screen","$detailScreen","find","empty","append","click","remove","console","log","length","mapOverlay","ctx","icons","mapSprites","src","img","Image","getIcons","addEventListener","drawIcons","ico","resize","dot","latLngToContainerPoint","point","drawImage","each","i","point_blue","recicle","airport","trash","radiation","factory","water","energy","power","point_yellow","mapTiles","tileset","simple","dark","tiles","d","l","changeClass","removeClass","setTiles","n","_url","setUrl","placeItem","global","component","_color","color","_rjd","tpl","id","event","bind","DATA","currentTarget","attr","folder","Math","floor","url","not","is","setView","LatLng","placePoint","0","s","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","changeColor","val","colorize","place","fillStyle","lineWidth","strokeStyle","stroke","beginPath","arc","PI","fill","closePath","x1","y1","x2","y2","visible","search","searchdata","results","substringSearch","multiply","keys","text","inArray","res","obj","push","scrollTop","select","browserDetect","browser","browserName","platform","isMobile","join","$header","toggleClass","offsetX","offsetY","el","link","location","origin","t","target","leafletMap","tileLayer","preventDefault","_this","c","getContext","clearRect","changeOverlay","$mapControls","layers","default","title","selected","$selectLayer","change","placeScreen","$placeSearch","keyup","code","which","scroll","$last","last","top","window","outerHeight","count","$window","headerHeight","css","navigator","appVersion","nameOffset","verOffset","ix","nAgt","userAgent","appName","fullVersion","parseFloat","majorVersion","parseInt","indexOf","substring","lastIndexOf","toLowerCase","toUpperCase","isNaN","a","check","iOS","MSStream","ratio","devicePixelRatio","screen","iphoneX","vendor","opera","substr","rgba","r","g","b","interpolation","minFrom","maxFrom","current","minTo","maxTo","blendColors","base","added","mix","round","toInt","moduls","rail","ecos","ecoId","m_obj","cities","cityId","stationId","readyDate","class","k","ec","weight","proto","in","out","_res","trim","normalStr","str","pos","w","nl","sl","result","tempItem","copyObject","foundPos","sort","compare","comparison","Object","assign","inString","wordsSearch","words","wsl","wl","fullMatch","arr","getKey","isFind","isNotFind","index","_result","rl","point_green","elem","eventName","listners","document","unbind"],"mappings":"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","file":"main.js","sourcesContent":["/*\n UPDATE July 2016 , moved and updated to here: https://github.com/Sumbera/gLayers.Leaflet\n \n Generic  Canvas Overlay for leaflet, \n Stanislav Sumbera, April , 2014\n\n - added userDrawFunc that is called when Canvas need to be redrawn\n - added few useful params fro userDrawFunc callback\n  - fixed resize map bug\n  inspired & portions taken from  :   https://github.com/Leaflet/Leaflet.heat\n  \n  License: MIT\n\n*/\n\n\nL.CanvasOverlay = L.Class.extend({\n\n    initialize: function (userDrawFunc, options) {\n        this._userDrawFunc = userDrawFunc;\n        L.setOptions(this, options);\n    },\n\n    drawing: function (userDrawFunc) {\n        this._userDrawFunc = userDrawFunc;\n        return this;\n    },\n\n    params:function(options){\n        L.setOptions(this, options);\n        return this;\n    },\n    \n    canvas: function () {\n        return this._canvas;\n    },\n\n    redraw: function () {\n        if (!this._frame) {\n            this._frame = L.Util.requestAnimFrame(this._redraw, this);\n        }\n        return this;\n    },\n\n    \n  \n    onAdd: function (map) {\n        this._map = map;\n        this._canvas = L.DomUtil.create('canvas', 'leaflet-heatmap-layer');\n\n        var size = this._map.getSize();\n        this._canvas.width = size.x;\n        this._canvas.height = size.y;\n\n        var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n        L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n\n\n        map._panes.overlayPane.appendChild(this._canvas);\n\n        map.on('moveend', this._reset, this);\n        map.on('resize',  this._resize, this);\n\n        if (map.options.zoomAnimation && L.Browser.any3d) {\n            map.on('zoomanim', this._animateZoom, this);\n        }\n\n        this._reset();\n    },\n\n    onRemove: function (map) {\n        map.getPanes().overlayPane.removeChild(this._canvas);\n \n        map.off('moveend', this._reset, this);\n        map.off('resize', this._resize, this);\n\n        if (map.options.zoomAnimation) {\n            map.off('zoomanim', this._animateZoom, this);\n        }\n        this_canvas = null;\n\n    },\n\n    addTo: function (map) {\n        map.addLayer(this);\n        return this;\n    },\n\n    _resize: function (resizeEvent) {\n        this._canvas.width  = resizeEvent.newSize.x;\n        this._canvas.height = resizeEvent.newSize.y;\n    },\n    _reset: function () {\n        var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n        L.DomUtil.setPosition(this._canvas, topLeft);\n        this._redraw();\n    },\n\n    _redraw: function () {\n        var size     = this._map.getSize();\n        var bounds   = this._map.getBounds();\n        var zoomScale = (size.x * 180) / (20037508.34  * (bounds.getEast() - bounds.getWest())); // resolution = 1/zoomScale\n        var zoom = this._map.getZoom();\n     \n        // console.time('process');\n\n        if (this._userDrawFunc) {\n            this._userDrawFunc(this,\n                                {\n                                    canvas   :this._canvas,\n                                    bounds   : bounds,\n                                    size     : size,\n                                    zoomScale: zoomScale,\n                                    zoom : zoom,\n                                    options: this.options\n                               });\n        }\n       \n       \n        // console.timeEnd('process');\n        \n        this._frame = null;\n    },\n\n    _animateZoom: function (e) {\n        var scale = this._map.getZoomScale(e.zoom),\n            offset = this._map._getCenterOffset(e.center)._multiplyBy(-scale).subtract(this._map._getMapPanePos());\n\n        this._canvas.style[L.DomUtil.TRANSFORM] = L.DomUtil.getTranslateString(offset) + ' scale(' + scale + ')';\n\n    }\n});\n\nL.canvasOverlay = function (userDrawFunc, options) {\n    return new L.CanvasOverlay(userDrawFunc, options);\n};\n","var runApp = function(){\n    \n  __.core = __.fs.coreModuls(['$window','$app','$header','$map','$places','$placeSearch','$mapControls']);\n  \n\n  $.get('bin/data/data.json', function (places) {\n    \n    let data = __.fs.decodeData(places);\n\n    __.core.$app.data('data', data);\n    \n    __.core.$map.trigger('createMap').trigger('renderMap', {\n      data: data\n    });\n\n    __.core.$places.trigger('renderList', {\n      places: data.places,\n      onlyVisible: false\n    });\n\n  });\n  \n  \n}\n\n  \n","__.cost = function(params) {\n  \n    let value = params.value;\n    value = (/\\.\\d/.test(value)) ? value + '' : value + '.00';\n    value = (/\\.\\d{2}/.test(value)) ? value : value + '0';\n    value = (value).replace(/\\d(?=(\\d{3})+\\.)/g, '$& ');\n\n    return value.split('.');\n  \n}","__.detailScreen = function (data){\n  \n  let _type = (data.type) ? `<span>${data.type}</span>` : '';\n  let _class = contentItem('Класс', data.class, function(v){ return v });\n  let _address = contentItem('Адрес', data.address.name, function(v){ return v });\n  let _city = contentItem('Ближайший город', data.city.closest.name, function(v){ return `${v} в ${data.city.distance}км` });\n  let _moscow = contentItem('Расстояние от Москвы', data.moscow.distance, function(v){ return `${v}км` });\n  let _car = contentItem('На автомобиле до Москвы', data.car.distance, function(v){ return `${v}км<br> ${data.car.time.h}ч ${data.car.time.m}мин без учета пробок` });\n  let _railroad = contentItem('Ближайшая ж/д станция', data.railroad.closest.name, function(v){ return `${v} в ${data.railroad.distance}км<br> до Москвы ${data.railroad.closest.time.h}ч ${data.railroad.closest.time.m}мин` });\n  let _eco = contentItem('Ближайший источник загрязнения', data.eco.closest.name, function(v){ \n    let description = (data.eco.closest.description) ? `<br>${data.eco.closest.description}` : '';\n    return `${data.eco.distance}км<br>${v} ${description}`\n  });\n  let _price = (function(price){\n    \n    \n    let from = (price.from) ? `от ${__.cost({value:price.from})[0]}руб. ` : '',\n        to = (price.to) ? `<br>до ${__.cost({value:price.to})[0]}руб.` : '',\n        p = from + to;\n    \n    return (p) ? contentItem('Цена', p, function(v){ return v }) : '';\n    \n    \n  })(data.price);\n  let _developer = contentItem('Застройщик', data.developer, function(v){ return v; });\n  let _site = contentItem('Сайт', data.site, function(v){ return `<a href=\"${v}\">${v}</a>`; });\n  let _medic = contentItem('Ближайшая станция скорой помощи Москвы и Московской области', data.medic.closest, function(v){ return `${data.medic.distance}км<br>${data.medic.closest.name}`; });\n  \n  let container_tpl = `\n<h1>${_type} <span>${data.name}</span></h1>\n<div class=\"panel__content content\">\n  <section>\n    ${_class}\n    ${_price}\n    ${_developer}\n    ${_site}\n    ${_address}\n    ${_moscow}\n  </section>\n  <section>\n    <h2>Транспорт</h2>\n    ${_car}\n    ${_railroad}\n  </section>\n  <section>\n    <h2>Инфраструктура</h2>\n    ${_city}\n    ${_medic}\n  </section>\n  <section>\n    <h2>Экология</h2>\n    ${_eco}\n  </section>\n</div>\n  `; \n  \n  let detail_tpl = `\n<div id=\"detail-screen\" class=\"panel panel_detail\">\n  <div class=\"header-mobile\">\n    <button id=\"close-screen\" class=\"btn\">Назад</button>\n  </div>\n  <div class=\"panel__container\">${container_tpl}</div>\n</div>`;\n  \n  \n  function contentItem(name, value, callback){\n        \n    return (value) ? `<div class=\"content__item\">\n    <div class=\"content__item-title\">${name}</div>\n    <div class=\"content__item-value\">${callback(value)}</div>\n  </div>` : '';\n    \n  } \n  \n   \n  let $screen = (__.core.$detailScreen) ? __.core.$detailScreen : $(detail_tpl);\n  \n  let $container = $screen.find('.panel__container').empty().append(container_tpl);\n  \n  \n  \n  \n  $screen.find('#close-screen').click(function(e){\n    \n    $('#main').find('#detail-screen').remove();\n    \n  });\n  \n  console.log(data);\n  \n  __.core.$detailScreen = $screen;\n  \n  if ( !$('#detail-screen').length ) $('#main').append($screen);\n  \n  \n  return detail_tpl;\n  \n}","__.mapOverlay = function (params, canvasOverlay, ctx, zoom) {\n\n\n  let scale = 2,\n    icons = __.fs.mapSprites(scale),\n    size = 20 * scale,\n    resize = size * 0.65,\n    src = `source/assets/img/map/pins@${scale}x.png`,\n    img = img = new Image();\n  \n    img.src = src;\n\n  this.default = function () {\n    return false\n  };\n\n  this.railroad = function (params, canvasOverlay, ctx, zoom) {\n\n    let railroad = params.data.railroad;\n    \n    \n    getIcons(img, function(img){\n      \n      $.each(railroad, function (i, e) {\n\n        let ico = '';\n      \n        if (zoom > 9) ico = icons.point_blue;\n        if (zoom > 11) ico = icons.railroad;\n\n        drawIcons(e, ctx, canvasOverlay, img, size, ico, resize);\n\n      });\n      \n    });\n    \n    return false\n  };\n\n  this.car = function () {\n    return false\n  };\n\n\n  this.eco = function (params, canvasOverlay, ctx, zoom) {\n\n    let eco = params.data.eco;\n    \n    getIcons(img, function(img){\n      \n      $.each(eco, function (i, e) {\n\n        let ico = null;\n\n        if (zoom > 9) {\n\n          if (e.type == 'n') ico = icons.recicle;\n          if (e.type == 'a') ico = icons.airport;\n          if (e.type == 'w') ico = icons.trash;\n          if (e.type == 'r' || e.type == 'q') ico = icons.radiation;\n          if (e.type == 'o' || e.type == 'E') ico = icons.factory;\n          if (e.type == 's') ico = icons.water;\n          if (e.type == 'p') ico = icons.energy;\n          if (e.type == 'K') ico = icons.power;\n\n        } else {\n\n          ico = icons.point_yellow;\n\n        }\n\n        drawIcons(e, ctx, canvasOverlay, img, size, ico, resize);\n\n      });\n      \n    });\n\n  }\n  \n  function getIcons(img, callback){\n    \n    if (__.core.$map.data('icons')){\n      \n      callback(__.core.$map.data('icons'));\n      \n    } else {\n    \n      img.addEventListener('load', function () {\n\n        __.core.$map.data('icons', img);\n\n        callback(img);\n\n      });\n      \n    }\n    \n    return img;\n    \n  }\n  \n  \n  function drawIcons(e, ctx, canvasOverlay, img, size, ico, resize){\n    \n    let dot = canvasOverlay._map.latLngToContainerPoint([e.point[1], e.point[0]]);\n    if (ico) ctx.drawImage(img, 0, ico, size, size, dot.x - resize / 2, dot.y - resize / 2, resize, resize);\n    return img;\n  }\n\n  return this;\n\n}","__.mapTiles = function(tileset){\n  \n  let simple = tileset.simple,\n      dark = tileset.dark,\n      $map = __.core.$map,\n      tiles = $map.data('tiles'),\n      d = 'map_dark',\n      l = 'map_light';\n  \n  \n  \n  this.default = function(){\n    \n    setTiles(simple);\n    changeClass(d,l);\n    \n  }\n  \n  this.eco = function(){\n    \n    setTiles(dark);\n    changeClass(l,d);\n  }\n  \n  this.railroad = function(){\n    \n    setTiles(dark);\n    changeClass(l,d);\n  }\n  \n  this.car = function(){\n    \n    setTiles(dark);\n    changeClass(l,d);\n  }\n  \n  function changeClass(from,to){\n    $map.removeClass(from).addClass(to);\n    return false;\n  }\n  \n  function setTiles(n){\n    if (tiles._url != n) {\n      tiles.setUrl(n);\n    }\n  }\n  \n  return this;\n  \n}","__.placeItem = function(params){\n  \n  \n  let _price = (function(price){\n      \n    let p = {\n      from : (price.from) ? (typeof global != 'undefined') ? global.component('cost', {value : price.from })[0] : __.cost({value : price.from })[0] : '',\n      to   : (price.to)   ? (typeof global != 'undefined') ? global.component('cost', {value : price.to })[0]   : __.cost({value : price.to })[0]   : ''\n    }  \n    \n    return {\n      from : (p.from) ? `от ${p.from} руб.` : '',\n      to : (p.to) ? `до ${p.to} руб.` : ''\n    }\n        \n  })(params.price);\n  \n  let _color = (typeof global != 'undefined') ? '#fafafa' : params.canvas.color;\n  \n  let _type = (params.type) ? `<span class=\"place-item__type\">${params.type}</span>` : ''; \n  \n  let _eco = (params.eco.distance < 10) ? `<div>${params.eco.closest.name} в ${params.eco.distance}км</div>` : '';\n    \n  let _car = `<div class=\"place-item__car\">до Москвы: ${params.car.time.h}ч ${params.car.time.m}мин (${params.car.distance}км)</div>`;\n  \n  let _rjd = (params.railroad.distance < 3) ? `<div class=\"place-item__train\">ст. ${params.railroad.closest.name} в ${params.railroad.distance}км,<br>до Москвы: ${params.railroad.closest.time.h}ч ${params.railroad.closest.time.m}мин (${params.railroad.closest.distance}км)</div>` : ''; \n  \n\n  \n  let tpl = \n`<div class=\"place-item\" id=\"place-${params.id}\">\n  <div class=\"place-item__title\">\n    <div class=\"place-item__pin\" style=\"background:${_color}\"></div>\n    <div>\n      ${_type}<span class=\"place-item__name\">${params.name}</span>\n    </div>\n  </div>\n  <div class=\"place-item__price\">${_price.from} ${_price.to}</div>\n  <div class=\"place-item__distance\">\n    ${_car}\n    ${_rjd}\n  </div>\n</div>`;\n    \n  if (typeof global == 'undefined') __.fs.event.bind('.place-item', 'click', function(e){\n    \n    var DATA = $('#app').data('data').places,\n        map = $('#map').data('map'),\n        id = $(e.currentTarget).attr('id').split('-')[1],\n        folder = Math.floor(id/100) * 100,\n        url = `./bin/data/places/${folder}/place_${id}/data.json`;\n    \n        $('.place-item').not(this).removeClass('place-item_active');\n    \n        \n        \n        if ( $(this).is('.place-item_active') ){\n          $(this).removeClass('place-item_active');\n          $('#detail-screen').remove();\n          \n        } else {\n          $(this).addClass('place-item_active');\n          \n          $.each(DATA, function(i,e){\n      \n            if (e.id == id){\n              map.setView(new L.LatLng(e.point[1], e.point[0]), 14);\n              return false;\n            }\n\n          });\n\n          $.get(url, function(data){\n\n            __.detailScreen(data);\n\n          });\n          \n        }\n    \n    \n    \n      \n  })\n    \n  return tpl;\n  \n}","__.placePoint = function (params) {\n\n  const s = {\n      0: {\n        s: .5\n      },\n      1: {\n        s: .5\n      },\n      2: {\n        s: .5\n      },\n      3: {\n        s: 1\n      },\n      4: {\n        s: 1\n      },\n      5: {\n        s: 2\n      },\n      6: {\n        s: 2\n      },\n      7: {\n        s: 3\n      },\n      8: {\n        s: 3\n      },\n      9: {\n        s: 3\n      },\n      10: {\n        s: 4\n      },\n      11: {\n        s: 4\n      },\n      12: {\n        s: 4\n      },\n      13: {\n        s: 6\n      },\n      14: {\n        s: 6\n      },\n      15: {\n        s: 6\n      },\n      16: {\n        s: 12\n      },\n      17: {\n        s: 12\n      },\n      18: {\n        s: 12\n      }\n    },\n    size = s[params.zoom].s * 2,\n    changeColor = $('#select-layer').val(),    \n    color = __.fs.colorize()[changeColor](params.place);\n  \n  \n  \n  params.ctx.fillStyle = color;\n  \n  if (params.zoom > 10){\n    params.ctx.lineWidth = 1;\n    params.ctx.strokeStyle = 'rgba(255, 255, 255,.5)';\n    params.ctx.stroke();\n  }\n  \n  if (params.zoom > 11){\n    params.ctx.lineWidth = 1;\n    params.ctx.strokeStyle = 'rgb(255, 255, 255)';\n    params.ctx.stroke();\n    \n  }\n\n  var dot = params.canvasOverlay._map.latLngToContainerPoint([params.place.point[1], params.place.point[0]]);\n  params.ctx.beginPath();\n  params.ctx.arc(dot.x, dot.y, size / 2, 0, Math.PI * 2);\n  params.ctx.fill();\n  params.ctx.closePath();\n\n\n  return {\n    x1: dot.x,\n    y1: dot.y,\n    x2: dot.x + size,\n    y2: dot.y + size,\n    color: color,\n    visible : params.place.canvas.visible\n  };\n\n}","__.search = function(params){\n  \n  var DATA = $('#app').data('data').places,\n      searchdata = [],\n      results = [],\n      map = $('#map').data('map'),\n      search = new __.fs.substringSearch({ multiply : false }),\n      keys = {};\n  \n  \n  if (params.text){\n    \n    searchdata = search.inArray(params.text, DATA, function(e){ return e.name; }, function(e){\n      e.canvas.visible = true;\n      \n    }, function(e){\n      e.canvas.visible = false;\n      \n    });\n    \n    map.search = (searchdata.length) ? true : false;\n    \n    \n    \n    $.each(searchdata, function(i,e){\n      \n      if (!keys[e.res.obj.id]) {\n        keys[e.res.obj.id] = true;\n        results.push(e.res.obj);\n      }\n      \n    });\n    \n    \n    $('#places').trigger('renderList', {places : results, onlyVisible: true}).scrollTop(0);\n    \n  } else {\n    \n    map.search = false;\n    \n    $.each(DATA, function(i,e){\n      e.canvas.visible = true;\n    });\n    \n    $('#places').trigger('renderList', {places : DATA, onlyVisible: false});\n    \n  }\n  \n  $('#map').data('canvas').redraw();\n  \n  return results;\n  \n}\n\n","__.select = function(params){\n  \n  \n}","__.core.$app = function(){\n  \n  $('#app').data('browser', __.fs.browserDetect()).addClass(function(){\n    let browser = $(this).data('browser')\n    return [browser.browserName, browser.platform, browser.isMobile].join(' ');\n  });\n  \n  return $('#app');\n  \n}","__.core.$header = function(){\n  \n  $('#change-view').click(function(){\n      \n      if ( $(this).text() != 'На карте' ){\n        $(this).text('На карте');\n      } else {\n        $(this).text('Списком');\n      }\n    \n      \n    $('#main').toggleClass('main_screen-2');\n    \n  });\n  \n  return $('#header'); \n  \n};","__.core.$map = function(){\n  \n    \n    $('#map').click(function (e) {\n\n    var DATA = $('#app').data('data').places,\n        x = e.offsetX,\n        y = e.offsetY;\n  \n\n    $.each(DATA, function (i, el) {\n\n      if (x > el.canvas.x1 &&\n        x < el.canvas.x2 &&\n        y > el.canvas.y1 &&\n        y < el.canvas.y2) {\n        \n        let link = `${location.origin}/control-center.html#${el.id}`  \n        \n        console.log('id: '+ el.id, link);\n      }\n\n    });\n\n  }).bind('createMap', function(event){\n    \n    var t = {\n      simple : 'https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}.png',\n      dark : 'https://{s}.tiles.mapbox.com/v4/mapbox.dark/{z}/{x}/{y}@2x.png?access_token=pk.eyJ1IjoiZ2xlYWZsZXQiLCJhIjoiY2lxdWxoODl0MDA0M2h4bTNlZ2I1Z3gycyJ9.vrEWCC2nwsGfAYKZ7c4HZA'\n    }  \n      \n    var id = $(event.target).attr('id');\n    \n    var leafletMap = L.map(id).setView([55.751244, 37.618423], 9);\n    var tiles = L.tileLayer(t.dark)\n      .addTo(leafletMap);\n    \n    $(event.target).data('map', leafletMap);\n    $(event.target).data('tiles', tiles);\n    $(event.target).data('tileset', t);  \n        \n      \n    $('.leaflet-bar').find('a').each(function(i,e){\n      $(e).click(function(event){\n        event.preventDefault();\n        $('#app').scrollTop(0);\n      });\n    });\n      \n    \n  }).bind('renderMap', function (event, params) {\n\n    var _this = this,\n        places = params.data.places,\n        map = $(event.target).data('map');\n    \n\n    var c = L.canvasOverlay().drawing(drawingOnCanvas).addTo(map);\n    \n    $(_this).data('canvas', c);\n\n    function drawingOnCanvas(canvasOverlay, p) {\n      var ctx = p.canvas.getContext('2d'),\n          zoom = $(_this).data('map').getZoom();\n      \n      \n          \n          \n      \n      ctx.clearRect(0, 0, p.canvas.width, p.canvas.height);\n\n      \n      $.each(places, function (i, e) {\n\n        if (e.canvas.visible) e.canvas = __.placePoint({\n          ctx: ctx,\n          canvasOverlay: canvasOverlay,\n          zoom: zoom,\n          place: e\n        });\n\n      });\n      \n      let changeOverlay = $('#select-layer').val();\n      let tileset = $('#map').data('tileset');\n      \n      __.mapOverlay()[changeOverlay]( params, canvasOverlay, ctx, zoom );\n      __.mapTiles(tileset)[changeOverlay]();\n      \n\n    };\n\n  });\n  \n  \n  \n  \n  \n  return $('#map');\n  \n  }\n  \n","__.core.$mapControls = function () {\n\n  $('#map-controls').bind('create', function (event) {\n\n    let layers = {\n        default: {\n          title: 'Карта'\n        },\n        eco: {\n          title: 'Экология',\n          selected: true\n        },\n        railroad: {\n          title: 'Электрички'\n        },\n        car: {\n          title: 'Автомобиль'\n        }\n      },\n      l = '';\n    \n\n    $.each(layers, function (i, e) {\n      let selected = (e.selected) ? 'selected' : ''\n      l += `<option ${selected} value=\"${i}\">${e.title}</option>`;\n    });\n\n\n    let $selectLayer = $(`<select data-ico=\"eco\" id=\"select-layer\" class=\"select\">${l}</select>`).data('options', layers).change(function (e) {\n\n      var options = $(this).data('options'),\n        val = $(this).val();\n      \n      $(this).attr('data-ico',val);\n\n      $.each(options, function (i, e) {\n        e.selected = (val == i) ? true : false;\n      });\n\n\n      $('#map').data('canvas').redraw();\n\n    });\n\n    $(this).find('.layers-controls').append($selectLayer);\n\n\n\n\n\n  }).trigger('create');    \n\n}","__.core.placeScreen = function () {\n  \n  \n  \n}","__.core.$placeSearch = function(){\n  \n    $('#place-search').bind('search', function(event, params){\n    \n    var _this = this;\n    \n    __.search({\n      text: $(this).find('input').val()\n    });\n    \n  }).keyup(function(e){\n    \n    var code = e.which;\n    if(code==13)e.preventDefault();\n    if(code==32||code==13||code==188||code==186){\n     \n      $(this).trigger('search');\n      \n    }\n    \n  }).find('button').click(function(e){\n    \n    $(this).trigger('search');\n   \n  });\n  \n  return $('#place-search');\n  \n}","__.core.$places = function(){\n  \n  \n    $('#places').scroll(function (e) {\n    var _this = this,\n        $last = $(_this).find('.place-item').last(),\n        lastId = $last.attr('id').split('-')[1],\n        length = $(_this).find('.place-item').length,\n        map = $('#map').data('map');\n\n    if (!map.search && $last.offset().top < $(window).outerHeight() * 2) {\n\n      var DATA = $('#app').data('data').places,\n          count = 100;\n      \n      $.each(DATA, function (i, e) {\n        if (length < i) {\n          $(_this).append(__.placeItem(e));\n          count--;\n        }\n        if (!count) return false;\n      });\n    }\n\n  }).bind('renderList', function (event, params) {\n\n    var _this = this,\n        onlyVisible = params.onlyVisible || false,\n        places = params.places;\n\n    $(_this).empty();\n\n    $.each(places, function (i, e) {\n\n      if (onlyVisible) {\n\n        if (e.canvas.visible) {\n          $(_this).append(__.placeItem(e));\n        }\n\n      } else {\n\n        if (i < 100) {\n          $(_this).append(__.placeItem(e));\n        } else {\n          return false;\n        }\n      }\n\n    });\n\n  });\n  \n  return $('#places');\n  \n}","__.core.$window = function() {\n  \n  \n  let headerHeight = $('#header').outerHeight(),\n      windowHeight = $(window).outerHeight();\n  \n  resize();\n  \n  $(window).resize(function(e){\n    \n    resize();\n    \n  });\n  \n  function resize(){\n    $('#main').css({\n      height : `calc(100vh - ${headerHeight}px)`\n    });\n    \n  }\n  \n  return $(window);\n  \n}","__.fs.browserDetect = function () {\n\n\tvar nVer = navigator.appVersion;\n\tvar nAgt = navigator.userAgent;\n\tvar browserName = navigator.appName;\n\tvar fullVersion = '' + parseFloat(navigator.appVersion);\n\tvar majorVersion = parseInt(navigator.appVersion, 10);\n\tvar nameOffset, verOffset, ix;\n\n\tif ((verOffset = nAgt.indexOf(\"Opera\")) != -1) {\n\t\tbrowserName = \"opera\";\n\t\tfullVersion = nAgt.substring(verOffset + 6);\n\t\tif ((verOffset = nAgt.indexOf(\"Version\")) != -1)\n\t\t\tfullVersion = nAgt.substring(verOffset + 8);\n    \n\t} else if ((verOffset = nAgt.indexOf(\"MSIE\")) != -1) {\n\t\tbrowserName = \"ie\";\n\t\tfullVersion = nAgt.substring(verOffset + 5);\n    \n\t} else if ((verOffset = nAgt.indexOf(\"Chrome\")) != -1) {\n\t\tbrowserName = \"chrome\";\n\t\tfullVersion = nAgt.substring(verOffset + 7);\n    \n\t} else if ((verOffset = nAgt.indexOf(\"Safari\")) != -1) {\n\t\tbrowserName = \"safari\";\n\t\tfullVersion = nAgt.substring(verOffset + 7);\n\t\tif ((verOffset = nAgt.indexOf(\"Version\")) != -1)\n\t\t\tfullVersion = nAgt.substring(verOffset + 8);\n    \n\t} else if ((verOffset = nAgt.indexOf(\"Firefox\")) != -1) {\n\t\tbrowserName = \"firefox\";\n\t\tfullVersion = nAgt.substring(verOffset + 8);\n    \n\t} else if (nAgt.indexOf(\"FBAN\") != -1 && nAgt.indexOf(\"FBAV\") != -1 ) {\n\t\tbrowserName = \"facebook\";\n\t\tfullVersion = 0;\n    \n\t} else if ((nameOffset = nAgt.lastIndexOf(' ') + 1) <\n\t\t(verOffset = nAgt.lastIndexOf('/'))) {\n\t\tbrowserName = nAgt.substring(nameOffset, verOffset);\n\t\tfullVersion = nAgt.substring(verOffset + 1);\n\t\tif (browserName.toLowerCase() == browserName.toUpperCase()) {\n\t\t\tbrowserName = navigator.appName;\n\t\t}\n\t}\n\n\tif ((ix = fullVersion.indexOf(\";\")) != -1)\n\t\tfullVersion = fullVersion.substring(0, ix);\n\tif ((ix = fullVersion.indexOf(\" \")) != -1)\n\t\tfullVersion = fullVersion.substring(0, ix);\n\n\tmajorVersion = parseInt('' + fullVersion, 10);\n\tif (isNaN(majorVersion)) {\n\t\tfullVersion = '' + parseFloat(navigator.appVersion);\n\t\tmajorVersion = parseInt(navigator.appVersion, 10);\n\t}\n\n  var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n  var ratio = window.devicePixelRatio || 1;\n  var screen = {\n    width : window.screen.width * ratio,\n    height : window.screen.height * ratio\n  };\n  \n\treturn {\n\t\tbrowserName: browserName.toLowerCase(),\n\t\tfullVersion: fullVersion,\n\t\tmajorVersion: majorVersion,\n\t\tappName: navigator.appName.toLowerCase(),\n\t\tuserAgent: navigator.userAgent.toLowerCase(),\n\t\tplatform: navigator.platform.toLowerCase(),\n    iphoneX: (iOS && screen.width == 1125 && screen.height === 2436) ? 'iphoneX' : '',\n\t\tisMobile: (function () {\n\t\t\tvar check = 'not-mobile';\n\t\t\t(function (a) {\n\t\t\t\tif (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = 'mobile';\n\t\t\t})(navigator.userAgent || navigator.vendor || window.opera);\n\t\t\treturn check;\n\t\t})()\n\t}\n  \n};\n\n","__.fs.colorize = function(params){\n   \n  //default\n  this.default = function() {\n    \n    return rgba(0,98,255,.5);\n    \n  }\n  \n  //ecology\n  this.eco = function(params) {\n    \n    var r = 10;\n    switch (params.eco.closest.type) {\n      case 'K':\n        r = 3;\n        break;\n      case 'p':\n        r = 3;\n        break;\n      case 'n':\n        r = 5;\n        break;\n    }\n\n    var distance = params.eco.distance;\n    var alphaMax = 0.6;\n    var alpha = (distance < r) ? alphaMax - interpolation(0, r, distance, 0, alphaMax) : 0;\n\n    var color = blendColors(\n    [0, 98, 255, .3],\n    [255, 30, 0, alpha]\n    );\n\n    return rgba(color[0],color[1],color[2],color[3]);\n\n  }\n  \n  //railroad\n  this.railroad = function(params) {\n    \n    var distance = params.railroad.distance;\n    var alphaMax = 1;\n    var alpha = (distance < 3) ? alphaMax - interpolation(0, 3, distance, 0, alphaMax) : 0;\n\n    var color = blendColors(\n    [226, 30, 220, .1],\n    [0, 98, 255, alpha]\n    );\n\n    return rgba(color[0],color[1],color[2],color[3]);\n    \n  }\n  \n  //car distance\n  this.car = function(params) {\n    \n    var time = __.fs.time.toInt(params.car.time.h,params.car.time.m);\n    var color;\n\n    if (time <= 30) color = rgba(0, 177, 255, 0.3);\n    if (time > 30) color = rgba(29, 0, 255, 0.3);\n    if (time > 50) color = rgba(118, 0, 255, 0.3);\n    if (time > 70) color = rgba(226, 0, 255, 0.3);\n    if (time > 100) color = rgba(255, 0, 128, 0.3);\n    if (time > 150) color = rgba(255, 0, 0, 0.3);\n\n    return color;\n    \n  }\n  \n  function rgba(r,g,b,a){\n    return `rgba(${r},${g},${b},${a})`;\n  }\n  \n  function interpolation(minFrom, maxFrom, current, minTo, maxTo) {\n    return minTo + ((current - minFrom) / (maxFrom - minFrom)) * ((maxTo - minTo) / 1);\n  }\n\n  function blendColors(base, added) {\n\n    var mix = [];\n    mix[3] = 1 - (1 - added[3]) * (1 - base[3]); // alpha\n    mix[0] = Math.round((added[0] * added[3] / mix[3]) + (base[0] * base[3] * (1 - added[3]) / mix[3])); // red\n    mix[1] = Math.round((added[1] * added[3] / mix[3]) + (base[1] * base[3] * (1 - added[3]) / mix[3])); // green\n    mix[2] = Math.round((added[2] * added[3] / mix[3]) + (base[2] * base[3] * (1 - added[3]) / mix[3])); // blue\n\n    return mix;\n  }\n  \n  return this;\n  \n}","__.fs.coreModuls = function(moduls){\n  \n  var core = {};\n  \n  $.each(moduls,function(i,e){\n        \n    core[e] = __.core[e]();\n    \n  });\n  \n  return core;\n  \n}","__.fs.decodeData = function (data) {\n  var places = [];\n  var eco = {};\n  var rail = {};\n\n  $.each(data.p, function (i, e) {\n\n    var p = {\n      id: e[7],\n      point: [e[15], e[0]],\n      price: {\n        from: (e[13] > -1) ? e[13] : null,\n        to: (e[14] > -1) ? e[14] : null\n      },\n      name: data.n[e[17]],\n      readyDate: (e[6]) ? e[6] : null,\n      type: (e[16] > -1) ? data.t[e[16]] : null,\n      class: (e[18] > -1) ? data.k[e[18]] : null,\n      car: {\n        distance: e[1],\n        time: {\n          h: e[2],\n          m: e[3]\n        }\n      },\n      moscow: {\n        distance: e[8]\n      },\n      railroad: {\n        distance: e[4],\n        closest: (function (railroad, stationId) {\n          var obj = {},\n              m_obj = {}\n          $.each(railroad, function (i, s) {\n            \n            obj = {\n                id: s[0],\n                name: s[2],\n                point: [s[1], s[3]],\n                distance: s[4],\n                time: {\n                  h: s[5],\n                  m: s[6]\n                }\n            }\n            \n            rail[obj.id] = obj;\n            \n            if (stationId == s[0]) {\n              m_obj = obj;\n            }\n          });\n          \n          return m_obj;\n        })(data.r, e[5])\n      },\n      city: {\n        distance: e[11],\n        closest: (function (cities, cityId) {\n          var obj = {}\n          $.each(cities, function (i, c) {\n            if (cityId == c[0]) {\n              obj = {\n                id: c[0],\n                name: c[2],\n                point: [c[1], c[3]]\n              }\n            }\n          });\n          return obj;\n        })(data.c, e[12])\n      },\n      eco: {\n        distance: e[9],\n        closest: (function (ecos, ecoId) {\n          var obj = {},\n              m_obj = {};\n          \n          $.each(ecos, function (i, ec) {\n            obj = {\n              id: ec[0],\n              name: ec[2],\n              point: [ec[1], ec[3]],\n              type: ec[4]\n            }\n              \n            eco[obj.id] = obj;\n            \n            if (ecoId == ec[0]) {\n              m_obj = obj;\n            }\n          });\n          return m_obj;\n        })(data.e, e[10])\n      },\n      canvas : {\n        visible : true\n      }\n    }\n\n    places.push(p);\n\n\n  });\n  \n  \n  \n  return {\n    places : places,\n    eco : eco,\n    railroad : rail\n  };\n\n\n}","__.fs.substringSearch = function(options) {\n\n  options = options || {}\n  \n  options.weight   = options.weight || 100;\n  options.multiply = options.multiply || true;\n\n  let _this = this,\n    results = [],\n    proto = {\n      weight: 0,\n      search: '',\n      res:    '',\n      in:     -1,\n      out:    -1,\n      length: 0\n    };\n\n  /*\n    search in the string\n  */\n  this.inString = function (substr, str) {\n\n    substr = '' + substr;\n\n    let wordsSearch = (substr.length) ? substr.trim().split(' ') : [''],\n      words = (str.length) ? str.trim().split(' ') : [''],\n      wsl = wordsSearch.length,\n      sl = substr.length, \n      wl = words.length, \n      _res = {\n        str: str\n      },\n      result = [];\n\n    if (sl) {\n      \n\n      if (substr.indexOf(' ') + 1) {\n\n        let fullMatch = search(substr, _res);\n\n        if (fullMatch.weight) fullMatch.weight = fullMatch.weight * wl;\n\n        result = fullMatch;\n\n      }\n\n      for (var i = wsl; i--;) {\n\n        result = result.concat(search(wordsSearch[i], _res));\n\n      }\n\n      result = result.sort(compare);\n\n    } else {\n\n      let tempItem = copyObject(proto);\n      tempItem.search = substr;\n      tempItem.res = _res;\n\n      result.push(tempItem);\n\n    }\n\n    return result;\n\n  }\n  \n  /*\n    search in the string\n  */\n  this.inArray = function (substr, arr, getKey, isFind, isNotFind) {\n\n    substr = '' + substr;\n\n    let result = [],\n        al = arr.length;\n\n    for (var i = al; i--;) {\n\n      let str = getKey(arr[i]),\n        _res = {\n          obj: arr[i],\n          str: str,\n          index: i\n        },\n        _result = _this.inString(substr, str),\n        rl = _result.length;\n\n      if (rl) {\n        for (var r = rl; r--;) {\n        \n          if (isFind) isFind(arr[i]);\n          \n          if (_result[r]) _result[r].res = _res;\n\n        }\n        \n        result = result.concat(_result);\n        \n      } else {\n        \n        if (isNotFind) isNotFind(arr[i]);\n        \n      }\n\n    \n\n    }\n\n    result = result.sort(compare);\n\n    return result;\n\n  }\n\n  function search(substr, _res) {\n\n    let search = substr.toLowerCase().trim(),\n      str = ''+_res.str,\n      normalStr = str.toLowerCase(),\n      pos = normalStr.indexOf(search),\n      w = options.weight,\n      nl = normalStr.length,\n      sl = search.length,  \n      length = substr.length * (w / 10),\n      result = [];\n        \n\n    while (true) {\n\n      let tempItem = copyObject(proto);\n      tempItem.search = substr;\n      tempItem.res = _res;\n\n      let foundPos = normalStr.indexOf(search, pos);\n\n      if (foundPos == -1) break;\n\n      if (nl >= sl && normalStr.indexOf(search, pos) + 1) {\n\n        tempItem.weight += (nl / sl * 100 > 50) ? w + length : nl / sl * w + length;\n        tempItem.weight = nl - foundPos;\n        tempItem.in = foundPos;\n        tempItem.out = tempItem.in + search.length;\n        tempItem.length = sl;\n\n        if (nl === sl) tempItem.weight += w * 2;\n\n        if (normalStr[0] === search[0]) tempItem.weight += w;\n\n      }\n\n      result.push(tempItem);\n\n      pos = foundPos + 1;\n\n    }\n    \n    if (!options.multiply){\n      result = result.sort(compare);\n      result = [result[0]];\n    }\n\n    return result;\n  }\n\n  function compare(a, b) {\n\n    a = a.weight;\n    b = b.weight;\n\n    let comparison = 0;\n\n    if (a < b) {\n      comparison = 1;\n    } else if (a > b) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  function copyObject(src) {\n    return Object.assign({}, src);\n  }\n\n  return this;\n\n};","__.fs.mapSprites = function (scale) {\n\n  return {\n    recicle: 1,\n    radiation: 20 * scale,\n    factory: 40 * scale,\n    trash: 60 * scale,\n    airport: 80 * scale,\n    energy: 100 * scale,\n    water: 120 * scale,\n    point_yellow: 140 * scale,\n    power: 160 * scale,\n    point_blue: 180 * scale,\n    point_green: 200 * scale,\n    railroad: 220 * scale\n  }\n}","__.fs.event = {\n  bind: function (elem, eventName, event) {\n    \n    var listners = __.core.$app.data('listners') || {};\n    if (!listners[elem + '|' + eventName]) {\n      listners[elem + '|' + eventName] = {\n        name: elem,\n        event: eventName\n      }\n      \n      __.core.$app.data('listners', listners);\n\n      $(document).on(eventName, elem, event);\n    }\n  },\n  unbind: function (elem, eventName) {\n    var listners = __.core.$app.data('listners') || {};\n    delete listners[elem + '|' + eventName];\n    \n    __.core.$app.data('listners', listners);\n    $(document).off(eventName, elem);\n  }\n}","__.fs.time = {\n  toInt: function (h, m) {\n\n    m = (m < 10) ? '0' + m : '' + m;\n    h = '' + h;\n\n    return +(h + m);\n\n  }\n}"],"sourceRoot":"/source/"}