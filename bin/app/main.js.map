{"version":3,"sources":["bind-event.js","decode-data.js","canvas.js","main.js","components/place-item/place-item.js","components/search/search.js","components/cost/cost.js","components/place-point/colorize.js","components/place-point/place-point.js"],"names":["__","listners","bindEvent","elem","eventName","event","window","name","$","document","on","unbindEvent","off","decodeData","data","places","each","p","i","e","ecos","ecoId","obj","cities","cityId","railroad","stationId","id","point","price","from","to","n","readyDate","type","t","class","k","car","distance","time","h","m","moscow","closest","r","s","city","c","eco","ec","canvas","visible","push","L","CanvasOverlay","Class","extend","initialize","userDrawFunc","options","this","_userDrawFunc","setOptions","drawing","params","_canvas","redraw","_frame","Util","requestAnimFrame","_redraw","onAdd","map","_map","DomUtil","create","size","getSize","width","x","height","y","animated","zoomAnimation","Browser","any3d","addClass","_panes","overlayPane","appendChild","_reset","_resize","_animateZoom","onRemove","getPanes","removeChild","this_canvas","addTo","addLayer","resizeEvent","newSize","topLeft","containerPointToLayerPoint","setPosition","bounds","getBounds","zoomScale","getEast","getWest","zoom","getZoom","scale","getZoomScale","offset","_getCenterOffset","center","_multiplyBy","subtract","_getMapPanePos","style","TRANSFORM","getTranslateString","canvasOverlay","leafletMap","setView","tileLayer","get","trigger","onlyVisible","click","offsetX","offsetY","DATA","el","x1","x2","y1","y2","ctx","getContext","clearRect","placePoint","place","scroll","length","$last","attr","split","_this","find","search","top","outerHeight","count","bind","empty","append","placeItem","_price","global","component","value","cost","concat","_color","color","_type","_car","_rjd","tpl","currentTarget","LatLng","request","text","toLowerCase","trim","results","indexOf","scrollTop","test","replace","colorize","rgba","g","b","a","interpolation","minFrom","maxFrom","current","minTo","maxTo","blendColors","base","added","mix","Math","round","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","fillStyle","dot","latLngToContainerPoint","beginPath","arc","PI","fill","closePath"],"mappings":"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","file":"main.js","sourcesContent":["function bindEvent(elem, eventName, event){\n  if (!window.listners[elem + '|' + eventName]){\n    window.listners[elem + '|' + eventName] = {\n      name : elem,\n      event : eventName\n    }\n    $(document).on(eventName,elem,event);\n  }\n}\n\nfunction unbindEvent(elem, eventName){\n  delete window.listners[elem + '|' + eventName];\n  $(document).off(eventName, elem);\n}","function decodeData(data) {\n  var places = [];\n\n\n  $.each(data.p, function (i, e) {\n\n    var p = {\n      id: e[7],\n      point: [e[15], e[0]],\n      price: {\n        from: (e[13] > -1) ? e[13] : null,\n        to: (e[14] > -1) ? e[14] : null\n      },\n      name: data.n[e[17]],\n      readyDate: (e[6]) ? e[6] : null,\n      type: (e[16] > -1) ? data.t[e[16]] : null,\n      class: (e[18] > -1) ? data.k[e[18]] : null,\n      car: {\n        distance: e[1],\n        time: {\n          h: e[2],\n          m: e[3]\n        }\n      },\n      moscow: {\n        distance: e[8]\n      },\n      railroad: {\n        distance: e[4],\n        closest: (function (railroad, stationId) {\n          var obj = {}\n          $.each(railroad, function (i, s) {\n            if (stationId == s[0]) {\n              obj = {\n                id: s[0],\n                name: s[2],\n                point: [s[1], s[3]],\n                distance: s[4],\n                time: {\n                  h: s[5],\n                  m: s[6]\n                }\n              }\n            }\n          });\n          return obj;\n        })(data.r, e[5])\n      },\n      city: {\n        distance: e[11],\n        closest: (function (cities, cityId) {\n          var obj = {}\n          $.each(cities, function (i, c) {\n            if (cityId == c[0]) {\n              obj = {\n                id: c[0],\n                name: c[2],\n                point: [c[1], c[3]]\n              }\n            }\n          });\n          return obj;\n        })(data.c, e[12])\n      },\n      eco: {\n        distance: e[9],\n        closest: (function (ecos, ecoId) {\n          var obj = {}\n          $.each(ecos, function (i, ec) {\n            if (ecoId == ec[0]) {\n              obj = {\n                id: ec[0],\n                name: ec[2],\n                point: [ec[1], ec[3]],\n                type: ec[4]\n              }\n            }\n          });\n          return obj;\n        })(data.e, e[10])\n      },\n      canvas : {\n        visible : true\n      }\n    }\n\n    places.push(p);\n\n\n  });\n\n  return places;\n\n\n}","/*\n UPDATE July 2016 , moved and updated to here: https://github.com/Sumbera/gLayers.Leaflet\n \n Generic  Canvas Overlay for leaflet, \n Stanislav Sumbera, April , 2014\n\n - added userDrawFunc that is called when Canvas need to be redrawn\n - added few useful params fro userDrawFunc callback\n  - fixed resize map bug\n  inspired & portions taken from  :   https://github.com/Leaflet/Leaflet.heat\n  \n  License: MIT\n\n*/\n\n\nL.CanvasOverlay = L.Class.extend({\n\n    initialize: function (userDrawFunc, options) {\n        this._userDrawFunc = userDrawFunc;\n        L.setOptions(this, options);\n    },\n\n    drawing: function (userDrawFunc) {\n        this._userDrawFunc = userDrawFunc;\n        return this;\n    },\n\n    params:function(options){\n        L.setOptions(this, options);\n        return this;\n    },\n    \n    canvas: function () {\n        return this._canvas;\n    },\n\n    redraw: function () {\n        if (!this._frame) {\n            this._frame = L.Util.requestAnimFrame(this._redraw, this);\n        }\n        return this;\n    },\n\n    \n  \n    onAdd: function (map) {\n        this._map = map;\n        this._canvas = L.DomUtil.create('canvas', 'leaflet-heatmap-layer');\n\n        var size = this._map.getSize();\n        this._canvas.width = size.x;\n        this._canvas.height = size.y;\n\n        var animated = this._map.options.zoomAnimation && L.Browser.any3d;\n        L.DomUtil.addClass(this._canvas, 'leaflet-zoom-' + (animated ? 'animated' : 'hide'));\n\n\n        map._panes.overlayPane.appendChild(this._canvas);\n\n        map.on('moveend', this._reset, this);\n        map.on('resize',  this._resize, this);\n\n        if (map.options.zoomAnimation && L.Browser.any3d) {\n            map.on('zoomanim', this._animateZoom, this);\n        }\n\n        this._reset();\n    },\n\n    onRemove: function (map) {\n        map.getPanes().overlayPane.removeChild(this._canvas);\n \n        map.off('moveend', this._reset, this);\n        map.off('resize', this._resize, this);\n\n        if (map.options.zoomAnimation) {\n            map.off('zoomanim', this._animateZoom, this);\n        }\n        this_canvas = null;\n\n    },\n\n    addTo: function (map) {\n        map.addLayer(this);\n        return this;\n    },\n\n    _resize: function (resizeEvent) {\n        this._canvas.width  = resizeEvent.newSize.x;\n        this._canvas.height = resizeEvent.newSize.y;\n    },\n    _reset: function () {\n        var topLeft = this._map.containerPointToLayerPoint([0, 0]);\n        L.DomUtil.setPosition(this._canvas, topLeft);\n        this._redraw();\n    },\n\n    _redraw: function () {\n        var size     = this._map.getSize();\n        var bounds   = this._map.getBounds();\n        var zoomScale = (size.x * 180) / (20037508.34  * (bounds.getEast() - bounds.getWest())); // resolution = 1/zoomScale\n        var zoom = this._map.getZoom();\n     \n        // console.time('process');\n\n        if (this._userDrawFunc) {\n            this._userDrawFunc(this,\n                                {\n                                    canvas   :this._canvas,\n                                    bounds   : bounds,\n                                    size     : size,\n                                    zoomScale: zoomScale,\n                                    zoom : zoom,\n                                    options: this.options\n                               });\n        }\n       \n       \n        // console.timeEnd('process');\n        \n        this._frame = null;\n    },\n\n    _animateZoom: function (e) {\n        var scale = this._map.getZoomScale(e.zoom),\n            offset = this._map._getCenterOffset(e.center)._multiplyBy(-scale).subtract(this._map._getMapPanePos());\n\n        this._canvas.style[L.DomUtil.TRANSFORM] = L.DomUtil.getTranslateString(offset) + ' scale(' + scale + ')';\n\n    }\n});\n\nL.canvasOverlay = function (userDrawFunc, options) {\n    return new L.CanvasOverlay(userDrawFunc, options);\n};\n","$(function () {\n\n  var leafletMap = L.map('map').setView([55.751244, 37.618423], 9);\n  //L.tileLayer(\"https://{s}.basemaps.cartocdn.com/rastertiles/voyager_labels_under/{z}/{x}/{y}.png\")\n  L.tileLayer(\"https://{s}.tiles.mapbox.com/v4/mapbox.dark/{z}/{x}/{y}@2x.png?access_token=pk.eyJ1IjoiZ2xlYWZsZXQiLCJhIjoiY2lxdWxoODl0MDA0M2h4bTNlZ2I1Z3gycyJ9.vrEWCC2nwsGfAYKZ7c4HZA\")\n    .addTo(leafletMap);\n\n  window.map = leafletMap;\n\n  $.get('bin/data/data.json', function (places) {\n    window.DATA = places = decodeData(places);\n\n    $('#map').trigger('renderMap', {\n      places: places\n    });\n\n    $('#places').trigger('renderList', {\n      places: places,\n      onlyVisible: false\n    });\n\n  });\n\n  $('#map').click(function (e) {\n\n    var x = e.offsetX,\n        y = e.offsetY;\n\n    $.each(DATA, function (i, el) {\n\n      if (x > el.canvas.x1 &&\n        x < el.canvas.x2 &&\n        y > el.canvas.y1 &&\n        y < el.canvas.y2) {\n        console.log(y, el);\n      }\n\n    });\n\n  }).bind('renderMap', function (event, params) {\n\n    var places = params.places;\n\n    var c = L.canvasOverlay().drawing(drawingOnCanvas).addTo(leafletMap);\n    \n    $('#map').data('canvas', c);\n\n    function drawingOnCanvas(canvasOverlay, p) {\n      var ctx = p.canvas.getContext('2d'),\n          zoom = window.map.getZoom();\n      \n      ctx.clearRect(0, 0, p.canvas.width, p.canvas.height);\n\n      $.each(places, function (i, e) {\n\n        if (e.canvas.visible) e.canvas = __.placePoint({\n          ctx: ctx,\n          canvasOverlay: canvasOverlay,\n          zoom: zoom,\n          place: e\n        });\n\n      });\n\n    };\n\n  });\n\n\n  $('#places').scroll(function (e) {\n    var _this = this,\n        $last = $(_this).find('.place-item').last(),\n        lastId = $last.attr('id').split('-')[1],\n        length = $(_this).find('.place-item').length;\n\n    if (!window.map.search && $last.offset().top < $(window).outerHeight() * 2) {\n\n      var count = 100;\n      $.each(DATA, function (i, e) {\n        if (length < i) {\n          $(_this).append(__.placeItem(e));\n          count--;\n        }\n        if (!count) return false;\n      });\n    }\n\n  }).bind('renderList', function (event, params) {\n\n    var _this = this,\n        onlyVisible = params.onlyVisible || false,\n        places = params.places;\n\n    $(_this).empty();\n\n    $.each(places, function (i, e) {\n\n      if (onlyVisible) {\n\n        if (e.canvas.visible) {\n          $(_this).append(__.placeItem(e));\n        }\n\n      } else {\n\n        if (i < 100) {\n          $(_this).append(__.placeItem(e));\n        } else {\n          return false;\n        }\n      }\n\n    });\n\n  });\n\n});","__.placeItem = function(params){\n  \n  \n  let _price = (function(price){\n      \n    let p = {\n      from : (price.from) ? (typeof global != 'undefined') ? global.component('cost', {value : price.from })[0] : __.cost({value : price.from })[0] : '',\n      to   : (price.to)   ? (typeof global != 'undefined') ? global.component('cost', {value : price.to })[0]   : __.cost({value : price.to })[0]   : ''\n    }  \n    \n    return {\n      from : (p.from) ? `от ${p.from} руб.` : '',\n      to : (p.to) ? `до ${p.to} руб.` : ''\n    }\n        \n  })(params.price);\n  \n  let _color = (typeof global != 'undefined') ? '#fafafa' : params.canvas.color;\n  \n  let _type = (params.type) ? `<span class=\"place-item__type\">${params.type}</span>` : ''; \n  \n  let _eco = (params.eco.distance < 10) ? `<div>${params.eco.closest.name} в ${params.eco.distance}км</div>` : '';\n    \n  let _car = `<div class=\"place-item__car\">до Москвы: ${params.car.time.h}ч ${params.car.time.m}мин (${params.car.distance}км)</div>`;\n  \n  let _rjd = (params.railroad.distance < 3) ? `<div class=\"place-item__train\">ст. ${params.railroad.closest.name} в ${params.railroad.distance}км,<br>до Москвы: ${params.railroad.closest.time.h}ч ${params.railroad.closest.time.m}мин (${params.railroad.closest.distance}км)</div>` : ''; \n  \n\n  \n  let tpl = \n`<div class=\"place-item\" id=\"place-${params.id}\">\n  <div class=\"place-item__title\">\n    <div class=\"place-item__pin\" style=\"background:${_color}\"></div>\n    <div>\n      ${_type}<span class=\"place-item__name\">${params.name}</span>\n    </div>\n  </div>\n  <div class=\"place-item__price\">${_price.from} ${_price.to}</div>\n  <div class=\"place-item__distance\">\n    ${_car}\n    ${_rjd}\n  </div>\n</div>`;\n    \n  bindEvent('.place-item', 'click', function(e){\n    \n    var id = $(e.currentTarget).attr('id').split('-')[1];\n    \n    $.each(DATA, function(i,e){\n      \n      if (e.id == id){\n        map.setView(new L.LatLng(e.point[1], e.point[0]), 14);\n        return false;\n      }\n      \n    });\n    \n    \n      \n  })\n    \n  return tpl;\n  \n}","__.search = function(params){\n  \n  var request = params.text.toLowerCase().trim();\n  var results = [];\n  if (params.text){\n    $.each(DATA, function(i,e){\n\n      var name = e.name.toLowerCase().trim();\n\n      if (name.indexOf(request) !== -1){\n\n        e.canvas.visible = true;\n        results.push(e);\n      } else {\n\n        e.canvas.visible = false;\n\n      }\n\n    });\n\n    if (results.length) {\n      window.map.search = true;\n    } else {\n      window.map.search = false;  \n    }\n    \n     $('#places').trigger('renderList', {places : DATA, onlyVisible: true}).scrollTop(0);\n    \n  } else {\n    \n    window.map.search = false;\n    $.each(DATA, function(i,e){\n      e.canvas.visible = true;\n    });\n    \n    $('#places').trigger('renderList', {places : DATA, onlyVisible: false});\n    \n    \n    \n  }\n  \n  \n  $('#map').data('canvas').redraw();\n  \n  return results;\n  \n}","__.cost = function(params) {\n  \n    var value = params.value;\n    value = (/\\.\\d/.test(value)) ? value + '' : value + '.00';\n    value = (/\\.\\d{2}/.test(value)) ? value : value + '0';\n    value = (value).replace(/\\d(?=(\\d{3})+\\.)/g, '$& ');\n\n    return value.split('.');\n  \n}","__.colorize = function(params){\n   \n  //ecology\n  this.eco = function(params) {\n    \n    var r = 10;\n    switch (params.eco.closest.type) {\n      case 'K':\n        r = 3;\n        break;\n      case 'p':\n        r = 3;\n        break;\n      case 'n':\n        r = 5;\n        break;\n    }\n\n    var distance = params.eco.distance;\n    var alphaMax = 0.6;\n    var alpha = (distance < r) ? alphaMax - interpolation(0, r, distance, 0, alphaMax) : 0;\n\n    var color = blendColors(\n    [0, 98, 255, .3],\n    [255, 30, 0, alpha]\n    );\n\n    return rgba(color[0],color[1],color[2],color[3]);\n\n  }\n  \n  //railroad\n  this.railroad = function(params) {\n    \n    var distance = params.railroad.distance;\n    var alphaMax = 1;\n    var alpha = (distance < 3) ? alphaMax - interpolation(0, 3, distance, 0, alphaMax) : 0;\n\n    var color = blendColors(\n    [255, 30, 0, .1],\n    [0, 98, 255, alpha]\n    );\n\n    return rgba(color[0],color[1],color[2],color[3]);\n    \n  }\n  \n  //car distance\n  this.car = function(params) {\n    \n    var distance = params.car.distance;\n    var alphaMax = 0.3;\n    var alpha = alphaMax - interpolation(10, 200, distance, 0, alphaMax);\n\n    var color = blendColors(\n    [255, 30, 0, .1],\n    [0, 98, 255, alpha]\n    );\n\n    return rgba(color[0],color[1],color[2],color[3]);\n    \n  }\n  \n  function rgba(r,g,b,a){\n    return `rgba(${r},${g},${b},${a})`;\n  }\n  \n  function interpolation(minFrom, maxFrom, current, minTo, maxTo) {\n    return minTo + ((current - minFrom) / (maxFrom - minFrom)) * ((maxTo - minTo) / 1);\n  }\n\n  function blendColors(base, added) {\n\n    var mix = [];\n    mix[3] = 1 - (1 - added[3]) * (1 - base[3]); // alpha\n    mix[0] = Math.round((added[0] * added[3] / mix[3]) + (base[0] * base[3] * (1 - added[3]) / mix[3])); // red\n    mix[1] = Math.round((added[1] * added[3] / mix[3]) + (base[1] * base[3] * (1 - added[3]) / mix[3])); // green\n    mix[2] = Math.round((added[2] * added[3] / mix[3]) + (base[2] * base[3] * (1 - added[3]) / mix[3])); // blue\n\n    return mix;\n  }\n  \n  return this;\n  \n}","__.placePoint = function (params) {\n\n  const s = {\n      0: {\n        s: .5\n      },\n      1: {\n        s: .5\n      },\n      2: {\n        s: .5\n      },\n      3: {\n        s: 1\n      },\n      4: {\n        s: 1\n      },\n      5: {\n        s: 2\n      },\n      6: {\n        s: 2\n      },\n      7: {\n        s: 3\n      },\n      8: {\n        s: 3\n      },\n      9: {\n        s: 3\n      },\n      10: {\n        s: 4\n      },\n      11: {\n        s: 4\n      },\n      12: {\n        s: 4\n      },\n      13: {\n        s: 6\n      },\n      14: {\n        s: 6\n      },\n      15: {\n        s: 6\n      },\n      16: {\n        s: 12\n      },\n      17: {\n        s: 12\n      },\n      18: {\n        s: 12\n      }\n    },\n    size = s[params.zoom].s * 2,\n    color = __.colorize().eco(params.place);\n  \n  params.ctx.fillStyle = color;\n\n  var dot = params.canvasOverlay._map.latLngToContainerPoint([params.place.point[1], params.place.point[0]]);\n  params.ctx.beginPath();\n  params.ctx.arc(dot.x, dot.y, size / 2, 0, Math.PI * 2);\n  params.ctx.fill();\n  params.ctx.closePath();\n\n\n  return {\n    x1: dot.x,\n    y1: dot.y,\n    x2: dot.x + size,\n    y2: dot.y + size,\n    color: color,\n    visible : params.place.canvas.visible\n  };\n\n}"],"sourceRoot":"/source/"}